"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.buildiOS = void 0;
const tslib_1 = require("tslib");
const utils_fs_1 = require("@ionic/utils-fs");
const path_1 = require("path");
const rimraf_1 = tslib_1.__importDefault(require("rimraf"));
const common_1 = require("../common");
const log_1 = require("../log");
const subprocess_1 = require("../util/subprocess");
async function buildiOS(config, buildOptions) {
    var _a;
    const theScheme = (_a = buildOptions.scheme) !== null && _a !== void 0 ? _a : 'App';
    await common_1.runTask('Building xArchive', async () => subprocess_1.runCommand('xcodebuild', [
        '-workspace',
        `${theScheme}.xcworkspace`,
        '-scheme',
        `${theScheme}`,
        '-destination',
        `generic/platform=iOS`,
        '-archivePath',
        `${theScheme}.xcarchive`,
        'archive',
    ], {
        cwd: config.ios.nativeProjectDirAbs,
    }));
    const archivePlistContents = `<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>method</key>
<string>app-store</string>
</dict>
</plist>`;
    const archivePlistPath = path_1.join(`${config.ios.nativeProjectDirAbs}`, 'archive.plist');
    utils_fs_1.writeFileSync(archivePlistPath, archivePlistContents);
    await common_1.runTask('Building IPA', async () => subprocess_1.runCommand('xcodebuild', [
        'archive',
        '-archivePath',
        `${theScheme}.xcarchive`,
        '-exportArchive',
        '-exportOptionsPlist',
        'archive.plist',
        '-exportPath',
        'output',
        '-allowProvisioningUpdates',
    ], {
        cwd: config.ios.nativeProjectDirAbs,
    }));
    await common_1.runTask('Cleaning up', async () => {
        utils_fs_1.unlinkSync(archivePlistPath);
        rimraf_1.default.sync(path_1.join(config.ios.nativeProjectDirAbs, `${theScheme}.xcarchive`));
    });
    log_1.logSuccess(`Successfully generated an IPA at: ${path_1.join(config.ios.nativeProjectDirAbs, 'output')}`);
}
exports.buildiOS = buildiOS;
