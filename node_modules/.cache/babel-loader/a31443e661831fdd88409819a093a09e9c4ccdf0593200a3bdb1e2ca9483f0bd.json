{"ast":null,"code":"import _defineProperty from \"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classCallCheck from \"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _regeneratorRuntime from \"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { writeTask, proxyCustomElement, HTMLElement, createEvent, readTask, h, Host } from '@stencil/core/internal/client';\nimport { a as isPlatform, b as getIonMode } from './ionic-global.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier.js';\nimport { I as ION_CONTENT_ELEMENT_SELECTOR, p as printIonContentErrorMsg, b as ION_CONTENT_CLASS_SELECTOR, g as getScrollElement } from './index9.js';\nimport { t as transitionEndAsync, c as componentOnReady, h as clamp, g as getElementRoot, r as raf } from './helpers.js';\nimport { h as hapticImpact } from './haptic.js';\nimport { c as createAnimation } from './animation.js';\nvar getRefresherAnimationType = function getRefresherAnimationType(contentEl) {\n  var previousSibling = contentEl.previousElementSibling;\n  var hasHeader = previousSibling !== null && previousSibling.tagName === 'ION-HEADER';\n  return hasHeader ? 'translate' : 'scale';\n};\nvar createPullingAnimation = function createPullingAnimation(type, pullingSpinner, refresherEl) {\n  return type === 'scale' ? createScaleAnimation(pullingSpinner, refresherEl) : createTranslateAnimation(pullingSpinner, refresherEl);\n};\nvar createBaseAnimation = function createBaseAnimation(pullingRefresherIcon) {\n  var spinner = pullingRefresherIcon.querySelector('ion-spinner');\n  var circle = spinner.shadowRoot.querySelector('circle');\n  var spinnerArrowContainer = pullingRefresherIcon.querySelector('.spinner-arrow-container');\n  var arrowContainer = pullingRefresherIcon.querySelector('.arrow-container');\n  var arrow = arrowContainer ? arrowContainer.querySelector('ion-icon') : null;\n  var baseAnimation = createAnimation().duration(1000).easing('ease-out');\n  var spinnerArrowContainerAnimation = createAnimation().addElement(spinnerArrowContainer).keyframes([{\n    offset: 0,\n    opacity: '0.3'\n  }, {\n    offset: 0.45,\n    opacity: '0.3'\n  }, {\n    offset: 0.55,\n    opacity: '1'\n  }, {\n    offset: 1,\n    opacity: '1'\n  }]);\n  var circleInnerAnimation = createAnimation().addElement(circle).keyframes([{\n    offset: 0,\n    strokeDasharray: '1px, 200px'\n  }, {\n    offset: 0.2,\n    strokeDasharray: '1px, 200px'\n  }, {\n    offset: 0.55,\n    strokeDasharray: '100px, 200px'\n  }, {\n    offset: 1,\n    strokeDasharray: '100px, 200px'\n  }]);\n  var circleOuterAnimation = createAnimation().addElement(spinner).keyframes([{\n    offset: 0,\n    transform: 'rotate(-90deg)'\n  }, {\n    offset: 1,\n    transform: 'rotate(210deg)'\n  }]);\n  /**\n   * Only add arrow animation if present\n   * this allows users to customize the spinners\n   * without errors being thrown\n   */\n  if (arrowContainer && arrow) {\n    var arrowContainerAnimation = createAnimation().addElement(arrowContainer).keyframes([{\n      offset: 0,\n      transform: 'rotate(0deg)'\n    }, {\n      offset: 0.3,\n      transform: 'rotate(0deg)'\n    }, {\n      offset: 0.55,\n      transform: 'rotate(280deg)'\n    }, {\n      offset: 1,\n      transform: 'rotate(400deg)'\n    }]);\n    var arrowAnimation = createAnimation().addElement(arrow).keyframes([{\n      offset: 0,\n      transform: 'translateX(2px) scale(0)'\n    }, {\n      offset: 0.3,\n      transform: 'translateX(2px) scale(0)'\n    }, {\n      offset: 0.55,\n      transform: 'translateX(-1.5px) scale(1)'\n    }, {\n      offset: 1,\n      transform: 'translateX(-1.5px) scale(1)'\n    }]);\n    baseAnimation.addAnimation([arrowContainerAnimation, arrowAnimation]);\n  }\n  return baseAnimation.addAnimation([spinnerArrowContainerAnimation, circleInnerAnimation, circleOuterAnimation]);\n};\nvar createScaleAnimation = function createScaleAnimation(pullingRefresherIcon, refresherEl) {\n  /**\n   * Do not take the height of the refresher icon\n   * because at this point the DOM has not updated,\n   * so the refresher icon is still hidden with\n   * display: none.\n   * The `ion-refresher` container height\n   * is roughly the amount we need to offset\n   * the icon by when pulling down.\n   */\n  var height = refresherEl.clientHeight;\n  var spinnerAnimation = createAnimation().addElement(pullingRefresherIcon).keyframes([{\n    offset: 0,\n    transform: \"scale(0) translateY(-\".concat(height, \"px)\")\n  }, {\n    offset: 1,\n    transform: 'scale(1) translateY(100px)'\n  }]);\n  return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\nvar createTranslateAnimation = function createTranslateAnimation(pullingRefresherIcon, refresherEl) {\n  /**\n   * Do not take the height of the refresher icon\n   * because at this point the DOM has not updated,\n   * so the refresher icon is still hidden with\n   * display: none.\n   * The `ion-refresher` container height\n   * is roughly the amount we need to offset\n   * the icon by when pulling down.\n   */\n  var height = refresherEl.clientHeight;\n  var spinnerAnimation = createAnimation().addElement(pullingRefresherIcon).keyframes([{\n    offset: 0,\n    transform: \"translateY(-\".concat(height, \"px)\")\n  }, {\n    offset: 1,\n    transform: 'translateY(100px)'\n  }]);\n  return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\nvar createSnapBackAnimation = function createSnapBackAnimation(pullingRefresherIcon) {\n  return createAnimation().duration(125).addElement(pullingRefresherIcon).fromTo('transform', 'translateY(var(--ion-pulling-refresher-translate, 100px))', 'translateY(0px)');\n};\n// iOS Native Refresher\n// -----------------------------\nvar setSpinnerOpacity = function setSpinnerOpacity(spinner, opacity) {\n  spinner.style.setProperty('opacity', opacity.toString());\n};\nvar handleScrollWhilePulling = function handleScrollWhilePulling(ticks, numTicks, pullAmount) {\n  var max = 1;\n  writeTask(function () {\n    ticks.forEach(function (el, i) {\n      /**\n       * Compute the opacity of each tick\n       * mark as a percentage of the pullAmount\n       * offset by max / numTicks so\n       * the tick marks are shown staggered.\n       */\n      var min = i * (max / numTicks);\n      var range = max - min;\n      var start = pullAmount - min;\n      var progression = clamp(0, start / range, 1);\n      el.style.setProperty('opacity', progression.toString());\n    });\n  });\n};\nvar handleScrollWhileRefreshing = function handleScrollWhileRefreshing(spinner, lastVelocityY) {\n  writeTask(function () {\n    // If user pulls down quickly, the spinner should spin faster\n    spinner.style.setProperty('--refreshing-rotation-duration', lastVelocityY >= 1.0 ? '0.5s' : '2s');\n    spinner.style.setProperty('opacity', '1');\n  });\n};\nvar translateElement = function translateElement(el, value) {\n  var duration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 200;\n  if (!el) {\n    return Promise.resolve();\n  }\n  var trans = transitionEndAsync(el, duration);\n  writeTask(function () {\n    el.style.setProperty('transition', \"\".concat(duration, \"ms all ease-out\"));\n    if (value === undefined) {\n      el.style.removeProperty('transform');\n    } else {\n      el.style.setProperty('transform', \"translate3d(0px, \".concat(value, \", 0px)\"));\n    }\n  });\n  return trans;\n};\n// Utils\n// -----------------------------\nvar shouldUseNativeRefresher = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(referenceEl, mode) {\n    var refresherContent, pullingSpinner, refreshingSpinner;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          refresherContent = referenceEl.querySelector('ion-refresher-content');\n          if (refresherContent) {\n            _context.next = 3;\n            break;\n          }\n          return _context.abrupt(\"return\", Promise.resolve(false));\n        case 3:\n          _context.next = 5;\n          return new Promise(function (resolve) {\n            return componentOnReady(refresherContent, resolve);\n          });\n        case 5:\n          pullingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n          refreshingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n          return _context.abrupt(\"return\", pullingSpinner !== null && refreshingSpinner !== null && (mode === 'ios' && isPlatform('mobile') && referenceEl.style.webkitOverflowScrolling !== undefined || mode === 'md'));\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function shouldUseNativeRefresher(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar refresherIosCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-ios .refresher-pulling-icon,.refresher-ios .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-ios .refresher-pulling-text,.refresher-ios .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-lines-ios line,.refresher-ios .refresher-refreshing .spinner-lines-small-ios line,.refresher-ios .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-bubbles circle,.refresher-ios .refresher-refreshing .spinner-circles circle,.refresher-ios .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}.refresher-native .refresher-refreshing ion-spinner{--refreshing-rotation-duration:2s;display:none;-webkit-animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards;animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards}.refresher-native .refresher-refreshing{display:none;-webkit-animation:250ms linear refresher-pop forwards;animation:250ms linear refresher-pop forwards}.refresher-native ion-spinner{width:32px;height:32px;color:var(--ion-color-step-450, #747577)}.refresher-native.refresher-refreshing .refresher-pulling ion-spinner,.refresher-native.refresher-completing .refresher-pulling ion-spinner{display:none}.refresher-native.refresher-refreshing .refresher-refreshing ion-spinner,.refresher-native.refresher-completing .refresher-refreshing ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-pulling ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-refreshing ion-spinner{display:none}.refresher-native.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0) rotate(180deg);transform:scale(0) rotate(180deg);-webkit-transition:300ms;transition:300ms}@-webkit-keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@-webkit-keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}@keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}\";\nvar refresherMdCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-md .refresher-pulling-icon,.refresher-md .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-md .refresher-pulling-text,.refresher-md .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-lines-md line,.refresher-md .refresher-refreshing .spinner-lines-small-md line,.refresher-md .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-bubbles circle,.refresher-md .refresher-refreshing .spinner-circles circle,.refresher-md .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;width:24px;height:24px;color:var(--ion-color-primary, #3880ff)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native .spinner-arrow-container{display:inherit}ion-refresher.refresher-native .arrow-container{display:block;position:absolute;width:24px;height:24px}ion-refresher.refresher-native .arrow-container ion-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;left:0;right:0;bottom:-4px;position:absolute;color:var(--ion-color-primary, #3880ff);font-size:12px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .arrow-container ion-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native.refresher-pulling ion-refresher-content .refresher-pulling,ion-refresher.refresher-native.refresher-ready ion-refresher-content .refresher-pulling{display:-ms-flexbox;display:flex}ion-refresher.refresher-native.refresher-refreshing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-completing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-cancelling ion-refresher-content .refresher-refreshing{display:-ms-flexbox;display:flex}ion-refresher.refresher-native .refresher-pulling-icon{-webkit-transform:translateY(calc(-100% - 10px));transform:translateY(calc(-100% - 10px))}ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;border-radius:100%;padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;display:-ms-flexbox;display:flex;border:1px solid var(--ion-color-step-200, #ececec);background:var(--ion-color-step-250, #ffffff);-webkit-box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1);box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}\";\nvar Refresher = /*@__PURE__*/proxyCustomElement( /*#__PURE__*/function (_HTMLElement) {\n  _inherits(_class, _HTMLElement);\n  var _super = _createSuper(_class);\n  function _class() {\n    var _this;\n    _classCallCheck(this, _class);\n    _this = _super.call(this);\n    _this.__registerHost();\n    _this.ionRefresh = createEvent(_assertThisInitialized(_this), \"ionRefresh\", 7);\n    _this.ionPull = createEvent(_assertThisInitialized(_this), \"ionPull\", 7);\n    _this.ionStart = createEvent(_assertThisInitialized(_this), \"ionStart\", 7);\n    _this.appliedStyles = false;\n    _this.didStart = false;\n    _this.progress = 0;\n    _this.pointerDown = false;\n    _this.needsCompletion = false;\n    _this.didRefresh = false;\n    _this.lastVelocityY = 0;\n    _this.animations = [];\n    _this.nativeRefresher = false;\n    /**\n     * The current state which the refresher is in. The refresher's states include:\n     *\n     * - `inactive` - The refresher is not being pulled down or refreshing and is currently hidden.\n     * - `pulling` - The user is actively pulling down the refresher, but has not reached the point yet that if the user lets go, it'll refresh.\n     * - `cancelling` - The user pulled down the refresher and let go, but did not pull down far enough to kick off the `refreshing` state. After letting go, the refresher is in the `cancelling` state while it is closing, and will go back to the `inactive` state once closed.\n     * - `ready` - The user has pulled down the refresher far enough that if they let go, it'll begin the `refreshing` state.\n     * - `refreshing` - The refresher is actively waiting on the async operation to end. Once the refresh handler calls `complete()` it will begin the `completing` state.\n     * - `completing` - The `refreshing` state has finished and the refresher is in the way of closing itself. Once closed, the refresher will go back to the `inactive` state.\n     */\n    _this.state = 1 /* RefresherState.Inactive */;\n    /**\n     * The minimum distance the user must pull down until the\n     * refresher will go into the `refreshing` state.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    _this.pullMin = 60;\n    /**\n     * The maximum distance of the pull until the refresher\n     * will automatically go into the `refreshing` state.\n     * Defaults to the result of `pullMin + 60`.\n     * Does not apply when  the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    _this.pullMax = _this.pullMin + 60;\n    /**\n     * Time it takes to close the refresher.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    _this.closeDuration = '280ms';\n    /**\n     * Time it takes the refresher to snap back to the `refreshing` state.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    _this.snapbackDuration = '280ms';\n    /**\n     * How much to multiply the pull speed by. To slow the pull animation down,\n     * pass a number less than `1`. To speed up the pull, pass a number greater\n     * than `1`. The default value is `1` which is equal to the speed of the cursor.\n     * If a negative value is passed in, the factor will be `1` instead.\n     *\n     * For example: If the value passed is `1.2` and the content is dragged by\n     * `10` pixels, instead of `10` pixels the content will be pulled by `12` pixels\n     * (an increase of 20 percent). If the value passed is `0.8`, the dragged amount\n     * will be `8` pixels, less than the amount the cursor has moved.\n     *\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    _this.pullFactor = 1;\n    /**\n     * If `true`, the refresher will be hidden.\n     */\n    _this.disabled = false;\n    return _this;\n  }\n  _createClass(_class, [{\n    key: \"disabledChanged\",\n    value: function disabledChanged() {\n      if (this.gesture) {\n        this.gesture.enable(!this.disabled);\n      }\n    }\n  }, {\n    key: \"checkNativeRefresher\",\n    value: function () {\n      var _checkNativeRefresher = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var useNativeRefresher, contentEl;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return shouldUseNativeRefresher(this.el, getIonMode(this));\n            case 2:\n              useNativeRefresher = _context2.sent;\n              if (useNativeRefresher && !this.nativeRefresher) {\n                contentEl = this.el.closest('ion-content');\n                this.setupNativeRefresher(contentEl);\n              } else if (!useNativeRefresher) {\n                this.destroyNativeRefresher();\n              }\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function checkNativeRefresher() {\n        return _checkNativeRefresher.apply(this, arguments);\n      }\n      return checkNativeRefresher;\n    }()\n  }, {\n    key: \"destroyNativeRefresher\",\n    value: function destroyNativeRefresher() {\n      if (this.scrollEl && this.scrollListenerCallback) {\n        this.scrollEl.removeEventListener('scroll', this.scrollListenerCallback);\n        this.scrollListenerCallback = undefined;\n      }\n      this.nativeRefresher = false;\n    }\n  }, {\n    key: \"resetNativeRefresher\",\n    value: function () {\n      var _resetNativeRefresher = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(el, state) {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              this.state = state;\n              if (!(getIonMode(this) === 'ios')) {\n                _context3.next = 6;\n                break;\n              }\n              _context3.next = 4;\n              return translateElement(el, undefined, 300);\n            case 4:\n              _context3.next = 8;\n              break;\n            case 6:\n              _context3.next = 8;\n              return transitionEndAsync(this.el.querySelector('.refresher-refreshing-icon'), 200);\n            case 8:\n              this.didRefresh = false;\n              this.needsCompletion = false;\n              this.pointerDown = false;\n              this.animations.forEach(function (ani) {\n                return ani.destroy();\n              });\n              this.animations = [];\n              this.progress = 0;\n              this.state = 1 /* RefresherState.Inactive */;\n            case 15:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function resetNativeRefresher(_x3, _x4) {\n        return _resetNativeRefresher.apply(this, arguments);\n      }\n      return resetNativeRefresher;\n    }()\n  }, {\n    key: \"setupiOSNativeRefresher\",\n    value: function () {\n      var _setupiOSNativeRefresher = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(pullingSpinner, refreshingSpinner) {\n        var _this2 = this;\n        var ticks, MAX_PULL, NUM_TICKS;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              this.elementToTransform = this.scrollEl;\n              ticks = pullingSpinner.shadowRoot.querySelectorAll('svg');\n              MAX_PULL = this.scrollEl.clientHeight * 0.16;\n              NUM_TICKS = ticks.length;\n              writeTask(function () {\n                return ticks.forEach(function (el) {\n                  return el.style.setProperty('animation', 'none');\n                });\n              });\n              this.scrollListenerCallback = function () {\n                // If pointer is not on screen or refresher is not active, ignore scroll\n                if (!_this2.pointerDown && _this2.state === 1 /* RefresherState.Inactive */) {\n                  return;\n                }\n                readTask(function () {\n                  // PTR should only be active when overflow scrolling at the top\n                  var scrollTop = _this2.scrollEl.scrollTop;\n                  var refresherHeight = _this2.el.clientHeight;\n                  if (scrollTop > 0) {\n                    /**\n                     * If refresher is refreshing and user tries to scroll\n                     * progressively fade refresher out/in\n                     */\n                    if (_this2.state === 8 /* RefresherState.Refreshing */) {\n                      var ratio = clamp(0, scrollTop / (refresherHeight * 0.5), 1);\n                      writeTask(function () {\n                        return setSpinnerOpacity(refreshingSpinner, 1 - ratio);\n                      });\n                      return;\n                    }\n                    return;\n                  }\n                  if (_this2.pointerDown) {\n                    if (!_this2.didStart) {\n                      _this2.didStart = true;\n                      _this2.ionStart.emit();\n                    }\n                    // emit \"pulling\" on every move\n                    if (_this2.pointerDown) {\n                      _this2.ionPull.emit();\n                    }\n                  }\n                  /**\n                   * We want to delay the start of this gesture by ~30px\n                   * when initially pulling down so the refresher does not\n                   * overlap with the content. But when letting go of the\n                   * gesture before the refresher completes, we want the\n                   * refresher tick marks to quickly fade out.\n                   */\n                  var offset = _this2.didStart ? 30 : 0;\n                  var pullAmount = _this2.progress = clamp(0, (Math.abs(scrollTop) - offset) / MAX_PULL, 1);\n                  var shouldShowRefreshingSpinner = _this2.state === 8 /* RefresherState.Refreshing */ || pullAmount === 1;\n                  if (shouldShowRefreshingSpinner) {\n                    if (_this2.pointerDown) {\n                      handleScrollWhileRefreshing(refreshingSpinner, _this2.lastVelocityY);\n                    }\n                    if (!_this2.didRefresh) {\n                      _this2.beginRefresh();\n                      _this2.didRefresh = true;\n                      hapticImpact({\n                        style: 'light'\n                      });\n                      /**\n                       * Translate the content element otherwise when pointer is removed\n                       * from screen the scroll content will bounce back over the refresher\n                       */\n                      if (!_this2.pointerDown) {\n                        translateElement(_this2.elementToTransform, \"\".concat(refresherHeight, \"px\"));\n                      }\n                    }\n                  } else {\n                    _this2.state = 2 /* RefresherState.Pulling */;\n                    handleScrollWhilePulling(ticks, NUM_TICKS, pullAmount);\n                  }\n                });\n              };\n              this.scrollEl.addEventListener('scroll', this.scrollListenerCallback);\n              _context4.next = 9;\n              return import('./index2.js');\n            case 9:\n              this.gesture = _context4.sent.createGesture({\n                el: this.scrollEl,\n                gestureName: 'refresher',\n                gesturePriority: 31,\n                direction: 'y',\n                threshold: 5,\n                onStart: function onStart() {\n                  _this2.pointerDown = true;\n                  if (!_this2.didRefresh) {\n                    translateElement(_this2.elementToTransform, '0px');\n                  }\n                  /**\n                   * If the content had `display: none` when\n                   * the refresher was initialized, its clientHeight\n                   * will be 0. When the gesture starts, the content\n                   * will be visible, so try to get the correct\n                   * client height again. This is most common when\n                   * using the refresher in an ion-menu.\n                   */\n                  if (MAX_PULL === 0) {\n                    MAX_PULL = _this2.scrollEl.clientHeight * 0.16;\n                  }\n                },\n                onMove: function onMove(ev) {\n                  _this2.lastVelocityY = ev.velocityY;\n                },\n                onEnd: function onEnd() {\n                  _this2.pointerDown = false;\n                  _this2.didStart = false;\n                  if (_this2.needsCompletion) {\n                    _this2.resetNativeRefresher(_this2.elementToTransform, 32 /* RefresherState.Completing */);\n                    _this2.needsCompletion = false;\n                  } else if (_this2.didRefresh) {\n                    readTask(function () {\n                      return translateElement(_this2.elementToTransform, \"\".concat(_this2.el.clientHeight, \"px\"));\n                    });\n                  }\n                }\n              });\n              this.disabledChanged();\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function setupiOSNativeRefresher(_x5, _x6) {\n        return _setupiOSNativeRefresher.apply(this, arguments);\n      }\n      return setupiOSNativeRefresher;\n    }()\n  }, {\n    key: \"setupMDNativeRefresher\",\n    value: function () {\n      var _setupMDNativeRefresher = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(contentEl, pullingSpinner, refreshingSpinner) {\n        var _this3 = this;\n        var circle, pullingRefresherIcon, refreshingCircle;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              circle = getElementRoot(pullingSpinner).querySelector('circle');\n              pullingRefresherIcon = this.el.querySelector('ion-refresher-content .refresher-pulling-icon');\n              refreshingCircle = getElementRoot(refreshingSpinner).querySelector('circle');\n              if (circle !== null && refreshingCircle !== null) {\n                writeTask(function () {\n                  circle.style.setProperty('animation', 'none');\n                  // This lines up the animation on the refreshing spinner with the pulling spinner\n                  refreshingSpinner.style.setProperty('animation-delay', '-655ms');\n                  refreshingCircle.style.setProperty('animation-delay', '-655ms');\n                });\n              }\n              _context6.next = 6;\n              return import('./index2.js');\n            case 6:\n              this.gesture = _context6.sent.createGesture({\n                el: this.scrollEl,\n                gestureName: 'refresher',\n                gesturePriority: 31,\n                direction: 'y',\n                threshold: 5,\n                canStart: function canStart() {\n                  return _this3.state !== 8 /* RefresherState.Refreshing */ && _this3.state !== 32 /* RefresherState.Completing */ && _this3.scrollEl.scrollTop === 0;\n                },\n                onStart: function onStart(ev) {\n                  _this3.progress = 0;\n                  ev.data = {\n                    animation: undefined,\n                    didStart: false,\n                    cancelled: false\n                  };\n                },\n                onMove: function onMove(ev) {\n                  if (ev.velocityY < 0 && _this3.progress === 0 && !ev.data.didStart || ev.data.cancelled) {\n                    ev.data.cancelled = true;\n                    return;\n                  }\n                  if (!ev.data.didStart) {\n                    ev.data.didStart = true;\n                    _this3.state = 2 /* RefresherState.Pulling */;\n                    writeTask(function () {\n                      return _this3.scrollEl.style.setProperty('--overflow', 'hidden');\n                    });\n                    var animationType = getRefresherAnimationType(contentEl);\n                    var animation = createPullingAnimation(animationType, pullingRefresherIcon, _this3.el);\n                    ev.data.animation = animation;\n                    animation.progressStart(false, 0);\n                    _this3.ionStart.emit();\n                    _this3.animations.push(animation);\n                    return;\n                  }\n                  // Since we are using an easing curve, slow the gesture tracking down a bit\n                  _this3.progress = clamp(0, ev.deltaY / 180 * 0.5, 1);\n                  ev.data.animation.progressStep(_this3.progress);\n                  _this3.ionPull.emit();\n                },\n                onEnd: function onEnd(ev) {\n                  if (!ev.data.didStart) {\n                    return;\n                  }\n                  _this3.gesture.enable(false);\n                  writeTask(function () {\n                    return _this3.scrollEl.style.removeProperty('--overflow');\n                  });\n                  if (_this3.progress <= 0.4) {\n                    ev.data.animation.progressEnd(0, _this3.progress, 500).onFinish(function () {\n                      _this3.animations.forEach(function (ani) {\n                        return ani.destroy();\n                      });\n                      _this3.animations = [];\n                      _this3.gesture.enable(true);\n                      _this3.state = 1 /* RefresherState.Inactive */;\n                    });\n\n                    return;\n                  }\n                  var progress = getTimeGivenProgression([0, 0], [0, 0], [1, 1], [1, 1], _this3.progress)[0];\n                  var snapBackAnimation = createSnapBackAnimation(pullingRefresherIcon);\n                  _this3.animations.push(snapBackAnimation);\n                  writeTask( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n                    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n                      while (1) switch (_context5.prev = _context5.next) {\n                        case 0:\n                          pullingRefresherIcon.style.setProperty('--ion-pulling-refresher-translate', \"\".concat(progress * 100, \"px\"));\n                          ev.data.animation.progressEnd();\n                          _context5.next = 4;\n                          return snapBackAnimation.play();\n                        case 4:\n                          _this3.beginRefresh();\n                          ev.data.animation.destroy();\n                          _this3.gesture.enable(true);\n                        case 7:\n                        case \"end\":\n                          return _context5.stop();\n                      }\n                    }, _callee5);\n                  })));\n                }\n              });\n              this.disabledChanged();\n            case 8:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function setupMDNativeRefresher(_x7, _x8, _x9) {\n        return _setupMDNativeRefresher.apply(this, arguments);\n      }\n      return setupMDNativeRefresher;\n    }()\n  }, {\n    key: \"setupNativeRefresher\",\n    value: function () {\n      var _setupNativeRefresher = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(contentEl) {\n        var pullingSpinner, refreshingSpinner;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              if (!(this.scrollListenerCallback || !contentEl || this.nativeRefresher || !this.scrollEl)) {\n                _context7.next = 2;\n                break;\n              }\n              return _context7.abrupt(\"return\");\n            case 2:\n              /**\n               * If using non-native refresher before make sure\n               * we clean up any old CSS. This can happen when\n               * a user manually calls the refresh method in a\n               * component create callback before the native\n               * refresher is setup.\n               */\n              this.setCss(0, '', false, '');\n              this.nativeRefresher = true;\n              pullingSpinner = this.el.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n              refreshingSpinner = this.el.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n              if (getIonMode(this) === 'ios') {\n                this.setupiOSNativeRefresher(pullingSpinner, refreshingSpinner);\n              } else {\n                this.setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner);\n              }\n            case 7:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this);\n      }));\n      function setupNativeRefresher(_x10) {\n        return _setupNativeRefresher.apply(this, arguments);\n      }\n      return setupNativeRefresher;\n    }()\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.checkNativeRefresher();\n    }\n  }, {\n    key: \"connectedCallback\",\n    value: function () {\n      var _connectedCallback = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        var _this4 = this;\n        var contentEl;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              if (!(this.el.getAttribute('slot') !== 'fixed')) {\n                _context9.next = 3;\n                break;\n              }\n              console.error('Make sure you use: <ion-refresher slot=\"fixed\">');\n              return _context9.abrupt(\"return\");\n            case 3:\n              contentEl = this.el.closest(ION_CONTENT_ELEMENT_SELECTOR);\n              if (contentEl) {\n                _context9.next = 7;\n                break;\n              }\n              printIonContentErrorMsg(this.el);\n              return _context9.abrupt(\"return\");\n            case 7:\n              /**\n               * Waits for the content to be ready before querying the scroll\n               * or the background content element.\n               */\n              componentOnReady(contentEl, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n                var customScrollTarget;\n                return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n                  while (1) switch (_context8.prev = _context8.next) {\n                    case 0:\n                      customScrollTarget = contentEl.querySelector(ION_CONTENT_CLASS_SELECTOR);\n                      /**\n                       * Query the custom scroll target (if available), first. In refresher implementations,\n                       * the ion-refresher element will always be a direct child of ion-content (slot=\"fixed\"). By\n                       * querying the custom scroll target first and falling back to the ion-content element,\n                       * the correct scroll element will be returned by the implementation.\n                       */\n                      _context8.next = 3;\n                      return getScrollElement(customScrollTarget !== null && customScrollTarget !== void 0 ? customScrollTarget : contentEl);\n                    case 3:\n                      _this4.scrollEl = _context8.sent;\n                      _context8.next = 6;\n                      return contentEl.getBackgroundElement();\n                    case 6:\n                      _this4.backgroundContentEl = _context8.sent;\n                      _context8.next = 9;\n                      return shouldUseNativeRefresher(_this4.el, getIonMode(_this4));\n                    case 9:\n                      if (!_context8.sent) {\n                        _context8.next = 13;\n                        break;\n                      }\n                      _this4.setupNativeRefresher(contentEl);\n                      _context8.next = 17;\n                      break;\n                    case 13:\n                      _context8.next = 15;\n                      return import('./index2.js');\n                    case 15:\n                      _this4.gesture = _context8.sent.createGesture({\n                        el: contentEl,\n                        gestureName: 'refresher',\n                        gesturePriority: 31,\n                        direction: 'y',\n                        threshold: 20,\n                        passive: false,\n                        canStart: function canStart() {\n                          return _this4.canStart();\n                        },\n                        onStart: function onStart() {\n                          return _this4.onStart();\n                        },\n                        onMove: function onMove(ev) {\n                          return _this4.onMove(ev);\n                        },\n                        onEnd: function onEnd() {\n                          return _this4.onEnd();\n                        }\n                      });\n                      _this4.disabledChanged();\n                    case 17:\n                    case \"end\":\n                      return _context8.stop();\n                  }\n                }, _callee8);\n              })));\n            case 8:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, this);\n      }));\n      function connectedCallback() {\n        return _connectedCallback.apply(this, arguments);\n      }\n      return connectedCallback;\n    }()\n  }, {\n    key: \"disconnectedCallback\",\n    value: function disconnectedCallback() {\n      this.destroyNativeRefresher();\n      this.scrollEl = undefined;\n      if (this.gesture) {\n        this.gesture.destroy();\n        this.gesture = undefined;\n      }\n    }\n    /**\n     * Call `complete()` when your async operation has completed.\n     * For example, the `refreshing` state is while the app is performing\n     * an asynchronous operation, such as receiving more data from an\n     * AJAX request. Once the data has been received, you then call this\n     * method to signify that the refreshing has completed and to close\n     * the refresher. This method also changes the refresher's state from\n     * `refreshing` to `completing`.\n     */\n  }, {\n    key: \"complete\",\n    value: function () {\n      var _complete = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n        var _this5 = this;\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              if (this.nativeRefresher) {\n                this.needsCompletion = true;\n                // Do not reset scroll el until user removes pointer from screen\n                if (!this.pointerDown) {\n                  raf(function () {\n                    return raf(function () {\n                      return _this5.resetNativeRefresher(_this5.elementToTransform, 32 /* RefresherState.Completing */);\n                    });\n                  });\n                }\n              } else {\n                this.close(32 /* RefresherState.Completing */, '120ms');\n              }\n            case 1:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10, this);\n      }));\n      function complete() {\n        return _complete.apply(this, arguments);\n      }\n      return complete;\n    }()\n    /**\n     * Changes the refresher's state from `refreshing` to `cancelling`.\n     */\n  }, {\n    key: \"cancel\",\n    value: function () {\n      var _cancel = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {\n        var _this6 = this;\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) switch (_context11.prev = _context11.next) {\n            case 0:\n              if (this.nativeRefresher) {\n                // Do not reset scroll el until user removes pointer from screen\n                if (!this.pointerDown) {\n                  raf(function () {\n                    return raf(function () {\n                      return _this6.resetNativeRefresher(_this6.elementToTransform, 16 /* RefresherState.Cancelling */);\n                    });\n                  });\n                }\n              } else {\n                this.close(16 /* RefresherState.Cancelling */, '');\n              }\n            case 1:\n            case \"end\":\n              return _context11.stop();\n          }\n        }, _callee11, this);\n      }));\n      function cancel() {\n        return _cancel.apply(this, arguments);\n      }\n      return cancel;\n    }()\n    /**\n     * A number representing how far down the user has pulled.\n     * The number `0` represents the user hasn't pulled down at all. The\n     * number `1`, and anything greater than `1`, represents that the user\n     * has pulled far enough down that when they let go then the refresh will\n     * happen. If they let go and the number is less than `1`, then the\n     * refresh will not happen, and the content will return to it's original\n     * position.\n     */\n  }, {\n    key: \"getProgress\",\n    value: function getProgress() {\n      return Promise.resolve(this.progress);\n    }\n  }, {\n    key: \"canStart\",\n    value: function canStart() {\n      if (!this.scrollEl) {\n        return false;\n      }\n      if (this.state !== 1 /* RefresherState.Inactive */) {\n        return false;\n      }\n      // if the scrollTop is greater than zero then it's\n      // not possible to pull the content down yet\n      if (this.scrollEl.scrollTop > 0) {\n        return false;\n      }\n      return true;\n    }\n  }, {\n    key: \"onStart\",\n    value: function onStart() {\n      this.progress = 0;\n      this.state = 1 /* RefresherState.Inactive */;\n    }\n  }, {\n    key: \"onMove\",\n    value: function onMove(detail) {\n      if (!this.scrollEl) {\n        return;\n      }\n      // this method can get called like a bazillion times per second,\n      // so it's built to be as efficient as possible, and does its\n      // best to do any DOM read/writes only when absolutely necessary\n      // if multi-touch then get out immediately\n      var ev = detail.event;\n      if (ev.touches !== undefined && ev.touches.length > 1) {\n        return;\n      }\n      // do nothing if it's actively refreshing\n      // or it's in the way of closing\n      // or this was never a startY\n      if ((this.state & 56 /* RefresherState._BUSY_ */) !== 0) {\n        return;\n      }\n      var pullFactor = Number.isNaN(this.pullFactor) || this.pullFactor < 0 ? 1 : this.pullFactor;\n      var deltaY = detail.deltaY * pullFactor;\n      // don't bother if they're scrolling up\n      // and have not already started dragging\n      if (deltaY <= 0) {\n        // the current Y is higher than the starting Y\n        // so they scrolled up enough to be ignored\n        this.progress = 0;\n        this.state = 1 /* RefresherState.Inactive */;\n        if (this.appliedStyles) {\n          // reset the styles only if they were applied\n          this.setCss(0, '', false, '');\n          return;\n        }\n        return;\n      }\n      if (this.state === 1 /* RefresherState.Inactive */) {\n        // this refresh is not already actively pulling down\n        // get the content's scrollTop\n        var scrollHostScrollTop = this.scrollEl.scrollTop;\n        // if the scrollTop is greater than zero then it's\n        // not possible to pull the content down yet\n        if (scrollHostScrollTop > 0) {\n          this.progress = 0;\n          return;\n        }\n        // content scrolled all the way to the top, and dragging down\n        this.state = 2 /* RefresherState.Pulling */;\n      }\n      // prevent native scroll events\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      // the refresher is actively pulling at this point\n      // move the scroll element within the content element\n      this.setCss(deltaY, '0ms', true, '');\n      if (deltaY === 0) {\n        // don't continue if there's no delta yet\n        this.progress = 0;\n        return;\n      }\n      var pullMin = this.pullMin;\n      // set pull progress\n      this.progress = deltaY / pullMin;\n      // emit \"start\" if it hasn't started yet\n      if (!this.didStart) {\n        this.didStart = true;\n        this.ionStart.emit();\n      }\n      // emit \"pulling\" on every move\n      this.ionPull.emit();\n      // do nothing if the delta is less than the pull threshold\n      if (deltaY < pullMin) {\n        // ensure it stays in the pulling state, cuz its not ready yet\n        this.state = 2 /* RefresherState.Pulling */;\n        return;\n      }\n      if (deltaY > this.pullMax) {\n        // they pulled farther than the max, so kick off the refresh\n        this.beginRefresh();\n        return;\n      }\n      // pulled farther than the pull min!!\n      // it is now in the `ready` state!!\n      // if they let go then it'll refresh, kerpow!!\n      this.state = 4 /* RefresherState.Ready */;\n      return;\n    }\n  }, {\n    key: \"onEnd\",\n    value: function onEnd() {\n      // only run in a zone when absolutely necessary\n      if (this.state === 4 /* RefresherState.Ready */) {\n        // they pulled down far enough, so it's ready to refresh\n        this.beginRefresh();\n      } else if (this.state === 2 /* RefresherState.Pulling */) {\n        // they were pulling down, but didn't pull down far enough\n        // set the content back to it's original location\n        // and close the refresher\n        // set that the refresh is actively cancelling\n        this.cancel();\n      }\n    }\n  }, {\n    key: \"beginRefresh\",\n    value: function beginRefresh() {\n      // assumes we're already back in a zone\n      // they pulled down far enough, so it's ready to refresh\n      this.state = 8 /* RefresherState.Refreshing */;\n      // place the content in a hangout position while it thinks\n      this.setCss(this.pullMin, this.snapbackDuration, true, '');\n      // emit \"refresh\" because it was pulled down far enough\n      // and they let go to begin refreshing\n      this.ionRefresh.emit({\n        complete: this.complete.bind(this)\n      });\n    }\n  }, {\n    key: \"close\",\n    value: function close(state, delay) {\n      var _this7 = this;\n      // create fallback timer incase something goes wrong with transitionEnd event\n      setTimeout(function () {\n        _this7.state = 1 /* RefresherState.Inactive */;\n        _this7.progress = 0;\n        _this7.didStart = false;\n        _this7.setCss(0, '0ms', false, '');\n      }, 600);\n      // reset set the styles on the scroll element\n      // set that the refresh is actively cancelling/completing\n      this.state = state;\n      this.setCss(0, this.closeDuration, true, delay);\n    }\n  }, {\n    key: \"setCss\",\n    value: function setCss(y, duration, overflowVisible, delay) {\n      var _this8 = this;\n      if (this.nativeRefresher) {\n        return;\n      }\n      this.appliedStyles = y > 0;\n      writeTask(function () {\n        if (_this8.scrollEl && _this8.backgroundContentEl) {\n          var scrollStyle = _this8.scrollEl.style;\n          var backgroundStyle = _this8.backgroundContentEl.style;\n          scrollStyle.transform = backgroundStyle.transform = y > 0 ? \"translateY(\".concat(y, \"px) translateZ(0px)\") : '';\n          scrollStyle.transitionDuration = backgroundStyle.transitionDuration = duration;\n          scrollStyle.transitionDelay = backgroundStyle.transitionDelay = delay;\n          scrollStyle.overflow = overflowVisible ? 'hidden' : '';\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _class2;\n      var mode = getIonMode(this);\n      return h(Host, {\n        slot: \"fixed\",\n        class: (_class2 = {}, _defineProperty(_class2, mode, true), _defineProperty(_class2, \"refresher-\".concat(mode), true), _defineProperty(_class2, 'refresher-native', this.nativeRefresher), _defineProperty(_class2, 'refresher-active', this.state !== 1), _defineProperty(_class2, 'refresher-pulling', this.state === 2), _defineProperty(_class2, 'refresher-ready', this.state === 4), _defineProperty(_class2, 'refresher-refreshing', this.state === 8), _defineProperty(_class2, 'refresher-cancelling', this.state === 16), _defineProperty(_class2, 'refresher-completing', this.state === 32), _class2)\n      });\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return this;\n    }\n  }], [{\n    key: \"watchers\",\n    get: function get() {\n      return {\n        \"disabled\": [\"disabledChanged\"]\n      };\n    }\n  }, {\n    key: \"style\",\n    get: function get() {\n      return {\n        ios: refresherIosCss,\n        md: refresherMdCss\n      };\n    }\n  }]);\n  return _class;\n}(HTMLElement), [32, \"ion-refresher\", {\n  \"pullMin\": [2, \"pull-min\"],\n  \"pullMax\": [2, \"pull-max\"],\n  \"closeDuration\": [1, \"close-duration\"],\n  \"snapbackDuration\": [1, \"snapback-duration\"],\n  \"pullFactor\": [2, \"pull-factor\"],\n  \"disabled\": [4],\n  \"nativeRefresher\": [32],\n  \"state\": [32],\n  \"complete\": [64],\n  \"cancel\": [64],\n  \"getProgress\": [64]\n}]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  var components = [\"ion-refresher\"];\n  components.forEach(function (tagName) {\n    switch (tagName) {\n      case \"ion-refresher\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Refresher);\n        }\n        break;\n    }\n  });\n}\nvar IonRefresher = Refresher;\nvar defineCustomElement = defineCustomElement$1;\nexport { IonRefresher, defineCustomElement };","map":{"version":3,"names":["writeTask","proxyCustomElement","HTMLElement","createEvent","readTask","h","Host","a","isPlatform","b","getIonMode","g","getTimeGivenProgression","I","ION_CONTENT_ELEMENT_SELECTOR","p","printIonContentErrorMsg","ION_CONTENT_CLASS_SELECTOR","getScrollElement","t","transitionEndAsync","c","componentOnReady","clamp","getElementRoot","r","raf","hapticImpact","createAnimation","getRefresherAnimationType","contentEl","previousSibling","previousElementSibling","hasHeader","tagName","createPullingAnimation","type","pullingSpinner","refresherEl","createScaleAnimation","createTranslateAnimation","createBaseAnimation","pullingRefresherIcon","spinner","querySelector","circle","shadowRoot","spinnerArrowContainer","arrowContainer","arrow","baseAnimation","duration","easing","spinnerArrowContainerAnimation","addElement","keyframes","offset","opacity","circleInnerAnimation","strokeDasharray","circleOuterAnimation","transform","arrowContainerAnimation","arrowAnimation","addAnimation","height","clientHeight","spinnerAnimation","createSnapBackAnimation","fromTo","setSpinnerOpacity","style","setProperty","toString","handleScrollWhilePulling","ticks","numTicks","pullAmount","max","forEach","el","i","min","range","start","progression","handleScrollWhileRefreshing","lastVelocityY","translateElement","value","Promise","resolve","trans","undefined","removeProperty","shouldUseNativeRefresher","referenceEl","mode","refresherContent","refreshingSpinner","webkitOverflowScrolling","refresherIosCss","refresherMdCss","Refresher","__registerHost","ionRefresh","ionPull","ionStart","appliedStyles","didStart","progress","pointerDown","needsCompletion","didRefresh","animations","nativeRefresher","state","pullMin","pullMax","closeDuration","snapbackDuration","pullFactor","disabled","gesture","enable","useNativeRefresher","closest","setupNativeRefresher","destroyNativeRefresher","scrollEl","scrollListenerCallback","removeEventListener","ani","destroy","elementToTransform","querySelectorAll","MAX_PULL","NUM_TICKS","length","scrollTop","refresherHeight","ratio","emit","Math","abs","shouldShowRefreshingSpinner","beginRefresh","addEventListener","createGesture","gestureName","gesturePriority","direction","threshold","onStart","onMove","ev","velocityY","onEnd","resetNativeRefresher","disabledChanged","refreshingCircle","canStart","data","animation","cancelled","animationType","progressStart","push","deltaY","progressStep","progressEnd","onFinish","snapBackAnimation","play","setCss","setupiOSNativeRefresher","setupMDNativeRefresher","checkNativeRefresher","getAttribute","console","error","customScrollTarget","getBackgroundElement","backgroundContentEl","passive","close","detail","event","touches","Number","isNaN","scrollHostScrollTop","cancelable","preventDefault","cancel","complete","bind","delay","setTimeout","y","overflowVisible","scrollStyle","backgroundStyle","transitionDuration","transitionDelay","overflow","slot","class","ios","md","defineCustomElement$1","customElements","components","get","define","IonRefresher","defineCustomElement"],"sources":["/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@ionic/core/components/ion-refresher.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { writeTask, proxyCustomElement, HTMLElement, createEvent, readTask, h, Host } from '@stencil/core/internal/client';\nimport { a as isPlatform, b as getIonMode } from './ionic-global.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier.js';\nimport { I as ION_CONTENT_ELEMENT_SELECTOR, p as printIonContentErrorMsg, b as ION_CONTENT_CLASS_SELECTOR, g as getScrollElement } from './index9.js';\nimport { t as transitionEndAsync, c as componentOnReady, h as clamp, g as getElementRoot, r as raf } from './helpers.js';\nimport { h as hapticImpact } from './haptic.js';\nimport { c as createAnimation } from './animation.js';\n\nconst getRefresherAnimationType = (contentEl) => {\n  const previousSibling = contentEl.previousElementSibling;\n  const hasHeader = previousSibling !== null && previousSibling.tagName === 'ION-HEADER';\n  return hasHeader ? 'translate' : 'scale';\n};\nconst createPullingAnimation = (type, pullingSpinner, refresherEl) => {\n  return type === 'scale'\n    ? createScaleAnimation(pullingSpinner, refresherEl)\n    : createTranslateAnimation(pullingSpinner, refresherEl);\n};\nconst createBaseAnimation = (pullingRefresherIcon) => {\n  const spinner = pullingRefresherIcon.querySelector('ion-spinner');\n  const circle = spinner.shadowRoot.querySelector('circle');\n  const spinnerArrowContainer = pullingRefresherIcon.querySelector('.spinner-arrow-container');\n  const arrowContainer = pullingRefresherIcon.querySelector('.arrow-container');\n  const arrow = arrowContainer ? arrowContainer.querySelector('ion-icon') : null;\n  const baseAnimation = createAnimation().duration(1000).easing('ease-out');\n  const spinnerArrowContainerAnimation = createAnimation()\n    .addElement(spinnerArrowContainer)\n    .keyframes([\n    { offset: 0, opacity: '0.3' },\n    { offset: 0.45, opacity: '0.3' },\n    { offset: 0.55, opacity: '1' },\n    { offset: 1, opacity: '1' },\n  ]);\n  const circleInnerAnimation = createAnimation()\n    .addElement(circle)\n    .keyframes([\n    { offset: 0, strokeDasharray: '1px, 200px' },\n    { offset: 0.2, strokeDasharray: '1px, 200px' },\n    { offset: 0.55, strokeDasharray: '100px, 200px' },\n    { offset: 1, strokeDasharray: '100px, 200px' },\n  ]);\n  const circleOuterAnimation = createAnimation()\n    .addElement(spinner)\n    .keyframes([\n    { offset: 0, transform: 'rotate(-90deg)' },\n    { offset: 1, transform: 'rotate(210deg)' },\n  ]);\n  /**\n   * Only add arrow animation if present\n   * this allows users to customize the spinners\n   * without errors being thrown\n   */\n  if (arrowContainer && arrow) {\n    const arrowContainerAnimation = createAnimation()\n      .addElement(arrowContainer)\n      .keyframes([\n      { offset: 0, transform: 'rotate(0deg)' },\n      { offset: 0.3, transform: 'rotate(0deg)' },\n      { offset: 0.55, transform: 'rotate(280deg)' },\n      { offset: 1, transform: 'rotate(400deg)' },\n    ]);\n    const arrowAnimation = createAnimation()\n      .addElement(arrow)\n      .keyframes([\n      { offset: 0, transform: 'translateX(2px) scale(0)' },\n      { offset: 0.3, transform: 'translateX(2px) scale(0)' },\n      { offset: 0.55, transform: 'translateX(-1.5px) scale(1)' },\n      { offset: 1, transform: 'translateX(-1.5px) scale(1)' },\n    ]);\n    baseAnimation.addAnimation([arrowContainerAnimation, arrowAnimation]);\n  }\n  return baseAnimation.addAnimation([spinnerArrowContainerAnimation, circleInnerAnimation, circleOuterAnimation]);\n};\nconst createScaleAnimation = (pullingRefresherIcon, refresherEl) => {\n  /**\n   * Do not take the height of the refresher icon\n   * because at this point the DOM has not updated,\n   * so the refresher icon is still hidden with\n   * display: none.\n   * The `ion-refresher` container height\n   * is roughly the amount we need to offset\n   * the icon by when pulling down.\n   */\n  const height = refresherEl.clientHeight;\n  const spinnerAnimation = createAnimation()\n    .addElement(pullingRefresherIcon)\n    .keyframes([\n    { offset: 0, transform: `scale(0) translateY(-${height}px)` },\n    { offset: 1, transform: 'scale(1) translateY(100px)' },\n  ]);\n  return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\nconst createTranslateAnimation = (pullingRefresherIcon, refresherEl) => {\n  /**\n   * Do not take the height of the refresher icon\n   * because at this point the DOM has not updated,\n   * so the refresher icon is still hidden with\n   * display: none.\n   * The `ion-refresher` container height\n   * is roughly the amount we need to offset\n   * the icon by when pulling down.\n   */\n  const height = refresherEl.clientHeight;\n  const spinnerAnimation = createAnimation()\n    .addElement(pullingRefresherIcon)\n    .keyframes([\n    { offset: 0, transform: `translateY(-${height}px)` },\n    { offset: 1, transform: 'translateY(100px)' },\n  ]);\n  return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\nconst createSnapBackAnimation = (pullingRefresherIcon) => {\n  return createAnimation()\n    .duration(125)\n    .addElement(pullingRefresherIcon)\n    .fromTo('transform', 'translateY(var(--ion-pulling-refresher-translate, 100px))', 'translateY(0px)');\n};\n// iOS Native Refresher\n// -----------------------------\nconst setSpinnerOpacity = (spinner, opacity) => {\n  spinner.style.setProperty('opacity', opacity.toString());\n};\nconst handleScrollWhilePulling = (ticks, numTicks, pullAmount) => {\n  const max = 1;\n  writeTask(() => {\n    ticks.forEach((el, i) => {\n      /**\n       * Compute the opacity of each tick\n       * mark as a percentage of the pullAmount\n       * offset by max / numTicks so\n       * the tick marks are shown staggered.\n       */\n      const min = i * (max / numTicks);\n      const range = max - min;\n      const start = pullAmount - min;\n      const progression = clamp(0, start / range, 1);\n      el.style.setProperty('opacity', progression.toString());\n    });\n  });\n};\nconst handleScrollWhileRefreshing = (spinner, lastVelocityY) => {\n  writeTask(() => {\n    // If user pulls down quickly, the spinner should spin faster\n    spinner.style.setProperty('--refreshing-rotation-duration', lastVelocityY >= 1.0 ? '0.5s' : '2s');\n    spinner.style.setProperty('opacity', '1');\n  });\n};\nconst translateElement = (el, value, duration = 200) => {\n  if (!el) {\n    return Promise.resolve();\n  }\n  const trans = transitionEndAsync(el, duration);\n  writeTask(() => {\n    el.style.setProperty('transition', `${duration}ms all ease-out`);\n    if (value === undefined) {\n      el.style.removeProperty('transform');\n    }\n    else {\n      el.style.setProperty('transform', `translate3d(0px, ${value}, 0px)`);\n    }\n  });\n  return trans;\n};\n// Utils\n// -----------------------------\nconst shouldUseNativeRefresher = async (referenceEl, mode) => {\n  const refresherContent = referenceEl.querySelector('ion-refresher-content');\n  if (!refresherContent) {\n    return Promise.resolve(false);\n  }\n  await new Promise((resolve) => componentOnReady(refresherContent, resolve));\n  const pullingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n  const refreshingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n  return (pullingSpinner !== null &&\n    refreshingSpinner !== null &&\n    ((mode === 'ios' && isPlatform('mobile') && referenceEl.style.webkitOverflowScrolling !== undefined) ||\n      mode === 'md'));\n};\n\nconst refresherIosCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-ios .refresher-pulling-icon,.refresher-ios .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-ios .refresher-pulling-text,.refresher-ios .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-lines-ios line,.refresher-ios .refresher-refreshing .spinner-lines-small-ios line,.refresher-ios .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-bubbles circle,.refresher-ios .refresher-refreshing .spinner-circles circle,.refresher-ios .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}.refresher-native .refresher-refreshing ion-spinner{--refreshing-rotation-duration:2s;display:none;-webkit-animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards;animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards}.refresher-native .refresher-refreshing{display:none;-webkit-animation:250ms linear refresher-pop forwards;animation:250ms linear refresher-pop forwards}.refresher-native ion-spinner{width:32px;height:32px;color:var(--ion-color-step-450, #747577)}.refresher-native.refresher-refreshing .refresher-pulling ion-spinner,.refresher-native.refresher-completing .refresher-pulling ion-spinner{display:none}.refresher-native.refresher-refreshing .refresher-refreshing ion-spinner,.refresher-native.refresher-completing .refresher-refreshing ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-pulling ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-refreshing ion-spinner{display:none}.refresher-native.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0) rotate(180deg);transform:scale(0) rotate(180deg);-webkit-transition:300ms;transition:300ms}@-webkit-keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@-webkit-keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}@keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}\";\n\nconst refresherMdCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-md .refresher-pulling-icon,.refresher-md .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-md .refresher-pulling-text,.refresher-md .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-lines-md line,.refresher-md .refresher-refreshing .spinner-lines-small-md line,.refresher-md .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-bubbles circle,.refresher-md .refresher-refreshing .spinner-circles circle,.refresher-md .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;width:24px;height:24px;color:var(--ion-color-primary, #3880ff)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native .spinner-arrow-container{display:inherit}ion-refresher.refresher-native .arrow-container{display:block;position:absolute;width:24px;height:24px}ion-refresher.refresher-native .arrow-container ion-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;left:0;right:0;bottom:-4px;position:absolute;color:var(--ion-color-primary, #3880ff);font-size:12px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .arrow-container ion-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native.refresher-pulling ion-refresher-content .refresher-pulling,ion-refresher.refresher-native.refresher-ready ion-refresher-content .refresher-pulling{display:-ms-flexbox;display:flex}ion-refresher.refresher-native.refresher-refreshing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-completing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-cancelling ion-refresher-content .refresher-refreshing{display:-ms-flexbox;display:flex}ion-refresher.refresher-native .refresher-pulling-icon{-webkit-transform:translateY(calc(-100% - 10px));transform:translateY(calc(-100% - 10px))}ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;border-radius:100%;padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;display:-ms-flexbox;display:flex;border:1px solid var(--ion-color-step-200, #ececec);background:var(--ion-color-step-250, #ffffff);-webkit-box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1);box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}\";\n\nconst Refresher = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.ionRefresh = createEvent(this, \"ionRefresh\", 7);\n    this.ionPull = createEvent(this, \"ionPull\", 7);\n    this.ionStart = createEvent(this, \"ionStart\", 7);\n    this.appliedStyles = false;\n    this.didStart = false;\n    this.progress = 0;\n    this.pointerDown = false;\n    this.needsCompletion = false;\n    this.didRefresh = false;\n    this.lastVelocityY = 0;\n    this.animations = [];\n    this.nativeRefresher = false;\n    /**\n     * The current state which the refresher is in. The refresher's states include:\n     *\n     * - `inactive` - The refresher is not being pulled down or refreshing and is currently hidden.\n     * - `pulling` - The user is actively pulling down the refresher, but has not reached the point yet that if the user lets go, it'll refresh.\n     * - `cancelling` - The user pulled down the refresher and let go, but did not pull down far enough to kick off the `refreshing` state. After letting go, the refresher is in the `cancelling` state while it is closing, and will go back to the `inactive` state once closed.\n     * - `ready` - The user has pulled down the refresher far enough that if they let go, it'll begin the `refreshing` state.\n     * - `refreshing` - The refresher is actively waiting on the async operation to end. Once the refresh handler calls `complete()` it will begin the `completing` state.\n     * - `completing` - The `refreshing` state has finished and the refresher is in the way of closing itself. Once closed, the refresher will go back to the `inactive` state.\n     */\n    this.state = 1 /* RefresherState.Inactive */;\n    /**\n     * The minimum distance the user must pull down until the\n     * refresher will go into the `refreshing` state.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.pullMin = 60;\n    /**\n     * The maximum distance of the pull until the refresher\n     * will automatically go into the `refreshing` state.\n     * Defaults to the result of `pullMin + 60`.\n     * Does not apply when  the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.pullMax = this.pullMin + 60;\n    /**\n     * Time it takes to close the refresher.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.closeDuration = '280ms';\n    /**\n     * Time it takes the refresher to snap back to the `refreshing` state.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.snapbackDuration = '280ms';\n    /**\n     * How much to multiply the pull speed by. To slow the pull animation down,\n     * pass a number less than `1`. To speed up the pull, pass a number greater\n     * than `1`. The default value is `1` which is equal to the speed of the cursor.\n     * If a negative value is passed in, the factor will be `1` instead.\n     *\n     * For example: If the value passed is `1.2` and the content is dragged by\n     * `10` pixels, instead of `10` pixels the content will be pulled by `12` pixels\n     * (an increase of 20 percent). If the value passed is `0.8`, the dragged amount\n     * will be `8` pixels, less than the amount the cursor has moved.\n     *\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.pullFactor = 1;\n    /**\n     * If `true`, the refresher will be hidden.\n     */\n    this.disabled = false;\n  }\n  disabledChanged() {\n    if (this.gesture) {\n      this.gesture.enable(!this.disabled);\n    }\n  }\n  async checkNativeRefresher() {\n    const useNativeRefresher = await shouldUseNativeRefresher(this.el, getIonMode(this));\n    if (useNativeRefresher && !this.nativeRefresher) {\n      const contentEl = this.el.closest('ion-content');\n      this.setupNativeRefresher(contentEl);\n    }\n    else if (!useNativeRefresher) {\n      this.destroyNativeRefresher();\n    }\n  }\n  destroyNativeRefresher() {\n    if (this.scrollEl && this.scrollListenerCallback) {\n      this.scrollEl.removeEventListener('scroll', this.scrollListenerCallback);\n      this.scrollListenerCallback = undefined;\n    }\n    this.nativeRefresher = false;\n  }\n  async resetNativeRefresher(el, state) {\n    this.state = state;\n    if (getIonMode(this) === 'ios') {\n      await translateElement(el, undefined, 300);\n    }\n    else {\n      await transitionEndAsync(this.el.querySelector('.refresher-refreshing-icon'), 200);\n    }\n    this.didRefresh = false;\n    this.needsCompletion = false;\n    this.pointerDown = false;\n    this.animations.forEach((ani) => ani.destroy());\n    this.animations = [];\n    this.progress = 0;\n    this.state = 1 /* RefresherState.Inactive */;\n  }\n  async setupiOSNativeRefresher(pullingSpinner, refreshingSpinner) {\n    this.elementToTransform = this.scrollEl;\n    const ticks = pullingSpinner.shadowRoot.querySelectorAll('svg');\n    let MAX_PULL = this.scrollEl.clientHeight * 0.16;\n    const NUM_TICKS = ticks.length;\n    writeTask(() => ticks.forEach((el) => el.style.setProperty('animation', 'none')));\n    this.scrollListenerCallback = () => {\n      // If pointer is not on screen or refresher is not active, ignore scroll\n      if (!this.pointerDown && this.state === 1 /* RefresherState.Inactive */) {\n        return;\n      }\n      readTask(() => {\n        // PTR should only be active when overflow scrolling at the top\n        const scrollTop = this.scrollEl.scrollTop;\n        const refresherHeight = this.el.clientHeight;\n        if (scrollTop > 0) {\n          /**\n           * If refresher is refreshing and user tries to scroll\n           * progressively fade refresher out/in\n           */\n          if (this.state === 8 /* RefresherState.Refreshing */) {\n            const ratio = clamp(0, scrollTop / (refresherHeight * 0.5), 1);\n            writeTask(() => setSpinnerOpacity(refreshingSpinner, 1 - ratio));\n            return;\n          }\n          return;\n        }\n        if (this.pointerDown) {\n          if (!this.didStart) {\n            this.didStart = true;\n            this.ionStart.emit();\n          }\n          // emit \"pulling\" on every move\n          if (this.pointerDown) {\n            this.ionPull.emit();\n          }\n        }\n        /**\n         * We want to delay the start of this gesture by ~30px\n         * when initially pulling down so the refresher does not\n         * overlap with the content. But when letting go of the\n         * gesture before the refresher completes, we want the\n         * refresher tick marks to quickly fade out.\n         */\n        const offset = this.didStart ? 30 : 0;\n        const pullAmount = (this.progress = clamp(0, (Math.abs(scrollTop) - offset) / MAX_PULL, 1));\n        const shouldShowRefreshingSpinner = this.state === 8 /* RefresherState.Refreshing */ || pullAmount === 1;\n        if (shouldShowRefreshingSpinner) {\n          if (this.pointerDown) {\n            handleScrollWhileRefreshing(refreshingSpinner, this.lastVelocityY);\n          }\n          if (!this.didRefresh) {\n            this.beginRefresh();\n            this.didRefresh = true;\n            hapticImpact({ style: 'light' });\n            /**\n             * Translate the content element otherwise when pointer is removed\n             * from screen the scroll content will bounce back over the refresher\n             */\n            if (!this.pointerDown) {\n              translateElement(this.elementToTransform, `${refresherHeight}px`);\n            }\n          }\n        }\n        else {\n          this.state = 2 /* RefresherState.Pulling */;\n          handleScrollWhilePulling(ticks, NUM_TICKS, pullAmount);\n        }\n      });\n    };\n    this.scrollEl.addEventListener('scroll', this.scrollListenerCallback);\n    this.gesture = (await import('./index2.js')).createGesture({\n      el: this.scrollEl,\n      gestureName: 'refresher',\n      gesturePriority: 31,\n      direction: 'y',\n      threshold: 5,\n      onStart: () => {\n        this.pointerDown = true;\n        if (!this.didRefresh) {\n          translateElement(this.elementToTransform, '0px');\n        }\n        /**\n         * If the content had `display: none` when\n         * the refresher was initialized, its clientHeight\n         * will be 0. When the gesture starts, the content\n         * will be visible, so try to get the correct\n         * client height again. This is most common when\n         * using the refresher in an ion-menu.\n         */\n        if (MAX_PULL === 0) {\n          MAX_PULL = this.scrollEl.clientHeight * 0.16;\n        }\n      },\n      onMove: (ev) => {\n        this.lastVelocityY = ev.velocityY;\n      },\n      onEnd: () => {\n        this.pointerDown = false;\n        this.didStart = false;\n        if (this.needsCompletion) {\n          this.resetNativeRefresher(this.elementToTransform, 32 /* RefresherState.Completing */);\n          this.needsCompletion = false;\n        }\n        else if (this.didRefresh) {\n          readTask(() => translateElement(this.elementToTransform, `${this.el.clientHeight}px`));\n        }\n      },\n    });\n    this.disabledChanged();\n  }\n  async setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner) {\n    const circle = getElementRoot(pullingSpinner).querySelector('circle');\n    const pullingRefresherIcon = this.el.querySelector('ion-refresher-content .refresher-pulling-icon');\n    const refreshingCircle = getElementRoot(refreshingSpinner).querySelector('circle');\n    if (circle !== null && refreshingCircle !== null) {\n      writeTask(() => {\n        circle.style.setProperty('animation', 'none');\n        // This lines up the animation on the refreshing spinner with the pulling spinner\n        refreshingSpinner.style.setProperty('animation-delay', '-655ms');\n        refreshingCircle.style.setProperty('animation-delay', '-655ms');\n      });\n    }\n    this.gesture = (await import('./index2.js')).createGesture({\n      el: this.scrollEl,\n      gestureName: 'refresher',\n      gesturePriority: 31,\n      direction: 'y',\n      threshold: 5,\n      canStart: () => this.state !== 8 /* RefresherState.Refreshing */ &&\n        this.state !== 32 /* RefresherState.Completing */ &&\n        this.scrollEl.scrollTop === 0,\n      onStart: (ev) => {\n        this.progress = 0;\n        ev.data = { animation: undefined, didStart: false, cancelled: false };\n      },\n      onMove: (ev) => {\n        if ((ev.velocityY < 0 && this.progress === 0 && !ev.data.didStart) || ev.data.cancelled) {\n          ev.data.cancelled = true;\n          return;\n        }\n        if (!ev.data.didStart) {\n          ev.data.didStart = true;\n          this.state = 2 /* RefresherState.Pulling */;\n          writeTask(() => this.scrollEl.style.setProperty('--overflow', 'hidden'));\n          const animationType = getRefresherAnimationType(contentEl);\n          const animation = createPullingAnimation(animationType, pullingRefresherIcon, this.el);\n          ev.data.animation = animation;\n          animation.progressStart(false, 0);\n          this.ionStart.emit();\n          this.animations.push(animation);\n          return;\n        }\n        // Since we are using an easing curve, slow the gesture tracking down a bit\n        this.progress = clamp(0, (ev.deltaY / 180) * 0.5, 1);\n        ev.data.animation.progressStep(this.progress);\n        this.ionPull.emit();\n      },\n      onEnd: (ev) => {\n        if (!ev.data.didStart) {\n          return;\n        }\n        this.gesture.enable(false);\n        writeTask(() => this.scrollEl.style.removeProperty('--overflow'));\n        if (this.progress <= 0.4) {\n          ev.data.animation.progressEnd(0, this.progress, 500).onFinish(() => {\n            this.animations.forEach((ani) => ani.destroy());\n            this.animations = [];\n            this.gesture.enable(true);\n            this.state = 1 /* RefresherState.Inactive */;\n          });\n          return;\n        }\n        const progress = getTimeGivenProgression([0, 0], [0, 0], [1, 1], [1, 1], this.progress)[0];\n        const snapBackAnimation = createSnapBackAnimation(pullingRefresherIcon);\n        this.animations.push(snapBackAnimation);\n        writeTask(async () => {\n          pullingRefresherIcon.style.setProperty('--ion-pulling-refresher-translate', `${progress * 100}px`);\n          ev.data.animation.progressEnd();\n          await snapBackAnimation.play();\n          this.beginRefresh();\n          ev.data.animation.destroy();\n          this.gesture.enable(true);\n        });\n      },\n    });\n    this.disabledChanged();\n  }\n  async setupNativeRefresher(contentEl) {\n    if (this.scrollListenerCallback || !contentEl || this.nativeRefresher || !this.scrollEl) {\n      return;\n    }\n    /**\n     * If using non-native refresher before make sure\n     * we clean up any old CSS. This can happen when\n     * a user manually calls the refresh method in a\n     * component create callback before the native\n     * refresher is setup.\n     */\n    this.setCss(0, '', false, '');\n    this.nativeRefresher = true;\n    const pullingSpinner = this.el.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n    const refreshingSpinner = this.el.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n    if (getIonMode(this) === 'ios') {\n      this.setupiOSNativeRefresher(pullingSpinner, refreshingSpinner);\n    }\n    else {\n      this.setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner);\n    }\n  }\n  componentDidUpdate() {\n    this.checkNativeRefresher();\n  }\n  async connectedCallback() {\n    if (this.el.getAttribute('slot') !== 'fixed') {\n      console.error('Make sure you use: <ion-refresher slot=\"fixed\">');\n      return;\n    }\n    const contentEl = this.el.closest(ION_CONTENT_ELEMENT_SELECTOR);\n    if (!contentEl) {\n      printIonContentErrorMsg(this.el);\n      return;\n    }\n    /**\n     * Waits for the content to be ready before querying the scroll\n     * or the background content element.\n     */\n    componentOnReady(contentEl, async () => {\n      const customScrollTarget = contentEl.querySelector(ION_CONTENT_CLASS_SELECTOR);\n      /**\n       * Query the custom scroll target (if available), first. In refresher implementations,\n       * the ion-refresher element will always be a direct child of ion-content (slot=\"fixed\"). By\n       * querying the custom scroll target first and falling back to the ion-content element,\n       * the correct scroll element will be returned by the implementation.\n       */\n      this.scrollEl = await getScrollElement(customScrollTarget !== null && customScrollTarget !== void 0 ? customScrollTarget : contentEl);\n      /**\n       * Query the background content element from the host ion-content element directly.\n       */\n      this.backgroundContentEl = await contentEl.getBackgroundElement();\n      if (await shouldUseNativeRefresher(this.el, getIonMode(this))) {\n        this.setupNativeRefresher(contentEl);\n      }\n      else {\n        this.gesture = (await import('./index2.js')).createGesture({\n          el: contentEl,\n          gestureName: 'refresher',\n          gesturePriority: 31,\n          direction: 'y',\n          threshold: 20,\n          passive: false,\n          canStart: () => this.canStart(),\n          onStart: () => this.onStart(),\n          onMove: (ev) => this.onMove(ev),\n          onEnd: () => this.onEnd(),\n        });\n        this.disabledChanged();\n      }\n    });\n  }\n  disconnectedCallback() {\n    this.destroyNativeRefresher();\n    this.scrollEl = undefined;\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n  }\n  /**\n   * Call `complete()` when your async operation has completed.\n   * For example, the `refreshing` state is while the app is performing\n   * an asynchronous operation, such as receiving more data from an\n   * AJAX request. Once the data has been received, you then call this\n   * method to signify that the refreshing has completed and to close\n   * the refresher. This method also changes the refresher's state from\n   * `refreshing` to `completing`.\n   */\n  async complete() {\n    if (this.nativeRefresher) {\n      this.needsCompletion = true;\n      // Do not reset scroll el until user removes pointer from screen\n      if (!this.pointerDown) {\n        raf(() => raf(() => this.resetNativeRefresher(this.elementToTransform, 32 /* RefresherState.Completing */)));\n      }\n    }\n    else {\n      this.close(32 /* RefresherState.Completing */, '120ms');\n    }\n  }\n  /**\n   * Changes the refresher's state from `refreshing` to `cancelling`.\n   */\n  async cancel() {\n    if (this.nativeRefresher) {\n      // Do not reset scroll el until user removes pointer from screen\n      if (!this.pointerDown) {\n        raf(() => raf(() => this.resetNativeRefresher(this.elementToTransform, 16 /* RefresherState.Cancelling */)));\n      }\n    }\n    else {\n      this.close(16 /* RefresherState.Cancelling */, '');\n    }\n  }\n  /**\n   * A number representing how far down the user has pulled.\n   * The number `0` represents the user hasn't pulled down at all. The\n   * number `1`, and anything greater than `1`, represents that the user\n   * has pulled far enough down that when they let go then the refresh will\n   * happen. If they let go and the number is less than `1`, then the\n   * refresh will not happen, and the content will return to it's original\n   * position.\n   */\n  getProgress() {\n    return Promise.resolve(this.progress);\n  }\n  canStart() {\n    if (!this.scrollEl) {\n      return false;\n    }\n    if (this.state !== 1 /* RefresherState.Inactive */) {\n      return false;\n    }\n    // if the scrollTop is greater than zero then it's\n    // not possible to pull the content down yet\n    if (this.scrollEl.scrollTop > 0) {\n      return false;\n    }\n    return true;\n  }\n  onStart() {\n    this.progress = 0;\n    this.state = 1 /* RefresherState.Inactive */;\n  }\n  onMove(detail) {\n    if (!this.scrollEl) {\n      return;\n    }\n    // this method can get called like a bazillion times per second,\n    // so it's built to be as efficient as possible, and does its\n    // best to do any DOM read/writes only when absolutely necessary\n    // if multi-touch then get out immediately\n    const ev = detail.event;\n    if (ev.touches !== undefined && ev.touches.length > 1) {\n      return;\n    }\n    // do nothing if it's actively refreshing\n    // or it's in the way of closing\n    // or this was never a startY\n    if ((this.state & 56 /* RefresherState._BUSY_ */) !== 0) {\n      return;\n    }\n    const pullFactor = Number.isNaN(this.pullFactor) || this.pullFactor < 0 ? 1 : this.pullFactor;\n    const deltaY = detail.deltaY * pullFactor;\n    // don't bother if they're scrolling up\n    // and have not already started dragging\n    if (deltaY <= 0) {\n      // the current Y is higher than the starting Y\n      // so they scrolled up enough to be ignored\n      this.progress = 0;\n      this.state = 1 /* RefresherState.Inactive */;\n      if (this.appliedStyles) {\n        // reset the styles only if they were applied\n        this.setCss(0, '', false, '');\n        return;\n      }\n      return;\n    }\n    if (this.state === 1 /* RefresherState.Inactive */) {\n      // this refresh is not already actively pulling down\n      // get the content's scrollTop\n      const scrollHostScrollTop = this.scrollEl.scrollTop;\n      // if the scrollTop is greater than zero then it's\n      // not possible to pull the content down yet\n      if (scrollHostScrollTop > 0) {\n        this.progress = 0;\n        return;\n      }\n      // content scrolled all the way to the top, and dragging down\n      this.state = 2 /* RefresherState.Pulling */;\n    }\n    // prevent native scroll events\n    if (ev.cancelable) {\n      ev.preventDefault();\n    }\n    // the refresher is actively pulling at this point\n    // move the scroll element within the content element\n    this.setCss(deltaY, '0ms', true, '');\n    if (deltaY === 0) {\n      // don't continue if there's no delta yet\n      this.progress = 0;\n      return;\n    }\n    const pullMin = this.pullMin;\n    // set pull progress\n    this.progress = deltaY / pullMin;\n    // emit \"start\" if it hasn't started yet\n    if (!this.didStart) {\n      this.didStart = true;\n      this.ionStart.emit();\n    }\n    // emit \"pulling\" on every move\n    this.ionPull.emit();\n    // do nothing if the delta is less than the pull threshold\n    if (deltaY < pullMin) {\n      // ensure it stays in the pulling state, cuz its not ready yet\n      this.state = 2 /* RefresherState.Pulling */;\n      return;\n    }\n    if (deltaY > this.pullMax) {\n      // they pulled farther than the max, so kick off the refresh\n      this.beginRefresh();\n      return;\n    }\n    // pulled farther than the pull min!!\n    // it is now in the `ready` state!!\n    // if they let go then it'll refresh, kerpow!!\n    this.state = 4 /* RefresherState.Ready */;\n    return;\n  }\n  onEnd() {\n    // only run in a zone when absolutely necessary\n    if (this.state === 4 /* RefresherState.Ready */) {\n      // they pulled down far enough, so it's ready to refresh\n      this.beginRefresh();\n    }\n    else if (this.state === 2 /* RefresherState.Pulling */) {\n      // they were pulling down, but didn't pull down far enough\n      // set the content back to it's original location\n      // and close the refresher\n      // set that the refresh is actively cancelling\n      this.cancel();\n    }\n  }\n  beginRefresh() {\n    // assumes we're already back in a zone\n    // they pulled down far enough, so it's ready to refresh\n    this.state = 8 /* RefresherState.Refreshing */;\n    // place the content in a hangout position while it thinks\n    this.setCss(this.pullMin, this.snapbackDuration, true, '');\n    // emit \"refresh\" because it was pulled down far enough\n    // and they let go to begin refreshing\n    this.ionRefresh.emit({\n      complete: this.complete.bind(this),\n    });\n  }\n  close(state, delay) {\n    // create fallback timer incase something goes wrong with transitionEnd event\n    setTimeout(() => {\n      this.state = 1 /* RefresherState.Inactive */;\n      this.progress = 0;\n      this.didStart = false;\n      this.setCss(0, '0ms', false, '');\n    }, 600);\n    // reset set the styles on the scroll element\n    // set that the refresh is actively cancelling/completing\n    this.state = state;\n    this.setCss(0, this.closeDuration, true, delay);\n  }\n  setCss(y, duration, overflowVisible, delay) {\n    if (this.nativeRefresher) {\n      return;\n    }\n    this.appliedStyles = y > 0;\n    writeTask(() => {\n      if (this.scrollEl && this.backgroundContentEl) {\n        const scrollStyle = this.scrollEl.style;\n        const backgroundStyle = this.backgroundContentEl.style;\n        scrollStyle.transform = backgroundStyle.transform = y > 0 ? `translateY(${y}px) translateZ(0px)` : '';\n        scrollStyle.transitionDuration = backgroundStyle.transitionDuration = duration;\n        scrollStyle.transitionDelay = backgroundStyle.transitionDelay = delay;\n        scrollStyle.overflow = overflowVisible ? 'hidden' : '';\n      }\n    });\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { slot: \"fixed\", class: {\n        [mode]: true,\n        // Used internally for styling\n        [`refresher-${mode}`]: true,\n        'refresher-native': this.nativeRefresher,\n        'refresher-active': this.state !== 1 /* RefresherState.Inactive */,\n        'refresher-pulling': this.state === 2 /* RefresherState.Pulling */,\n        'refresher-ready': this.state === 4 /* RefresherState.Ready */,\n        'refresher-refreshing': this.state === 8 /* RefresherState.Refreshing */,\n        'refresher-cancelling': this.state === 16 /* RefresherState.Cancelling */,\n        'refresher-completing': this.state === 32 /* RefresherState.Completing */,\n      } }));\n  }\n  get el() { return this; }\n  static get watchers() { return {\n    \"disabled\": [\"disabledChanged\"]\n  }; }\n  static get style() { return {\n    ios: refresherIosCss,\n    md: refresherMdCss\n  }; }\n}, [32, \"ion-refresher\", {\n    \"pullMin\": [2, \"pull-min\"],\n    \"pullMax\": [2, \"pull-max\"],\n    \"closeDuration\": [1, \"close-duration\"],\n    \"snapbackDuration\": [1, \"snapback-duration\"],\n    \"pullFactor\": [2, \"pull-factor\"],\n    \"disabled\": [4],\n    \"nativeRefresher\": [32],\n    \"state\": [32],\n    \"complete\": [64],\n    \"cancel\": [64],\n    \"getProgress\": [64]\n  }]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-refresher\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"ion-refresher\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, Refresher);\n      }\n      break;\n  } });\n}\n\nconst IonRefresher = Refresher;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { IonRefresher, defineCustomElement };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}