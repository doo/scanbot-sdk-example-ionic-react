{"ast":null,"code":"/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Route } from './Route.js';\nimport { RegExpRoute } from './RegExpRoute.js';\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * Easily register a RegExp, string, or function with a caching\n * strategy to a singleton Router instance.\n *\n * This method will generate a Route for you if needed and\n * call [registerRoute()]{@link module:workbox-routing.Router#registerRoute}.\n *\n * @param {RegExp|string|module:workbox-routing.Route~matchCallback|module:workbox-routing.Route} capture\n * If the capture param is a `Route`, all other arguments will be ignored.\n * @param {module:workbox-routing~handlerCallback} [handler] A callback\n * function that returns a Promise resulting in a Response. This parameter\n * is required if `capture` is not a `Route` object.\n * @param {string} [method='GET'] The HTTP method to match the Route\n * against.\n * @return {module:workbox-routing.Route} The generated `Route`(Useful for\n * unregistering).\n *\n * @memberof module:workbox-routing\n */\nfunction registerRoute(capture, handler, method) {\n  var route;\n  if (typeof capture === 'string') {\n    var captureUrl = new URL(capture, location.href);\n    if (process.env.NODE_ENV !== 'production') {\n      if (!(capture.startsWith('/') || capture.startsWith('http'))) {\n        throw new WorkboxError('invalid-string', {\n          moduleName: 'workbox-routing',\n          funcName: 'registerRoute',\n          paramName: 'capture'\n        });\n      }\n      // We want to check if Express-style wildcards are in the pathname only.\n      // TODO: Remove this log message in v4.\n      var valueToCheck = capture.startsWith('http') ? captureUrl.pathname : capture;\n      // See https://github.com/pillarjs/path-to-regexp#parameters\n      var wildcards = '[*:?+]';\n      if (new RegExp(\"\".concat(wildcards)).exec(valueToCheck)) {\n        logger.debug(\"The '$capture' parameter contains an Express-style wildcard \" + \"character (\".concat(wildcards, \"). Strings are now always interpreted as \") + \"exact matches; use a RegExp for partial or wildcard matches.\");\n      }\n    }\n    var matchCallback = function matchCallback(_ref) {\n      var url = _ref.url;\n      if (process.env.NODE_ENV !== 'production') {\n        if (url.pathname === captureUrl.pathname && url.origin !== captureUrl.origin) {\n          logger.debug(\"\".concat(capture, \" only partially matches the cross-origin URL \") + \"\".concat(url, \". This route will only handle cross-origin requests \") + \"if they match the entire URL.\");\n        }\n      }\n      return url.href === captureUrl.href;\n    };\n    // If `capture` is a string then `handler` and `method` must be present.\n    route = new Route(matchCallback, handler, method);\n  } else if (capture instanceof RegExp) {\n    // If `capture` is a `RegExp` then `handler` and `method` must be present.\n    route = new RegExpRoute(capture, handler, method);\n  } else if (typeof capture === 'function') {\n    // If `capture` is a function then `handler` and `method` must be present.\n    route = new Route(capture, handler, method);\n  } else if (capture instanceof Route) {\n    route = capture;\n  } else {\n    throw new WorkboxError('unsupported-route-type', {\n      moduleName: 'workbox-routing',\n      funcName: 'registerRoute',\n      paramName: 'capture'\n    });\n  }\n  var defaultRouter = getOrCreateDefaultRouter();\n  defaultRouter.registerRoute(route);\n  return route;\n}\nexport { registerRoute };","map":{"version":3,"names":["logger","WorkboxError","Route","RegExpRoute","getOrCreateDefaultRouter","registerRoute","capture","handler","method","route","captureUrl","URL","location","href","process","env","NODE_ENV","startsWith","moduleName","funcName","paramName","valueToCheck","pathname","wildcards","RegExp","exec","debug","matchCallback","url","origin","defaultRouter"],"sources":["/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/workbox-routing/registerRoute.js"],"sourcesContent":["/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Route } from './Route.js';\nimport { RegExpRoute } from './RegExpRoute.js';\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * Easily register a RegExp, string, or function with a caching\n * strategy to a singleton Router instance.\n *\n * This method will generate a Route for you if needed and\n * call [registerRoute()]{@link module:workbox-routing.Router#registerRoute}.\n *\n * @param {RegExp|string|module:workbox-routing.Route~matchCallback|module:workbox-routing.Route} capture\n * If the capture param is a `Route`, all other arguments will be ignored.\n * @param {module:workbox-routing~handlerCallback} [handler] A callback\n * function that returns a Promise resulting in a Response. This parameter\n * is required if `capture` is not a `Route` object.\n * @param {string} [method='GET'] The HTTP method to match the Route\n * against.\n * @return {module:workbox-routing.Route} The generated `Route`(Useful for\n * unregistering).\n *\n * @memberof module:workbox-routing\n */\nfunction registerRoute(capture, handler, method) {\n    let route;\n    if (typeof capture === 'string') {\n        const captureUrl = new URL(capture, location.href);\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(capture.startsWith('/') || capture.startsWith('http'))) {\n                throw new WorkboxError('invalid-string', {\n                    moduleName: 'workbox-routing',\n                    funcName: 'registerRoute',\n                    paramName: 'capture',\n                });\n            }\n            // We want to check if Express-style wildcards are in the pathname only.\n            // TODO: Remove this log message in v4.\n            const valueToCheck = capture.startsWith('http') ?\n                captureUrl.pathname : capture;\n            // See https://github.com/pillarjs/path-to-regexp#parameters\n            const wildcards = '[*:?+]';\n            if ((new RegExp(`${wildcards}`)).exec(valueToCheck)) {\n                logger.debug(`The '$capture' parameter contains an Express-style wildcard ` +\n                    `character (${wildcards}). Strings are now always interpreted as ` +\n                    `exact matches; use a RegExp for partial or wildcard matches.`);\n            }\n        }\n        const matchCallback = ({ url }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if ((url.pathname === captureUrl.pathname) &&\n                    (url.origin !== captureUrl.origin)) {\n                    logger.debug(`${capture} only partially matches the cross-origin URL ` +\n                        `${url}. This route will only handle cross-origin requests ` +\n                        `if they match the entire URL.`);\n                }\n            }\n            return url.href === captureUrl.href;\n        };\n        // If `capture` is a string then `handler` and `method` must be present.\n        route = new Route(matchCallback, handler, method);\n    }\n    else if (capture instanceof RegExp) {\n        // If `capture` is a `RegExp` then `handler` and `method` must be present.\n        route = new RegExpRoute(capture, handler, method);\n    }\n    else if (typeof capture === 'function') {\n        // If `capture` is a function then `handler` and `method` must be present.\n        route = new Route(capture, handler, method);\n    }\n    else if (capture instanceof Route) {\n        route = capture;\n    }\n    else {\n        throw new WorkboxError('unsupported-route-type', {\n            moduleName: 'workbox-routing',\n            funcName: 'registerRoute',\n            paramName: 'capture',\n        });\n    }\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.registerRoute(route);\n    return route;\n}\nexport { registerRoute };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}