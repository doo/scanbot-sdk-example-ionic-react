{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nvar KEYBOARD_DID_OPEN = 'ionKeyboardDidShow';\nvar KEYBOARD_DID_CLOSE = 'ionKeyboardDidHide';\nvar KEYBOARD_THRESHOLD = 150;\nvar previousVisualViewport = {};\nvar currentVisualViewport = {};\nvar keyboardOpen = false;\n/**\n * This is only used for tests\n */\nvar resetKeyboardAssist = function resetKeyboardAssist() {\n  previousVisualViewport = {};\n  currentVisualViewport = {};\n  keyboardOpen = false;\n};\nvar startKeyboardAssist = function startKeyboardAssist(win) {\n  startNativeListeners(win);\n  if (!win.visualViewport) {\n    return;\n  }\n  currentVisualViewport = copyVisualViewport(win.visualViewport);\n  win.visualViewport.onresize = function () {\n    trackViewportChanges(win);\n    if (keyboardDidOpen() || keyboardDidResize(win)) {\n      setKeyboardOpen(win);\n    } else if (keyboardDidClose(win)) {\n      setKeyboardClose(win);\n    }\n  };\n};\n/**\n * Listen for events fired by native keyboard plugin\n * in Capacitor/Cordova so devs only need to listen\n * in one place.\n */\nvar startNativeListeners = function startNativeListeners(win) {\n  win.addEventListener('keyboardDidShow', function (ev) {\n    return setKeyboardOpen(win, ev);\n  });\n  win.addEventListener('keyboardDidHide', function () {\n    return setKeyboardClose(win);\n  });\n};\nvar setKeyboardOpen = function setKeyboardOpen(win, ev) {\n  fireKeyboardOpenEvent(win, ev);\n  keyboardOpen = true;\n};\nvar setKeyboardClose = function setKeyboardClose(win) {\n  fireKeyboardCloseEvent(win);\n  keyboardOpen = false;\n};\n/**\n * Returns `true` if the `keyboardOpen` flag is not\n * set, the previous visual viewport width equal the current\n * visual viewport width, and if the scaled difference\n * of the previous visual viewport height minus the current\n * visual viewport height is greater than KEYBOARD_THRESHOLD\n *\n * We need to be able to accommodate users who have zooming\n * enabled in their browser (or have zoomed in manually) which\n * is why we take into account the current visual viewport's\n * scale value.\n */\nvar keyboardDidOpen = function keyboardDidOpen() {\n  var scaledHeightDifference = (previousVisualViewport.height - currentVisualViewport.height) * currentVisualViewport.scale;\n  return !keyboardOpen && previousVisualViewport.width === currentVisualViewport.width && scaledHeightDifference > KEYBOARD_THRESHOLD;\n};\n/**\n * Returns `true` if the keyboard is open,\n * but the keyboard did not close\n */\nvar keyboardDidResize = function keyboardDidResize(win) {\n  return keyboardOpen && !keyboardDidClose(win);\n};\n/**\n * Determine if the keyboard was closed\n * Returns `true` if the `keyboardOpen` flag is set and\n * the current visual viewport height equals the\n * layout viewport height.\n */\nvar keyboardDidClose = function keyboardDidClose(win) {\n  return keyboardOpen && currentVisualViewport.height === win.innerHeight;\n};\n/**\n * Dispatch a keyboard open event\n */\nvar fireKeyboardOpenEvent = function fireKeyboardOpenEvent(win, nativeEv) {\n  var keyboardHeight = nativeEv ? nativeEv.keyboardHeight : win.innerHeight - currentVisualViewport.height;\n  var ev = new CustomEvent(KEYBOARD_DID_OPEN, {\n    detail: {\n      keyboardHeight: keyboardHeight\n    }\n  });\n  win.dispatchEvent(ev);\n};\n/**\n * Dispatch a keyboard close event\n */\nvar fireKeyboardCloseEvent = function fireKeyboardCloseEvent(win) {\n  var ev = new CustomEvent(KEYBOARD_DID_CLOSE);\n  win.dispatchEvent(ev);\n};\n/**\n * Given a window object, create a copy of\n * the current visual and layout viewport states\n * while also preserving the previous visual and\n * layout viewport states\n */\nvar trackViewportChanges = function trackViewportChanges(win) {\n  previousVisualViewport = Object.assign({}, currentVisualViewport);\n  currentVisualViewport = copyVisualViewport(win.visualViewport);\n};\n/**\n * Creates a deep copy of the visual viewport\n * at a given state\n */\nvar copyVisualViewport = function copyVisualViewport(visualViewport) {\n  return {\n    width: Math.round(visualViewport.width),\n    height: Math.round(visualViewport.height),\n    offsetTop: visualViewport.offsetTop,\n    offsetLeft: visualViewport.offsetLeft,\n    pageTop: visualViewport.pageTop,\n    pageLeft: visualViewport.pageLeft,\n    scale: visualViewport.scale\n  };\n};\nexport { KEYBOARD_DID_CLOSE, KEYBOARD_DID_OPEN, copyVisualViewport, keyboardDidClose, keyboardDidOpen, keyboardDidResize, resetKeyboardAssist, setKeyboardClose, setKeyboardOpen, startKeyboardAssist, trackViewportChanges };","map":{"version":3,"names":["KEYBOARD_DID_OPEN","KEYBOARD_DID_CLOSE","KEYBOARD_THRESHOLD","previousVisualViewport","currentVisualViewport","keyboardOpen","resetKeyboardAssist","startKeyboardAssist","win","startNativeListeners","visualViewport","copyVisualViewport","onresize","trackViewportChanges","keyboardDidOpen","keyboardDidResize","setKeyboardOpen","keyboardDidClose","setKeyboardClose","addEventListener","ev","fireKeyboardOpenEvent","fireKeyboardCloseEvent","scaledHeightDifference","height","scale","width","innerHeight","nativeEv","keyboardHeight","CustomEvent","detail","dispatchEvent","Object","assign","Math","round","offsetTop","offsetLeft","pageTop","pageLeft"],"sources":["/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@ionic/core/components/keyboard.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst KEYBOARD_DID_OPEN = 'ionKeyboardDidShow';\nconst KEYBOARD_DID_CLOSE = 'ionKeyboardDidHide';\nconst KEYBOARD_THRESHOLD = 150;\nlet previousVisualViewport = {};\nlet currentVisualViewport = {};\nlet keyboardOpen = false;\n/**\n * This is only used for tests\n */\nconst resetKeyboardAssist = () => {\n  previousVisualViewport = {};\n  currentVisualViewport = {};\n  keyboardOpen = false;\n};\nconst startKeyboardAssist = (win) => {\n  startNativeListeners(win);\n  if (!win.visualViewport) {\n    return;\n  }\n  currentVisualViewport = copyVisualViewport(win.visualViewport);\n  win.visualViewport.onresize = () => {\n    trackViewportChanges(win);\n    if (keyboardDidOpen() || keyboardDidResize(win)) {\n      setKeyboardOpen(win);\n    }\n    else if (keyboardDidClose(win)) {\n      setKeyboardClose(win);\n    }\n  };\n};\n/**\n * Listen for events fired by native keyboard plugin\n * in Capacitor/Cordova so devs only need to listen\n * in one place.\n */\nconst startNativeListeners = (win) => {\n  win.addEventListener('keyboardDidShow', (ev) => setKeyboardOpen(win, ev));\n  win.addEventListener('keyboardDidHide', () => setKeyboardClose(win));\n};\nconst setKeyboardOpen = (win, ev) => {\n  fireKeyboardOpenEvent(win, ev);\n  keyboardOpen = true;\n};\nconst setKeyboardClose = (win) => {\n  fireKeyboardCloseEvent(win);\n  keyboardOpen = false;\n};\n/**\n * Returns `true` if the `keyboardOpen` flag is not\n * set, the previous visual viewport width equal the current\n * visual viewport width, and if the scaled difference\n * of the previous visual viewport height minus the current\n * visual viewport height is greater than KEYBOARD_THRESHOLD\n *\n * We need to be able to accommodate users who have zooming\n * enabled in their browser (or have zoomed in manually) which\n * is why we take into account the current visual viewport's\n * scale value.\n */\nconst keyboardDidOpen = () => {\n  const scaledHeightDifference = (previousVisualViewport.height - currentVisualViewport.height) * currentVisualViewport.scale;\n  return (!keyboardOpen &&\n    previousVisualViewport.width === currentVisualViewport.width &&\n    scaledHeightDifference > KEYBOARD_THRESHOLD);\n};\n/**\n * Returns `true` if the keyboard is open,\n * but the keyboard did not close\n */\nconst keyboardDidResize = (win) => {\n  return keyboardOpen && !keyboardDidClose(win);\n};\n/**\n * Determine if the keyboard was closed\n * Returns `true` if the `keyboardOpen` flag is set and\n * the current visual viewport height equals the\n * layout viewport height.\n */\nconst keyboardDidClose = (win) => {\n  return keyboardOpen && currentVisualViewport.height === win.innerHeight;\n};\n/**\n * Dispatch a keyboard open event\n */\nconst fireKeyboardOpenEvent = (win, nativeEv) => {\n  const keyboardHeight = nativeEv ? nativeEv.keyboardHeight : win.innerHeight - currentVisualViewport.height;\n  const ev = new CustomEvent(KEYBOARD_DID_OPEN, {\n    detail: { keyboardHeight },\n  });\n  win.dispatchEvent(ev);\n};\n/**\n * Dispatch a keyboard close event\n */\nconst fireKeyboardCloseEvent = (win) => {\n  const ev = new CustomEvent(KEYBOARD_DID_CLOSE);\n  win.dispatchEvent(ev);\n};\n/**\n * Given a window object, create a copy of\n * the current visual and layout viewport states\n * while also preserving the previous visual and\n * layout viewport states\n */\nconst trackViewportChanges = (win) => {\n  previousVisualViewport = Object.assign({}, currentVisualViewport);\n  currentVisualViewport = copyVisualViewport(win.visualViewport);\n};\n/**\n * Creates a deep copy of the visual viewport\n * at a given state\n */\nconst copyVisualViewport = (visualViewport) => {\n  return {\n    width: Math.round(visualViewport.width),\n    height: Math.round(visualViewport.height),\n    offsetTop: visualViewport.offsetTop,\n    offsetLeft: visualViewport.offsetLeft,\n    pageTop: visualViewport.pageTop,\n    pageLeft: visualViewport.pageLeft,\n    scale: visualViewport.scale,\n  };\n};\n\nexport { KEYBOARD_DID_CLOSE, KEYBOARD_DID_OPEN, copyVisualViewport, keyboardDidClose, keyboardDidOpen, keyboardDidResize, resetKeyboardAssist, setKeyboardClose, setKeyboardOpen, startKeyboardAssist, trackViewportChanges };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}