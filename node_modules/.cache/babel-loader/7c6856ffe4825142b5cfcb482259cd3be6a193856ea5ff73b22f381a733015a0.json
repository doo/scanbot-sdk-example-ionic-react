{"ast":null,"code":"import _toConsumableArray from\"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _createForOfIteratorHelper from\"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _slicedToArray from\"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{IonContent,IonHeader,IonPage,IonTitle,IonToolbar,IonBackButton,IonButtons,IonImg,useIonAlert,useIonViewWillEnter,IonGrid,IonRow,IonCol}from'@ionic/react';import{useHistory}from'react-router';import React,{useState}from'react';import ScanbotSdk from'cordova-plugin-scanbot-sdk';import{ImageResultsRepository}from'../utils/ImageRepository';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ImagePreview=function ImagePreview(){var _useIonAlert=useIonAlert(),_useIonAlert2=_slicedToArray(_useIonAlert,1),presentAlert=_useIonAlert2[0];var history=useHistory();var initialState=useState([]);var _initialState=_slicedToArray(initialState,2),imageData=_initialState[0],setImageData=_initialState[1];var pages=[];useIonViewWillEnter(function(){reloadPages();});var reloadPages=function reloadPages(){pages=ImageResultsRepository.INSTANCE.getPages();var _iterator=_createForOfIteratorHelper(pages),_step;try{var _loop=function _loop(){var page=_step.value;var url=page.documentPreviewImageFileUri;ScanbotSdk.getImageData(function(result){var extension='png';var url=\"data:image/\".concat(extension,\";base64,\")+result.base64ImageData;setImageData(function(imageData){return[].concat(_toConsumableArray(imageData),[{id:page.pageId,url:url}]);});},function(error){presentAlert({header:'Error',message:error.message,buttons:['OK']});},{imageFileUri:url});};for(_iterator.s();!(_step=_iterator.n()).done;){_loop();}}catch(err){_iterator.e(err);}finally{_iterator.f();}};function navigateToCroppingPage(pageId){history.push(\"/imageeditview/\"+pageId);setImageData(function(){return initialState;});}return/*#__PURE__*/_jsxs(IonPage,{children:[/*#__PURE__*/_jsx(IonHeader,{children:/*#__PURE__*/_jsxs(IonToolbar,{children:[/*#__PURE__*/_jsx(IonButtons,{slot:\"start\",children:/*#__PURE__*/_jsx(IonBackButton,{})}),/*#__PURE__*/_jsx(IonTitle,{children:\"Display Images\"})]})}),/*#__PURE__*/_jsx(IonContent,{fullscreen:true,children:/*#__PURE__*/_jsx(IonGrid,{children:/*#__PURE__*/_jsx(IonRow,{children:imageData.map(function(page){return/*#__PURE__*/_jsx(IonCol,{size:\"6\",children:/*#__PURE__*/_jsx(IonImg,{onClick:function onClick(){return navigateToCroppingPage(page.id);},src:page.url})},page.id);})})})})]});};export default ImagePreview;","map":{"version":3,"names":["IonContent","IonHeader","IonPage","IonTitle","IonToolbar","IonBackButton","IonButtons","IonImg","useIonAlert","useIonViewWillEnter","IonGrid","IonRow","IonCol","useHistory","React","useState","ScanbotSdk","ImageResultsRepository","ImagePreview","presentAlert","history","initialState","imageData","setImageData","pages","reloadPages","INSTANCE","getPages","page","url","documentPreviewImageFileUri","getImageData","result","extension","base64ImageData","id","pageId","error","header","message","buttons","imageFileUri","navigateToCroppingPage","push","map"],"sources":["/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/src/pages/ImagePreview.tsx"],"sourcesContent":["import { \n    IonContent,\n    IonHeader, \n    IonPage, \n    IonTitle, \n    IonToolbar, \n    IonBackButton, \n    IonButtons, \n    IonImg, \n    useIonAlert, \n    useIonViewWillEnter,\n    IonGrid,\n    IonRow,\n    IonCol } from '@ionic/react';\n\nimport { useHistory } from 'react-router';\nimport React, {useState } from 'react';\n\nimport ScanbotSdk, { Page } from 'cordova-plugin-scanbot-sdk';\nimport { ImageResultsRepository } from '../utils/ImageRepository';\n\nconst ImagePreview: React.FC = () => {\n\n    const [presentAlert] = useIonAlert(); \n    const history = useHistory();\n    const initialState = useState<any>([]);\n    const [imageData, setImageData] = initialState;\n\n    let pages: Page[] = [];\n\n    useIonViewWillEnter(() => {\n        reloadPages();\n    });\n\n    const reloadPages = () => {\n        pages = ImageResultsRepository.INSTANCE.getPages();\n\n        for (const page of pages) {\n\n            const url = page.documentPreviewImageFileUri as string;\n\n            ScanbotSdk.getImageData((result) => {\n\n                const extension = 'png';\n    \n                let url = `data:image/${extension};base64,` + result.base64ImageData;\n\n                setImageData((imageData: any) => [...imageData, {id: page.pageId, url: url}])\n            },\n            (error) => {\n                presentAlert({\n                    header: 'Error',\n                    message: error.message,\n                    buttons: ['OK'],\n                })\n             },\n            { imageFileUri: url }); \n        }\n    }\n\n    function navigateToCroppingPage(pageId: string): void {\n\n        history.push(\"/imageeditview/\" + pageId);\n        setImageData(() => initialState)\n    }\n\n    return (\n        <IonPage>\n            <IonHeader>\n                <IonToolbar>\n                    <IonButtons slot=\"start\">\n                        <IonBackButton />\n                    </IonButtons>\n                <IonTitle>Display Images</IonTitle>\n                </IonToolbar>\n            </IonHeader>\n\n            <IonContent fullscreen>\n                <IonGrid>\n                <IonRow>\n                    {imageData.map((page: any) => (\n                    <IonCol size=\"6\" key={page.id}>\n                        <IonImg onClick={() => navigateToCroppingPage(page.id)} src={page.url} />\n                    </IonCol>\n                    ))}\n                </IonRow>\n                </IonGrid>\n            </IonContent>\n        </IonPage>\n    );\n};\n\nexport default ImagePreview;"],"mappings":"weAAA,OACIA,UAAU,CACVC,SAAS,CACTC,OAAO,CACPC,QAAQ,CACRC,UAAU,CACVC,aAAa,CACbC,UAAU,CACVC,MAAM,CACNC,WAAW,CACXC,mBAAmB,CACnBC,OAAO,CACPC,MAAM,CACNC,MAAM,KAAQ,cAAc,CAEhC,OAASC,UAAU,KAAQ,cAAc,CACzC,MAAOC,MAAK,EAAGC,QAAQ,KAAQ,OAAO,CAEtC,MAAOC,WAAU,KAAgB,4BAA4B,CAC7D,OAASC,sBAAsB,KAAQ,0BAA0B,CAAC,wFAElE,GAAMC,aAAsB,CAAG,QAAzBA,aAAsB,EAAS,CAEjC,iBAAuBV,WAAW,EAAE,8CAA7BW,YAAY,kBACnB,GAAMC,QAAO,CAAGP,UAAU,EAAE,CAC5B,GAAMQ,aAAY,CAAGN,QAAQ,CAAM,EAAE,CAAC,CACtC,iCAAkCM,YAAY,IAAvCC,SAAS,kBAAEC,YAAY,kBAE9B,GAAIC,MAAa,CAAG,EAAE,CAEtBf,mBAAmB,CAAC,UAAM,CACtBgB,WAAW,EAAE,CACjB,CAAC,CAAC,CAEF,GAAMA,YAAW,CAAG,QAAdA,YAAW,EAAS,CACtBD,KAAK,CAAGP,sBAAsB,CAACS,QAAQ,CAACC,QAAQ,EAAE,CAAC,yCAEhCH,KAAK,sCAAE,IAAfI,KAAI,aAEX,GAAMC,IAAG,CAAGD,IAAI,CAACE,2BAAqC,CAEtDd,UAAU,CAACe,YAAY,CAAC,SAACC,MAAM,CAAK,CAEhC,GAAMC,UAAS,CAAG,KAAK,CAEvB,GAAIJ,IAAG,CAAG,qBAAcI,SAAS,aAAaD,MAAM,CAACE,eAAe,CAEpEX,YAAY,CAAC,SAACD,SAAc,qCAASA,SAAS,GAAE,CAACa,EAAE,CAAEP,IAAI,CAACQ,MAAM,CAAEP,GAAG,CAAEA,GAAG,CAAC,IAAC,CAAC,CACjF,CAAC,CACD,SAACQ,KAAK,CAAK,CACPlB,YAAY,CAAC,CACTmB,MAAM,CAAE,OAAO,CACfC,OAAO,CAAEF,KAAK,CAACE,OAAO,CACtBC,OAAO,CAAE,CAAC,IAAI,CAClB,CAAC,CAAC,CACL,CAAC,CACF,CAAEC,YAAY,CAAEZ,GAAI,CAAC,CAAC,CAC1B,CAAC,CApBD,yDAoBC,qDACL,CAAC,CAED,QAASa,uBAAsB,CAACN,MAAc,CAAQ,CAElDhB,OAAO,CAACuB,IAAI,CAAC,iBAAiB,CAAGP,MAAM,CAAC,CACxCb,YAAY,CAAC,iBAAMF,aAAY,GAAC,CACpC,CAEA,mBACI,MAAC,OAAO,yBACJ,KAAC,SAAS,wBACN,MAAC,UAAU,yBACP,KAAC,UAAU,EAAC,IAAI,CAAC,OAAO,uBACpB,KAAC,aAAa,IAAG,EACR,cACjB,KAAC,QAAQ,WAAC,gBAAc,EAAW,GACtB,EACL,cAEZ,KAAC,UAAU,EAAC,UAAU,4BAClB,KAAC,OAAO,wBACR,KAAC,MAAM,WACFC,SAAS,CAACsB,GAAG,CAAC,SAAChB,IAAS,qBACzB,KAAC,MAAM,EAAC,IAAI,CAAC,GAAG,uBACZ,KAAC,MAAM,EAAC,OAAO,CAAE,yBAAMc,uBAAsB,CAACd,IAAI,CAACO,EAAE,CAAC,EAAC,CAAC,GAAG,CAAEP,IAAI,CAACC,GAAI,EAAG,EADvDD,IAAI,CAACO,EAAE,CAEpB,EACR,CAAC,EACG,EACC,EACD,GACP,CAElB,CAAC,CAED,cAAejB,aAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}