{"ast":null,"code":"import _defineProperty from \"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _regeneratorRuntime from \"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';\nimport { b as getIonMode } from './ionic-global.js';\nimport { m as menuController } from './index5.js';\nimport { u as updateVisibility } from './menu-toggle-util.js';\nvar menuToggleCss = \":host(.menu-toggle-hidden){display:none}\";\nvar MenuToggle = /*@__PURE__*/proxyCustomElement( /*#__PURE__*/function (_HTMLElement) {\n  _inherits(_class, _HTMLElement);\n  var _super = _createSuper(_class);\n  function _class() {\n    var _this;\n    _classCallCheck(this, _class);\n    _this = _super.call(this);\n    _this.__registerHost();\n    _this.__attachShadow();\n    _this.visible = false;\n    /**\n     * Automatically hides the content when the corresponding menu is not active.\n     *\n     * By default, it's `true`. Change it to `false` in order to\n     * keep `ion-menu-toggle` always visible regardless the state of the menu.\n     */\n    _this.autoHide = true;\n    _this.onClick = function () {\n      return menuController.toggle(_this.menu);\n    };\n    return _this;\n  }\n  _createClass(_class, [{\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      this.visibilityChanged();\n    }\n  }, {\n    key: \"visibilityChanged\",\n    value: function () {\n      var _visibilityChanged = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return updateVisibility(this.menu);\n            case 2:\n              this.visible = _context.sent;\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function visibilityChanged() {\n        return _visibilityChanged.apply(this, arguments);\n      }\n      return visibilityChanged;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _class2;\n      var mode = getIonMode(this);\n      var hidden = this.autoHide && !this.visible;\n      return h(Host, {\n        onClick: this.onClick,\n        \"aria-hidden\": hidden ? 'true' : null,\n        class: (_class2 = {}, _defineProperty(_class2, mode, true), _defineProperty(_class2, 'menu-toggle-hidden', hidden), _class2)\n      }, h(\"slot\", null));\n    }\n  }], [{\n    key: \"style\",\n    get: function get() {\n      return menuToggleCss;\n    }\n  }]);\n  return _class;\n}(HTMLElement), [1, \"ion-menu-toggle\", {\n  \"menu\": [1],\n  \"autoHide\": [4, \"auto-hide\"],\n  \"visible\": [32]\n}, [[16, \"ionMenuChange\", \"visibilityChanged\"], [16, \"ionSplitPaneVisible\", \"visibilityChanged\"]]]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  var components = [\"ion-menu-toggle\"];\n  components.forEach(function (tagName) {\n    switch (tagName) {\n      case \"ion-menu-toggle\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, MenuToggle);\n        }\n        break;\n    }\n  });\n}\nvar IonMenuToggle = MenuToggle;\nvar defineCustomElement = defineCustomElement$1;\nexport { IonMenuToggle, defineCustomElement };","map":{"version":3,"names":["proxyCustomElement","HTMLElement","h","Host","b","getIonMode","m","menuController","u","updateVisibility","menuToggleCss","MenuToggle","__registerHost","__attachShadow","visible","autoHide","onClick","toggle","menu","visibilityChanged","mode","hidden","class","defineCustomElement$1","customElements","components","forEach","tagName","get","define","IonMenuToggle","defineCustomElement"],"sources":["/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@ionic/core/components/ion-menu-toggle.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';\nimport { b as getIonMode } from './ionic-global.js';\nimport { m as menuController } from './index5.js';\nimport { u as updateVisibility } from './menu-toggle-util.js';\n\nconst menuToggleCss = \":host(.menu-toggle-hidden){display:none}\";\n\nconst MenuToggle = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.visible = false;\n    /**\n     * Automatically hides the content when the corresponding menu is not active.\n     *\n     * By default, it's `true`. Change it to `false` in order to\n     * keep `ion-menu-toggle` always visible regardless the state of the menu.\n     */\n    this.autoHide = true;\n    this.onClick = () => {\n      return menuController.toggle(this.menu);\n    };\n  }\n  connectedCallback() {\n    this.visibilityChanged();\n  }\n  async visibilityChanged() {\n    this.visible = await updateVisibility(this.menu);\n  }\n  render() {\n    const mode = getIonMode(this);\n    const hidden = this.autoHide && !this.visible;\n    return (h(Host, { onClick: this.onClick, \"aria-hidden\": hidden ? 'true' : null, class: {\n        [mode]: true,\n        'menu-toggle-hidden': hidden,\n      } }, h(\"slot\", null)));\n  }\n  static get style() { return menuToggleCss; }\n}, [1, \"ion-menu-toggle\", {\n    \"menu\": [1],\n    \"autoHide\": [4, \"auto-hide\"],\n    \"visible\": [32]\n  }, [[16, \"ionMenuChange\", \"visibilityChanged\"], [16, \"ionSplitPaneVisible\", \"visibilityChanged\"]]]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-menu-toggle\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"ion-menu-toggle\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, MenuToggle);\n      }\n      break;\n  } });\n}\n\nconst IonMenuToggle = MenuToggle;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { IonMenuToggle, defineCustomElement };\n"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA,SAASA,kBAAkB,EAAEC,WAAW,EAAEC,CAAC,EAAEC,IAAI,QAAQ,+BAA+B;AACxF,SAASC,CAAC,IAAIC,UAAU,QAAQ,mBAAmB;AACnD,SAASC,CAAC,IAAIC,cAAc,QAAQ,aAAa;AACjD,SAASC,CAAC,IAAIC,gBAAgB,QAAQ,uBAAuB;AAE7D,IAAMC,aAAa,GAAG,0CAA0C;AAEhE,IAAMC,UAAU,GAAG,aAAcX,kBAAkB;EAAA;EAAA;EACjD,kBAAc;IAAA;IAAA;IACZ;IACA,MAAKY,cAAc,EAAE;IACrB,MAAKC,cAAc,EAAE;IACrB,MAAKC,OAAO,GAAG,KAAK;IACpB;AACJ;AACA;AACA;AACA;AACA;IACI,MAAKC,QAAQ,GAAG,IAAI;IACpB,MAAKC,OAAO,GAAG,YAAM;MACnB,OAAOT,cAAc,CAACU,MAAM,CAAC,MAAKC,IAAI,CAAC;IACzC,CAAC;IAAC;EACJ;EAAC;IAAA;IAAA,OACD,6BAAoB;MAClB,IAAI,CAACC,iBAAiB,EAAE;IAC1B;EAAC;IAAA;IAAA;MAAA,oFACD;QAAA;UAAA;YAAA;cAAA;cAAA,OACuBV,gBAAgB,CAAC,IAAI,CAACS,IAAI,CAAC;YAAA;cAAhD,IAAI,CAACJ,OAAO;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA,CACb;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA,OACD,kBAAS;MAAA;MACP,IAAMM,IAAI,GAAGf,UAAU,CAAC,IAAI,CAAC;MAC7B,IAAMgB,MAAM,GAAG,IAAI,CAACN,QAAQ,IAAI,CAAC,IAAI,CAACD,OAAO;MAC7C,OAAQZ,CAAC,CAACC,IAAI,EAAE;QAAEa,OAAO,EAAE,IAAI,CAACA,OAAO;QAAE,aAAa,EAAEK,MAAM,GAAG,MAAM,GAAG,IAAI;QAAEC,KAAK,0CAChFF,IAAI,EAAG,IAAI,4BACZ,oBAAoB,EAAEC,MAAM;MAC5B,CAAC,EAAEnB,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IACzB;EAAC;IAAA;IAAA,KACD,eAAmB;MAAE,OAAOQ,aAAa;IAAE;EAAC;EAAA;AAAA,EA/BoBT,WAAW,GAgC1E,CAAC,CAAC,EAAE,iBAAiB,EAAE;EACtB,MAAM,EAAE,CAAC,CAAC,CAAC;EACX,UAAU,EAAE,CAAC,CAAC,EAAE,WAAW,CAAC;EAC5B,SAAS,EAAE,CAAC,EAAE;AAChB,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,eAAe,EAAE,mBAAmB,CAAC,EAAE,CAAC,EAAE,EAAE,qBAAqB,EAAE,mBAAmB,CAAC,CAAC,CAAC,CAAC;AACrG,SAASsB,qBAAqB,GAAG;EAC/B,IAAI,OAAOC,cAAc,KAAK,WAAW,EAAE;IACzC;EACF;EACA,IAAMC,UAAU,GAAG,CAAC,iBAAiB,CAAC;EACtCA,UAAU,CAACC,OAAO,CAAC,UAAAC,OAAO,EAAI;IAAE,QAAQA,OAAO;MAC7C,KAAK,iBAAiB;QACpB,IAAI,CAACH,cAAc,CAACI,GAAG,CAACD,OAAO,CAAC,EAAE;UAChCH,cAAc,CAACK,MAAM,CAACF,OAAO,EAAEhB,UAAU,CAAC;QAC5C;QACA;IAAM;EACR,CAAC,CAAC;AACN;AAEA,IAAMmB,aAAa,GAAGnB,UAAU;AAChC,IAAMoB,mBAAmB,GAAGR,qBAAqB;AAEjD,SAASO,aAAa,EAAEC,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}