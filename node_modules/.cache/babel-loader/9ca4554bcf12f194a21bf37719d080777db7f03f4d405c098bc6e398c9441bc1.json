{"ast":null,"code":"import _regeneratorRuntime from \"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { g as getScrollElement, c as scrollByPoint, a as findClosestIonContent } from './index9.js';\nimport { a as addEventListener, b as removeEventListener, r as raf, p as pointerCoord, c as componentOnReady } from './helpers.js';\nvar cloneMap = new WeakMap();\nvar relocateInput = function relocateInput(componentEl, inputEl, shouldRelocate) {\n  var inputRelativeY = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  var disabledClonedInput = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  if (cloneMap.has(componentEl) === shouldRelocate) {\n    return;\n  }\n  if (shouldRelocate) {\n    addClone(componentEl, inputEl, inputRelativeY, disabledClonedInput);\n  } else {\n    removeClone(componentEl, inputEl);\n  }\n};\nvar isFocused = function isFocused(input) {\n  return input === input.getRootNode().activeElement;\n};\nvar addClone = function addClone(componentEl, inputEl, inputRelativeY) {\n  var disabledClonedInput = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  // this allows for the actual input to receive the focus from\n  // the user's touch event, but before it receives focus, it\n  // moves the actual input to a location that will not screw\n  // up the app's layout, and does not allow the native browser\n  // to attempt to scroll the input into place (messing up headers/footers)\n  // the cloned input fills the area of where native input should be\n  // while the native input fakes out the browser by relocating itself\n  // before it receives the actual focus event\n  // We hide the focused input (with the visible caret) invisible by making it scale(0),\n  var parentEl = inputEl.parentNode;\n  // DOM WRITES\n  var clonedEl = inputEl.cloneNode(false);\n  clonedEl.classList.add('cloned-input');\n  clonedEl.tabIndex = -1;\n  /**\n   * Making the cloned input disabled prevents\n   * Chrome for Android from still scrolling\n   * the entire page since this cloned input\n   * will briefly be hidden by the keyboard\n   * even though it is not focused.\n   *\n   * This is not needed on iOS. While this\n   * does not cause functional issues on iOS,\n   * the input still appears slightly dimmed even\n   * if we set opacity: 1.\n   */\n  if (disabledClonedInput) {\n    clonedEl.disabled = true;\n  }\n  parentEl.appendChild(clonedEl);\n  cloneMap.set(componentEl, clonedEl);\n  var doc = componentEl.ownerDocument;\n  var tx = doc.dir === 'rtl' ? 9999 : -9999;\n  componentEl.style.pointerEvents = 'none';\n  inputEl.style.transform = \"translate3d(\".concat(tx, \"px,\").concat(inputRelativeY, \"px,0) scale(0)\");\n};\nvar removeClone = function removeClone(componentEl, inputEl) {\n  var clone = cloneMap.get(componentEl);\n  if (clone) {\n    cloneMap.delete(componentEl);\n    clone.remove();\n  }\n  componentEl.style.pointerEvents = '';\n  inputEl.style.transform = '';\n};\nvar enableHideCaretOnScroll = function enableHideCaretOnScroll(componentEl, inputEl, scrollEl) {\n  if (!scrollEl || !inputEl) {\n    return function () {\n      return;\n    };\n  }\n  var scrollHideCaret = function scrollHideCaret(shouldHideCaret) {\n    if (isFocused(inputEl)) {\n      relocateInput(componentEl, inputEl, shouldHideCaret);\n    }\n  };\n  var onBlur = function onBlur() {\n    return relocateInput(componentEl, inputEl, false);\n  };\n  var hideCaret = function hideCaret() {\n    return scrollHideCaret(true);\n  };\n  var showCaret = function showCaret() {\n    return scrollHideCaret(false);\n  };\n  addEventListener(scrollEl, 'ionScrollStart', hideCaret);\n  addEventListener(scrollEl, 'ionScrollEnd', showCaret);\n  inputEl.addEventListener('blur', onBlur);\n  return function () {\n    removeEventListener(scrollEl, 'ionScrollStart', hideCaret);\n    removeEventListener(scrollEl, 'ionScrollEnd', showCaret);\n    inputEl.addEventListener('ionBlur', onBlur);\n  };\n};\nvar SKIP_SELECTOR = 'input, textarea, [no-blur], [contenteditable]';\nvar enableInputBlurring = function enableInputBlurring() {\n  var focused = true;\n  var didScroll = false;\n  var doc = document;\n  var onScroll = function onScroll() {\n    didScroll = true;\n  };\n  var onFocusin = function onFocusin() {\n    focused = true;\n  };\n  var onTouchend = function onTouchend(ev) {\n    // if app did scroll return early\n    if (didScroll) {\n      didScroll = false;\n      return;\n    }\n    var active = doc.activeElement;\n    if (!active) {\n      return;\n    }\n    // only blur if the active element is a text-input or a textarea\n    if (active.matches(SKIP_SELECTOR)) {\n      return;\n    }\n    // if the selected target is the active element, do not blur\n    var tapped = ev.target;\n    if (tapped === active) {\n      return;\n    }\n    if (tapped.matches(SKIP_SELECTOR) || tapped.closest(SKIP_SELECTOR)) {\n      return;\n    }\n    focused = false;\n    // TODO FW-2796: find a better way, why 50ms?\n    setTimeout(function () {\n      if (!focused) {\n        active.blur();\n      }\n    }, 50);\n  };\n  addEventListener(doc, 'ionScrollStart', onScroll);\n  doc.addEventListener('focusin', onFocusin, true);\n  doc.addEventListener('touchend', onTouchend, false);\n  return function () {\n    removeEventListener(doc, 'ionScrollStart', onScroll, true);\n    doc.removeEventListener('focusin', onFocusin, true);\n    doc.removeEventListener('touchend', onTouchend, false);\n  };\n};\nvar SCROLL_ASSIST_SPEED = 0.3;\nvar getScrollData = function getScrollData(componentEl, contentEl, keyboardHeight) {\n  var _a;\n  var itemEl = (_a = componentEl.closest('ion-item,[ion-item]')) !== null && _a !== void 0 ? _a : componentEl;\n  return calcScrollData(itemEl.getBoundingClientRect(), contentEl.getBoundingClientRect(), keyboardHeight, componentEl.ownerDocument.defaultView.innerHeight);\n};\nvar calcScrollData = function calcScrollData(inputRect, contentRect, keyboardHeight, platformHeight) {\n  // compute input's Y values relative to the body\n  var inputTop = inputRect.top;\n  var inputBottom = inputRect.bottom;\n  // compute visible area\n  var visibleAreaTop = contentRect.top;\n  var visibleAreaBottom = Math.min(contentRect.bottom, platformHeight - keyboardHeight);\n  // compute safe area\n  var safeAreaTop = visibleAreaTop + 15;\n  var safeAreaBottom = visibleAreaBottom * 0.75;\n  // figure out if each edge of the input is within the safe area\n  var distanceToBottom = safeAreaBottom - inputBottom;\n  var distanceToTop = safeAreaTop - inputTop;\n  // desiredScrollAmount is the negated distance to the safe area according to our calculations.\n  var desiredScrollAmount = Math.round(distanceToBottom < 0 ? -distanceToBottom : distanceToTop > 0 ? -distanceToTop : 0);\n  // our calculations make some assumptions that aren't always true, like the keyboard being closed when an input\n  // gets focus, so make sure we don't scroll the input above the visible area\n  var scrollAmount = Math.min(desiredScrollAmount, inputTop - visibleAreaTop);\n  var distance = Math.abs(scrollAmount);\n  var duration = distance / SCROLL_ASSIST_SPEED;\n  var scrollDuration = Math.min(400, Math.max(150, duration));\n  return {\n    scrollAmount: scrollAmount,\n    scrollDuration: scrollDuration,\n    scrollPadding: keyboardHeight,\n    inputSafeY: -(inputTop - safeAreaTop) + 4\n  };\n};\nvar enableScrollAssist = function enableScrollAssist(componentEl, inputEl, contentEl, footerEl, keyboardHeight) {\n  var disableClonedInput = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n  var coord;\n  var touchStart = function touchStart(ev) {\n    coord = pointerCoord(ev);\n  };\n  var touchEnd = function touchEnd(ev) {\n    // input cover touchend/mouseup\n    if (!coord) {\n      return;\n    }\n    // get where the touchend/mouseup ended\n    var endCoord = pointerCoord(ev);\n    // focus this input if the pointer hasn't moved XX pixels\n    // and the input doesn't already have focus\n    if (!hasPointerMoved(6, coord, endCoord) && !isFocused(inputEl)) {\n      // begin the input focus process\n      jsSetFocus(componentEl, inputEl, contentEl, footerEl, keyboardHeight, disableClonedInput);\n    }\n  };\n  componentEl.addEventListener('touchstart', touchStart, {\n    capture: true,\n    passive: true\n  });\n  componentEl.addEventListener('touchend', touchEnd, true);\n  return function () {\n    componentEl.removeEventListener('touchstart', touchStart, true);\n    componentEl.removeEventListener('touchend', touchEnd, true);\n  };\n};\nvar jsSetFocus = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(componentEl, inputEl, contentEl, footerEl, keyboardHeight) {\n    var disableClonedInput,\n      scrollData,\n      scrollContentTimeout,\n      scrollContent,\n      doubleKeyboardEventListener,\n      scrollEl,\n      totalScrollAmount,\n      _args2 = arguments;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          disableClonedInput = _args2.length > 5 && _args2[5] !== undefined ? _args2[5] : false;\n          if (!(!contentEl && !footerEl)) {\n            _context2.next = 3;\n            break;\n          }\n          return _context2.abrupt(\"return\");\n        case 3:\n          scrollData = getScrollData(componentEl, contentEl || footerEl, keyboardHeight);\n          if (!(contentEl && Math.abs(scrollData.scrollAmount) < 4)) {\n            _context2.next = 7;\n            break;\n          }\n          // the text input is in a safe position that doesn't\n          // require it to be scrolled into view, just set focus now\n          inputEl.focus();\n          return _context2.abrupt(\"return\");\n        case 7:\n          // temporarily move the focus to the focus holder so the browser\n          // doesn't freak out while it's trying to get the input in place\n          // at this point the native text input still does not have focus\n          relocateInput(componentEl, inputEl, true, scrollData.inputSafeY, disableClonedInput);\n          inputEl.focus();\n          /**\n           * Relocating/Focusing input causes the\n           * click event to be cancelled, so\n           * manually fire one here.\n           */\n          raf(function () {\n            return componentEl.click();\n          });\n          if (!(typeof window !== 'undefined')) {\n            _context2.next = 23;\n            break;\n          }\n          scrollContent = /*#__PURE__*/function () {\n            var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n              return _regeneratorRuntime().wrap(function _callee$(_context) {\n                while (1) switch (_context.prev = _context.next) {\n                  case 0:\n                    // clean up listeners and timeouts\n                    if (scrollContentTimeout !== undefined) {\n                      clearTimeout(scrollContentTimeout);\n                    }\n                    window.removeEventListener('ionKeyboardDidShow', doubleKeyboardEventListener);\n                    window.removeEventListener('ionKeyboardDidShow', scrollContent);\n                    // scroll the input into place\n                    if (!contentEl) {\n                      _context.next = 6;\n                      break;\n                    }\n                    _context.next = 6;\n                    return scrollByPoint(contentEl, 0, scrollData.scrollAmount, scrollData.scrollDuration);\n                  case 6:\n                    // the scroll view is in the correct position now\n                    // give the native text input focus\n                    relocateInput(componentEl, inputEl, false, scrollData.inputSafeY);\n                    // ensure this is the focused input\n                    inputEl.focus();\n                  case 8:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }, _callee);\n            }));\n            return function scrollContent() {\n              return _ref2.apply(this, arguments);\n            };\n          }();\n          doubleKeyboardEventListener = function doubleKeyboardEventListener() {\n            window.removeEventListener('ionKeyboardDidShow', doubleKeyboardEventListener);\n            window.addEventListener('ionKeyboardDidShow', scrollContent);\n          };\n          if (!contentEl) {\n            _context2.next = 22;\n            break;\n          }\n          _context2.next = 16;\n          return getScrollElement(contentEl);\n        case 16:\n          scrollEl = _context2.sent;\n          /**\n           * scrollData will only consider the amount we need\n           * to scroll in order to properly bring the input\n           * into view. It will not consider the amount\n           * we can scroll in the content element.\n           * As a result, scrollData may request a greater\n           * scroll position than is currently available\n           * in the DOM. If this is the case, we need to\n           * wait for the webview to resize/the keyboard\n           * to show in order for additional scroll\n           * bandwidth to become available.\n           */\n          totalScrollAmount = scrollEl.scrollHeight - scrollEl.clientHeight;\n          if (!(scrollData.scrollAmount > totalScrollAmount - scrollEl.scrollTop)) {\n            _context2.next = 22;\n            break;\n          }\n          /**\n           * On iOS devices, the system will show a \"Passwords\" bar above the keyboard\n           * after the initial keyboard is shown. This prevents the webview from resizing\n           * until the \"Passwords\" bar is shown, so we need to wait for that to happen first.\n           */\n          if (inputEl.type === 'password') {\n            // Add 50px to account for the \"Passwords\" bar\n            scrollData.scrollAmount += 50;\n            window.addEventListener('ionKeyboardDidShow', doubleKeyboardEventListener);\n          } else {\n            window.addEventListener('ionKeyboardDidShow', scrollContent);\n          }\n          /**\n           * This should only fire in 2 instances:\n           * 1. The app is very slow.\n           * 2. The app is running in a browser on an old OS\n           * that does not support Ionic Keyboard Events\n           */\n          scrollContentTimeout = setTimeout(scrollContent, 1000);\n          return _context2.abrupt(\"return\");\n        case 22:\n          scrollContent();\n        case 23:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return function jsSetFocus(_x, _x2, _x3, _x4, _x5) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar hasPointerMoved = function hasPointerMoved(threshold, startCoord, endCoord) {\n  if (startCoord && endCoord) {\n    var deltaX = startCoord.x - endCoord.x;\n    var deltaY = startCoord.y - endCoord.y;\n    var distance = deltaX * deltaX + deltaY * deltaY;\n    return distance > threshold * threshold;\n  }\n  return false;\n};\nvar PADDING_TIMER_KEY = '$ionPaddingTimer';\nvar enableScrollPadding = function enableScrollPadding(keyboardHeight) {\n  var doc = document;\n  var onFocusin = function onFocusin(ev) {\n    setScrollPadding(ev.target, keyboardHeight);\n  };\n  var onFocusout = function onFocusout(ev) {\n    setScrollPadding(ev.target, 0);\n  };\n  doc.addEventListener('focusin', onFocusin);\n  doc.addEventListener('focusout', onFocusout);\n  return function () {\n    doc.removeEventListener('focusin', onFocusin);\n    doc.removeEventListener('focusout', onFocusout);\n  };\n};\nvar setScrollPadding = function setScrollPadding(input, keyboardHeight) {\n  var _a, _b;\n  if (input.tagName !== 'INPUT') {\n    return;\n  }\n  if (input.parentElement && input.parentElement.tagName === 'ION-INPUT') {\n    return;\n  }\n  if (((_b = (_a = input.parentElement) === null || _a === void 0 ? void 0 : _a.parentElement) === null || _b === void 0 ? void 0 : _b.tagName) === 'ION-SEARCHBAR') {\n    return;\n  }\n  var el = findClosestIonContent(input);\n  if (el === null) {\n    return;\n  }\n  var timer = el[PADDING_TIMER_KEY];\n  if (timer) {\n    clearTimeout(timer);\n  }\n  if (keyboardHeight > 0) {\n    el.style.setProperty('--keyboard-offset', \"\".concat(keyboardHeight, \"px\"));\n  } else {\n    el[PADDING_TIMER_KEY] = setTimeout(function () {\n      el.style.setProperty('--keyboard-offset', '0px');\n    }, 120);\n  }\n};\nvar INPUT_BLURRING = true;\nvar SCROLL_PADDING = true;\nvar startInputShims = function startInputShims(config, platform) {\n  var doc = document;\n  var isIOS = platform === 'ios';\n  var isAndroid = platform === 'android';\n  /**\n   * Hide Caret and Input Blurring are needed on iOS.\n   * Scroll Assist and Scroll Padding are needed on iOS and Android\n   * with Chrome web browser (not Chrome webview).\n   */\n  var keyboardHeight = config.getNumber('keyboardHeight', 290);\n  var scrollAssist = config.getBoolean('scrollAssist', true);\n  var hideCaret = config.getBoolean('hideCaretOnScroll', isIOS);\n  var inputBlurring = config.getBoolean('inputBlurring', isIOS);\n  var scrollPadding = config.getBoolean('scrollPadding', true);\n  var inputs = Array.from(doc.querySelectorAll('ion-input, ion-textarea'));\n  var hideCaretMap = new WeakMap();\n  var scrollAssistMap = new WeakMap();\n  var registerInput = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(componentEl) {\n      var inputRoot, inputEl, scrollEl, footerEl, rmFn, isDateInput, _rmFn;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return new Promise(function (resolve) {\n              return componentOnReady(componentEl, resolve);\n            });\n          case 2:\n            inputRoot = componentEl.shadowRoot || componentEl;\n            inputEl = inputRoot.querySelector('input') || inputRoot.querySelector('textarea');\n            scrollEl = findClosestIonContent(componentEl);\n            footerEl = !scrollEl ? componentEl.closest('ion-footer') : null;\n            if (inputEl) {\n              _context3.next = 8;\n              break;\n            }\n            return _context3.abrupt(\"return\");\n          case 8:\n            if (!!scrollEl && hideCaret && !hideCaretMap.has(componentEl)) {\n              rmFn = enableHideCaretOnScroll(componentEl, inputEl, scrollEl);\n              hideCaretMap.set(componentEl, rmFn);\n            }\n            /**\n             * date/datetime-locale inputs on mobile devices show date picker\n             * overlays instead of keyboards. As a result, scroll assist is\n             * not needed. This also works around a bug in iOS <16 where\n             * scroll assist causes the browser to lock up. See FW-1997.\n             */\n            isDateInput = inputEl.type === 'date' || inputEl.type === 'datetime-local';\n            if (!isDateInput && (!!scrollEl || !!footerEl) && scrollAssist && !scrollAssistMap.has(componentEl)) {\n              _rmFn = enableScrollAssist(componentEl, inputEl, scrollEl, footerEl, keyboardHeight, isAndroid);\n              scrollAssistMap.set(componentEl, _rmFn);\n            }\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }));\n    return function registerInput(_x6) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var unregisterInput = function unregisterInput(componentEl) {\n    if (hideCaret) {\n      var fn = hideCaretMap.get(componentEl);\n      if (fn) {\n        fn();\n      }\n      hideCaretMap.delete(componentEl);\n    }\n    if (scrollAssist) {\n      var _fn = scrollAssistMap.get(componentEl);\n      if (_fn) {\n        _fn();\n      }\n      scrollAssistMap.delete(componentEl);\n    }\n  };\n  if (inputBlurring && INPUT_BLURRING) {\n    enableInputBlurring();\n  }\n  if (scrollPadding && SCROLL_PADDING) {\n    enableScrollPadding(keyboardHeight);\n  }\n  // Input might be already loaded in the DOM before ion-device-hacks did.\n  // At this point we need to look for all of the inputs not registered yet\n  // and register them.\n  for (var _i = 0, _inputs = inputs; _i < _inputs.length; _i++) {\n    var input = _inputs[_i];\n    registerInput(input);\n  }\n  doc.addEventListener('ionInputDidLoad', function (ev) {\n    registerInput(ev.detail);\n  });\n  doc.addEventListener('ionInputDidUnload', function (ev) {\n    unregisterInput(ev.detail);\n  });\n};\nexport { startInputShims };","map":{"version":3,"names":["g","getScrollElement","c","scrollByPoint","a","findClosestIonContent","addEventListener","b","removeEventListener","r","raf","p","pointerCoord","componentOnReady","cloneMap","WeakMap","relocateInput","componentEl","inputEl","shouldRelocate","inputRelativeY","disabledClonedInput","has","addClone","removeClone","isFocused","input","getRootNode","activeElement","parentEl","parentNode","clonedEl","cloneNode","classList","add","tabIndex","disabled","appendChild","set","doc","ownerDocument","tx","dir","style","pointerEvents","transform","clone","get","delete","remove","enableHideCaretOnScroll","scrollEl","scrollHideCaret","shouldHideCaret","onBlur","hideCaret","showCaret","SKIP_SELECTOR","enableInputBlurring","focused","didScroll","document","onScroll","onFocusin","onTouchend","ev","active","matches","tapped","target","closest","setTimeout","blur","SCROLL_ASSIST_SPEED","getScrollData","contentEl","keyboardHeight","_a","itemEl","calcScrollData","getBoundingClientRect","defaultView","innerHeight","inputRect","contentRect","platformHeight","inputTop","top","inputBottom","bottom","visibleAreaTop","visibleAreaBottom","Math","min","safeAreaTop","safeAreaBottom","distanceToBottom","distanceToTop","desiredScrollAmount","round","scrollAmount","distance","abs","duration","scrollDuration","max","scrollPadding","inputSafeY","enableScrollAssist","footerEl","disableClonedInput","coord","touchStart","touchEnd","endCoord","hasPointerMoved","jsSetFocus","capture","passive","scrollData","focus","click","window","scrollContent","scrollContentTimeout","undefined","clearTimeout","doubleKeyboardEventListener","totalScrollAmount","scrollHeight","clientHeight","scrollTop","type","threshold","startCoord","deltaX","x","deltaY","y","PADDING_TIMER_KEY","enableScrollPadding","setScrollPadding","onFocusout","_b","tagName","parentElement","el","timer","setProperty","INPUT_BLURRING","SCROLL_PADDING","startInputShims","config","platform","isIOS","isAndroid","getNumber","scrollAssist","getBoolean","inputBlurring","inputs","Array","from","querySelectorAll","hideCaretMap","scrollAssistMap","registerInput","Promise","resolve","inputRoot","shadowRoot","querySelector","rmFn","isDateInput","unregisterInput","fn","detail"],"sources":["/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@ionic/core/components/input-shims.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { g as getScrollElement, c as scrollByPoint, a as findClosestIonContent } from './index9.js';\nimport { a as addEventListener, b as removeEventListener, r as raf, p as pointerCoord, c as componentOnReady } from './helpers.js';\n\nconst cloneMap = new WeakMap();\nconst relocateInput = (componentEl, inputEl, shouldRelocate, inputRelativeY = 0, disabledClonedInput = false) => {\n  if (cloneMap.has(componentEl) === shouldRelocate) {\n    return;\n  }\n  if (shouldRelocate) {\n    addClone(componentEl, inputEl, inputRelativeY, disabledClonedInput);\n  }\n  else {\n    removeClone(componentEl, inputEl);\n  }\n};\nconst isFocused = (input) => {\n  return input === input.getRootNode().activeElement;\n};\nconst addClone = (componentEl, inputEl, inputRelativeY, disabledClonedInput = false) => {\n  // this allows for the actual input to receive the focus from\n  // the user's touch event, but before it receives focus, it\n  // moves the actual input to a location that will not screw\n  // up the app's layout, and does not allow the native browser\n  // to attempt to scroll the input into place (messing up headers/footers)\n  // the cloned input fills the area of where native input should be\n  // while the native input fakes out the browser by relocating itself\n  // before it receives the actual focus event\n  // We hide the focused input (with the visible caret) invisible by making it scale(0),\n  const parentEl = inputEl.parentNode;\n  // DOM WRITES\n  const clonedEl = inputEl.cloneNode(false);\n  clonedEl.classList.add('cloned-input');\n  clonedEl.tabIndex = -1;\n  /**\n   * Making the cloned input disabled prevents\n   * Chrome for Android from still scrolling\n   * the entire page since this cloned input\n   * will briefly be hidden by the keyboard\n   * even though it is not focused.\n   *\n   * This is not needed on iOS. While this\n   * does not cause functional issues on iOS,\n   * the input still appears slightly dimmed even\n   * if we set opacity: 1.\n   */\n  if (disabledClonedInput) {\n    clonedEl.disabled = true;\n  }\n  parentEl.appendChild(clonedEl);\n  cloneMap.set(componentEl, clonedEl);\n  const doc = componentEl.ownerDocument;\n  const tx = doc.dir === 'rtl' ? 9999 : -9999;\n  componentEl.style.pointerEvents = 'none';\n  inputEl.style.transform = `translate3d(${tx}px,${inputRelativeY}px,0) scale(0)`;\n};\nconst removeClone = (componentEl, inputEl) => {\n  const clone = cloneMap.get(componentEl);\n  if (clone) {\n    cloneMap.delete(componentEl);\n    clone.remove();\n  }\n  componentEl.style.pointerEvents = '';\n  inputEl.style.transform = '';\n};\n\nconst enableHideCaretOnScroll = (componentEl, inputEl, scrollEl) => {\n  if (!scrollEl || !inputEl) {\n    return () => {\n      return;\n    };\n  }\n  const scrollHideCaret = (shouldHideCaret) => {\n    if (isFocused(inputEl)) {\n      relocateInput(componentEl, inputEl, shouldHideCaret);\n    }\n  };\n  const onBlur = () => relocateInput(componentEl, inputEl, false);\n  const hideCaret = () => scrollHideCaret(true);\n  const showCaret = () => scrollHideCaret(false);\n  addEventListener(scrollEl, 'ionScrollStart', hideCaret);\n  addEventListener(scrollEl, 'ionScrollEnd', showCaret);\n  inputEl.addEventListener('blur', onBlur);\n  return () => {\n    removeEventListener(scrollEl, 'ionScrollStart', hideCaret);\n    removeEventListener(scrollEl, 'ionScrollEnd', showCaret);\n    inputEl.addEventListener('ionBlur', onBlur);\n  };\n};\n\nconst SKIP_SELECTOR = 'input, textarea, [no-blur], [contenteditable]';\nconst enableInputBlurring = () => {\n  let focused = true;\n  let didScroll = false;\n  const doc = document;\n  const onScroll = () => {\n    didScroll = true;\n  };\n  const onFocusin = () => {\n    focused = true;\n  };\n  const onTouchend = (ev) => {\n    // if app did scroll return early\n    if (didScroll) {\n      didScroll = false;\n      return;\n    }\n    const active = doc.activeElement;\n    if (!active) {\n      return;\n    }\n    // only blur if the active element is a text-input or a textarea\n    if (active.matches(SKIP_SELECTOR)) {\n      return;\n    }\n    // if the selected target is the active element, do not blur\n    const tapped = ev.target;\n    if (tapped === active) {\n      return;\n    }\n    if (tapped.matches(SKIP_SELECTOR) || tapped.closest(SKIP_SELECTOR)) {\n      return;\n    }\n    focused = false;\n    // TODO FW-2796: find a better way, why 50ms?\n    setTimeout(() => {\n      if (!focused) {\n        active.blur();\n      }\n    }, 50);\n  };\n  addEventListener(doc, 'ionScrollStart', onScroll);\n  doc.addEventListener('focusin', onFocusin, true);\n  doc.addEventListener('touchend', onTouchend, false);\n  return () => {\n    removeEventListener(doc, 'ionScrollStart', onScroll, true);\n    doc.removeEventListener('focusin', onFocusin, true);\n    doc.removeEventListener('touchend', onTouchend, false);\n  };\n};\n\nconst SCROLL_ASSIST_SPEED = 0.3;\nconst getScrollData = (componentEl, contentEl, keyboardHeight) => {\n  var _a;\n  const itemEl = (_a = componentEl.closest('ion-item,[ion-item]')) !== null && _a !== void 0 ? _a : componentEl;\n  return calcScrollData(itemEl.getBoundingClientRect(), contentEl.getBoundingClientRect(), keyboardHeight, componentEl.ownerDocument.defaultView.innerHeight);\n};\nconst calcScrollData = (inputRect, contentRect, keyboardHeight, platformHeight) => {\n  // compute input's Y values relative to the body\n  const inputTop = inputRect.top;\n  const inputBottom = inputRect.bottom;\n  // compute visible area\n  const visibleAreaTop = contentRect.top;\n  const visibleAreaBottom = Math.min(contentRect.bottom, platformHeight - keyboardHeight);\n  // compute safe area\n  const safeAreaTop = visibleAreaTop + 15;\n  const safeAreaBottom = visibleAreaBottom * 0.75;\n  // figure out if each edge of the input is within the safe area\n  const distanceToBottom = safeAreaBottom - inputBottom;\n  const distanceToTop = safeAreaTop - inputTop;\n  // desiredScrollAmount is the negated distance to the safe area according to our calculations.\n  const desiredScrollAmount = Math.round(distanceToBottom < 0 ? -distanceToBottom : distanceToTop > 0 ? -distanceToTop : 0);\n  // our calculations make some assumptions that aren't always true, like the keyboard being closed when an input\n  // gets focus, so make sure we don't scroll the input above the visible area\n  const scrollAmount = Math.min(desiredScrollAmount, inputTop - visibleAreaTop);\n  const distance = Math.abs(scrollAmount);\n  const duration = distance / SCROLL_ASSIST_SPEED;\n  const scrollDuration = Math.min(400, Math.max(150, duration));\n  return {\n    scrollAmount,\n    scrollDuration,\n    scrollPadding: keyboardHeight,\n    inputSafeY: -(inputTop - safeAreaTop) + 4,\n  };\n};\n\nconst enableScrollAssist = (componentEl, inputEl, contentEl, footerEl, keyboardHeight, disableClonedInput = false) => {\n  let coord;\n  const touchStart = (ev) => {\n    coord = pointerCoord(ev);\n  };\n  const touchEnd = (ev) => {\n    // input cover touchend/mouseup\n    if (!coord) {\n      return;\n    }\n    // get where the touchend/mouseup ended\n    const endCoord = pointerCoord(ev);\n    // focus this input if the pointer hasn't moved XX pixels\n    // and the input doesn't already have focus\n    if (!hasPointerMoved(6, coord, endCoord) && !isFocused(inputEl)) {\n      // begin the input focus process\n      jsSetFocus(componentEl, inputEl, contentEl, footerEl, keyboardHeight, disableClonedInput);\n    }\n  };\n  componentEl.addEventListener('touchstart', touchStart, { capture: true, passive: true });\n  componentEl.addEventListener('touchend', touchEnd, true);\n  return () => {\n    componentEl.removeEventListener('touchstart', touchStart, true);\n    componentEl.removeEventListener('touchend', touchEnd, true);\n  };\n};\nconst jsSetFocus = async (componentEl, inputEl, contentEl, footerEl, keyboardHeight, disableClonedInput = false) => {\n  if (!contentEl && !footerEl) {\n    return;\n  }\n  const scrollData = getScrollData(componentEl, (contentEl || footerEl), keyboardHeight);\n  if (contentEl && Math.abs(scrollData.scrollAmount) < 4) {\n    // the text input is in a safe position that doesn't\n    // require it to be scrolled into view, just set focus now\n    inputEl.focus();\n    return;\n  }\n  // temporarily move the focus to the focus holder so the browser\n  // doesn't freak out while it's trying to get the input in place\n  // at this point the native text input still does not have focus\n  relocateInput(componentEl, inputEl, true, scrollData.inputSafeY, disableClonedInput);\n  inputEl.focus();\n  /**\n   * Relocating/Focusing input causes the\n   * click event to be cancelled, so\n   * manually fire one here.\n   */\n  raf(() => componentEl.click());\n  if (typeof window !== 'undefined') {\n    let scrollContentTimeout;\n    const scrollContent = async () => {\n      // clean up listeners and timeouts\n      if (scrollContentTimeout !== undefined) {\n        clearTimeout(scrollContentTimeout);\n      }\n      window.removeEventListener('ionKeyboardDidShow', doubleKeyboardEventListener);\n      window.removeEventListener('ionKeyboardDidShow', scrollContent);\n      // scroll the input into place\n      if (contentEl) {\n        await scrollByPoint(contentEl, 0, scrollData.scrollAmount, scrollData.scrollDuration);\n      }\n      // the scroll view is in the correct position now\n      // give the native text input focus\n      relocateInput(componentEl, inputEl, false, scrollData.inputSafeY);\n      // ensure this is the focused input\n      inputEl.focus();\n    };\n    const doubleKeyboardEventListener = () => {\n      window.removeEventListener('ionKeyboardDidShow', doubleKeyboardEventListener);\n      window.addEventListener('ionKeyboardDidShow', scrollContent);\n    };\n    if (contentEl) {\n      const scrollEl = await getScrollElement(contentEl);\n      /**\n       * scrollData will only consider the amount we need\n       * to scroll in order to properly bring the input\n       * into view. It will not consider the amount\n       * we can scroll in the content element.\n       * As a result, scrollData may request a greater\n       * scroll position than is currently available\n       * in the DOM. If this is the case, we need to\n       * wait for the webview to resize/the keyboard\n       * to show in order for additional scroll\n       * bandwidth to become available.\n       */\n      const totalScrollAmount = scrollEl.scrollHeight - scrollEl.clientHeight;\n      if (scrollData.scrollAmount > totalScrollAmount - scrollEl.scrollTop) {\n        /**\n         * On iOS devices, the system will show a \"Passwords\" bar above the keyboard\n         * after the initial keyboard is shown. This prevents the webview from resizing\n         * until the \"Passwords\" bar is shown, so we need to wait for that to happen first.\n         */\n        if (inputEl.type === 'password') {\n          // Add 50px to account for the \"Passwords\" bar\n          scrollData.scrollAmount += 50;\n          window.addEventListener('ionKeyboardDidShow', doubleKeyboardEventListener);\n        }\n        else {\n          window.addEventListener('ionKeyboardDidShow', scrollContent);\n        }\n        /**\n         * This should only fire in 2 instances:\n         * 1. The app is very slow.\n         * 2. The app is running in a browser on an old OS\n         * that does not support Ionic Keyboard Events\n         */\n        scrollContentTimeout = setTimeout(scrollContent, 1000);\n        return;\n      }\n    }\n    scrollContent();\n  }\n};\nconst hasPointerMoved = (threshold, startCoord, endCoord) => {\n  if (startCoord && endCoord) {\n    const deltaX = startCoord.x - endCoord.x;\n    const deltaY = startCoord.y - endCoord.y;\n    const distance = deltaX * deltaX + deltaY * deltaY;\n    return distance > threshold * threshold;\n  }\n  return false;\n};\n\nconst PADDING_TIMER_KEY = '$ionPaddingTimer';\nconst enableScrollPadding = (keyboardHeight) => {\n  const doc = document;\n  const onFocusin = (ev) => {\n    setScrollPadding(ev.target, keyboardHeight);\n  };\n  const onFocusout = (ev) => {\n    setScrollPadding(ev.target, 0);\n  };\n  doc.addEventListener('focusin', onFocusin);\n  doc.addEventListener('focusout', onFocusout);\n  return () => {\n    doc.removeEventListener('focusin', onFocusin);\n    doc.removeEventListener('focusout', onFocusout);\n  };\n};\nconst setScrollPadding = (input, keyboardHeight) => {\n  var _a, _b;\n  if (input.tagName !== 'INPUT') {\n    return;\n  }\n  if (input.parentElement && input.parentElement.tagName === 'ION-INPUT') {\n    return;\n  }\n  if (((_b = (_a = input.parentElement) === null || _a === void 0 ? void 0 : _a.parentElement) === null || _b === void 0 ? void 0 : _b.tagName) === 'ION-SEARCHBAR') {\n    return;\n  }\n  const el = findClosestIonContent(input);\n  if (el === null) {\n    return;\n  }\n  const timer = el[PADDING_TIMER_KEY];\n  if (timer) {\n    clearTimeout(timer);\n  }\n  if (keyboardHeight > 0) {\n    el.style.setProperty('--keyboard-offset', `${keyboardHeight}px`);\n  }\n  else {\n    el[PADDING_TIMER_KEY] = setTimeout(() => {\n      el.style.setProperty('--keyboard-offset', '0px');\n    }, 120);\n  }\n};\n\nconst INPUT_BLURRING = true;\nconst SCROLL_PADDING = true;\nconst startInputShims = (config, platform) => {\n  const doc = document;\n  const isIOS = platform === 'ios';\n  const isAndroid = platform === 'android';\n  /**\n   * Hide Caret and Input Blurring are needed on iOS.\n   * Scroll Assist and Scroll Padding are needed on iOS and Android\n   * with Chrome web browser (not Chrome webview).\n   */\n  const keyboardHeight = config.getNumber('keyboardHeight', 290);\n  const scrollAssist = config.getBoolean('scrollAssist', true);\n  const hideCaret = config.getBoolean('hideCaretOnScroll', isIOS);\n  const inputBlurring = config.getBoolean('inputBlurring', isIOS);\n  const scrollPadding = config.getBoolean('scrollPadding', true);\n  const inputs = Array.from(doc.querySelectorAll('ion-input, ion-textarea'));\n  const hideCaretMap = new WeakMap();\n  const scrollAssistMap = new WeakMap();\n  const registerInput = async (componentEl) => {\n    await new Promise((resolve) => componentOnReady(componentEl, resolve));\n    const inputRoot = componentEl.shadowRoot || componentEl;\n    const inputEl = inputRoot.querySelector('input') || inputRoot.querySelector('textarea');\n    const scrollEl = findClosestIonContent(componentEl);\n    const footerEl = !scrollEl ? componentEl.closest('ion-footer') : null;\n    if (!inputEl) {\n      return;\n    }\n    if (!!scrollEl && hideCaret && !hideCaretMap.has(componentEl)) {\n      const rmFn = enableHideCaretOnScroll(componentEl, inputEl, scrollEl);\n      hideCaretMap.set(componentEl, rmFn);\n    }\n    /**\n     * date/datetime-locale inputs on mobile devices show date picker\n     * overlays instead of keyboards. As a result, scroll assist is\n     * not needed. This also works around a bug in iOS <16 where\n     * scroll assist causes the browser to lock up. See FW-1997.\n     */\n    const isDateInput = inputEl.type === 'date' || inputEl.type === 'datetime-local';\n    if (!isDateInput &&\n      (!!scrollEl || !!footerEl) &&\n      scrollAssist &&\n      !scrollAssistMap.has(componentEl)) {\n      const rmFn = enableScrollAssist(componentEl, inputEl, scrollEl, footerEl, keyboardHeight, isAndroid);\n      scrollAssistMap.set(componentEl, rmFn);\n    }\n  };\n  const unregisterInput = (componentEl) => {\n    if (hideCaret) {\n      const fn = hideCaretMap.get(componentEl);\n      if (fn) {\n        fn();\n      }\n      hideCaretMap.delete(componentEl);\n    }\n    if (scrollAssist) {\n      const fn = scrollAssistMap.get(componentEl);\n      if (fn) {\n        fn();\n      }\n      scrollAssistMap.delete(componentEl);\n    }\n  };\n  if (inputBlurring && INPUT_BLURRING) {\n    enableInputBlurring();\n  }\n  if (scrollPadding && SCROLL_PADDING) {\n    enableScrollPadding(keyboardHeight);\n  }\n  // Input might be already loaded in the DOM before ion-device-hacks did.\n  // At this point we need to look for all of the inputs not registered yet\n  // and register them.\n  for (const input of inputs) {\n    registerInput(input);\n  }\n  doc.addEventListener('ionInputDidLoad', ((ev) => {\n    registerInput(ev.detail);\n  }));\n  doc.addEventListener('ionInputDidUnload', ((ev) => {\n    unregisterInput(ev.detail);\n  }));\n};\n\nexport { startInputShims };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}