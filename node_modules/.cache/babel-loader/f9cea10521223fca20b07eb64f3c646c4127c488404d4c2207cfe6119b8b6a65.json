{"ast":null,"code":"import _defineProperty from \"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _regeneratorRuntime from \"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _toConsumableArray from \"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, writeTask, h, Host } from '@stencil/core/internal/client';\nimport { a as chevronBack, f as chevronForward, c as chevronDown, g as caretUpSharp, h as caretDownSharp } from './index7.js';\nimport { b as getIonMode } from './ionic-global.js';\nimport { startFocusVisible } from './focus-visible.js';\nimport { r as raf, e as renderHiddenInput, g as getElementRoot } from './helpers.js';\nimport { p as printIonWarning, a as printIonError } from './index8.js';\nimport { i as isRTL } from './dir.js';\nimport { c as createColorClasses } from './theme.js';\nimport { g as generateDayAriaLabel, a as getDay, i as isBefore, b as isAfter, c as isSameDay, d as getPreviousMonth, e as getNextMonth, v as validateParts, f as getPartsFromCalendarDay, h as getEndOfWeek, j as getStartOfWeek, k as getPreviousDay, l as getNextDay, m as getPreviousWeek, n as getNextWeek, p as parseMinParts, o as parseMaxParts, q as parseDate, w as warnIfValueOutOfBounds, r as convertToArrayOfNumbers, s as convertDataToISO, t as getToday, u as getClosestValidDate, x as getNumDaysInMonth, y as getCombinedDateColumnData, z as getMonthColumnData, A as getDayColumnData, B as getYearColumnData, C as isMonthFirstLocale, D as getTimeColumnsData, E as isLocaleDayPeriodRTL, F as getMonthAndYear, G as getDaysOfWeek, H as getDaysOfMonth, I as generateMonths, J as is24Hour, K as getLocalizedTime, L as getMonthAndDay, M as formatValue, N as getNextYear, O as getPreviousYear, P as clampDate, Q as parseAmPm, R as calculateHourFromAMPM } from './data.js';\nimport { d as defineCustomElement$c } from './backdrop.js';\nimport { d as defineCustomElement$b } from './button.js';\nimport { d as defineCustomElement$a } from './buttons.js';\nimport { d as defineCustomElement$9 } from './icon.js';\nimport { d as defineCustomElement$8 } from './item.js';\nimport { d as defineCustomElement$7 } from './label.js';\nimport { d as defineCustomElement$6 } from './note.js';\nimport { d as defineCustomElement$5 } from './picker-column-internal.js';\nimport { d as defineCustomElement$4 } from './picker-internal.js';\nimport { d as defineCustomElement$3 } from './popover.js';\nimport { d as defineCustomElement$2 } from './ripple-effect.js';\nvar isYearDisabled = function isYearDisabled(refYear, minParts, maxParts) {\n  if (minParts && minParts.year > refYear) {\n    return true;\n  }\n  if (maxParts && maxParts.year < refYear) {\n    return true;\n  }\n  return false;\n};\n/**\n * Returns true if a given day should\n * not be interactive according to its value,\n * or the max/min dates.\n */\nvar isDayDisabled = function isDayDisabled(refParts, minParts, maxParts, dayValues) {\n  /**\n   * If this is a filler date (i.e. padding)\n   * then the date is disabled.\n   */\n  if (refParts.day === null) {\n    return true;\n  }\n  /**\n   * If user passed in a list of acceptable day values\n   * check to make sure that the date we are looking\n   * at is in this array.\n   */\n  if (dayValues !== undefined && !dayValues.includes(refParts.day)) {\n    return true;\n  }\n  /**\n   * Given a min date, perform the following\n   * checks. If any of them are true, then the\n   * day should be disabled:\n   * 1. Is the current year < the min allowed year?\n   * 2. Is the current year === min allowed year,\n   * but the current month < the min allowed month?\n   * 3. Is the current year === min allowed year, the\n   * current month === min allow month, but the current\n   * day < the min allowed day?\n   */\n  if (minParts && isBefore(refParts, minParts)) {\n    return true;\n  }\n  /**\n   * Given a max date, perform the following\n   * checks. If any of them are true, then the\n   * day should be disabled:\n   * 1. Is the current year > the max allowed year?\n   * 2. Is the current year === max allowed year,\n   * but the current month > the max allowed month?\n   * 3. Is the current year === max allowed year, the\n   * current month === max allow month, but the current\n   * day > the max allowed day?\n   */\n  if (maxParts && isAfter(refParts, maxParts)) {\n    return true;\n  }\n  /**\n   * If none of these checks\n   * passed then the date should\n   * be interactive.\n   */\n  return false;\n};\n/**\n * Given a locale, a date, the selected date(s), and today's date,\n * generate the state for a given calendar day button.\n */\nvar getCalendarDayState = function getCalendarDayState(locale, refParts, activeParts, todayParts, minParts, maxParts, dayValues) {\n  /**\n   * activeParts signals what day(s) are currently selected in the datetime.\n   * If multiple=\"true\", this will be an array, but the logic in this util\n   * is the same whether we have one selected day or many because we're only\n   * calculating the state for one button. So, we treat a single activeParts value\n   * the same as an array of length one.\n   */\n  var activePartsArray = Array.isArray(activeParts) ? activeParts : [activeParts];\n  /**\n   * The day button is active if it is selected, or in other words, if refParts\n   * matches at least one selected date.\n   */\n  var isActive = activePartsArray.find(function (parts) {\n    return isSameDay(refParts, parts);\n  }) !== undefined;\n  var isToday = isSameDay(refParts, todayParts);\n  var disabled = isDayDisabled(refParts, minParts, maxParts, dayValues);\n  /**\n   * Note that we always return one object regardless of whether activeParts\n   * was an array, since we pare down to one value for isActive.\n   */\n  return {\n    disabled: disabled,\n    isActive: isActive,\n    isToday: isToday,\n    ariaSelected: isActive ? 'true' : null,\n    ariaLabel: generateDayAriaLabel(locale, isToday, refParts),\n    text: refParts.day != null ? getDay(locale, refParts) : null\n  };\n};\n/**\n * Returns `true` if the month is disabled given the\n * current date value and min/max date constraints.\n */\nvar isMonthDisabled = function isMonthDisabled(refParts, _ref) {\n  var minParts = _ref.minParts,\n    maxParts = _ref.maxParts;\n  // If the year is disabled then the month is disabled.\n  if (isYearDisabled(refParts.year, minParts, maxParts)) {\n    return true;\n  }\n  // If the date value is before the min date, then the month is disabled.\n  // If the date value is after the max date, then the month is disabled.\n  if (minParts && isBefore(refParts, minParts) || maxParts && isAfter(refParts, maxParts)) {\n    return true;\n  }\n  return false;\n};\n/**\n * Given a working date, an optional minimum date range,\n * and an optional maximum date range; determine if the\n * previous navigation button is disabled.\n */\nvar isPrevMonthDisabled = function isPrevMonthDisabled(refParts, minParts, maxParts) {\n  var prevMonth = Object.assign(Object.assign({}, getPreviousMonth(refParts)), {\n    day: null\n  });\n  return isMonthDisabled(prevMonth, {\n    minParts: minParts,\n    maxParts: maxParts\n  });\n};\n/**\n * Given a working date and a maximum date range,\n * determine if the next navigation button is disabled.\n */\nvar isNextMonthDisabled = function isNextMonthDisabled(refParts, maxParts) {\n  var nextMonth = Object.assign(Object.assign({}, getNextMonth(refParts)), {\n    day: null\n  });\n  return isMonthDisabled(nextMonth, {\n    maxParts: maxParts\n  });\n};\nvar datetimeIosCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;background:var(--background);overflow:hidden}ion-picker-column-internal{min-width:26px}:host(.datetime-size-fixed){width:auto;height:auto}:host(.datetime-size-fixed:not(.datetime-prefer-wheel)){max-width:350px}:host(.datetime-size-fixed.datetime-prefer-wheel){min-width:350px;max-width:-webkit-max-content;max-width:-moz-max-content;max-width:max-content}:host(.datetime-size-cover){width:100%}:host .calendar-body,:host .datetime-year{opacity:0}:host(:not(.datetime-ready)) .datetime-year{position:absolute;pointer-events:none}:host(.datetime-ready) .calendar-body{opacity:1}:host(.datetime-ready) .datetime-year{display:none;opacity:1}:host .wheel-order-year-first .day-column{-ms-flex-order:3;order:3;text-align:end}:host .wheel-order-year-first .month-column{-ms-flex-order:2;order:2;text-align:end}:host .wheel-order-year-first .year-column{-ms-flex-order:1;order:1;text-align:start}:host .datetime-calendar,:host .datetime-year{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-flow:column;flex-flow:column}:host(.show-month-and-year) .datetime-year{display:-ms-flexbox;display:flex}@supports (background: -webkit-named-image(apple-pay-logo-black)) and (not (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{left:-99999px;position:absolute;visibility:hidden;pointer-events:none}:host-context([dir=rtl]):host(.show-month-and-year) .calendar-next-prev,:host-context([dir=rtl]).show-month-and-year .calendar-next-prev,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-days-of-week,:host-context([dir=rtl]).show-month-and-year .calendar-days-of-week,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-body,:host-context([dir=rtl]).show-month-and-year .calendar-body,:host-context([dir=rtl]):host(.show-month-and-year) .datetime-time,:host-context([dir=rtl]).show-month-and-year .datetime-time{left:unset;right:unset;right:-99999px}}@supports (not (background: -webkit-named-image(apple-pay-logo-black))) or ((background: -webkit-named-image(apple-pay-logo-black)) and (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{display:none}}:host(.month-year-picker-open) .datetime-footer{display:none}:host(.datetime-readonly),:host(.datetime-disabled){pointer-events:none}:host(.datetime-disabled){opacity:0.4}:host .datetime-header .datetime-title{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host .datetime-action-buttons.has-clear-button{width:100%}:host .datetime-action-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{--background:translucent}:host .calendar-action-buttons ion-item ion-label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .calendar-action-buttons ion-item ion-icon{padding-left:4px;padding-right:0;padding-top:0;padding-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-action-buttons ion-item ion-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:0;padding-inline-end:0}}:host .calendar-days-of-week{display:grid;grid-template-columns:repeat(7, 1fr);text-align:center}:host .calendar-body{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;overflow-x:scroll;overflow-y:hidden;scrollbar-width:none;outline:none}:host .calendar-body .calendar-month{scroll-snap-align:start;scroll-snap-stop:always;-ms-flex-negative:0;flex-shrink:0;width:100%}:host .calendar-body .calendar-month-disabled{scroll-snap-align:none}:host .calendar-body::-webkit-scrollbar{display:none}:host .calendar-body .calendar-month-grid{display:grid;grid-template-columns:repeat(7, 1fr)}:host .calendar-day{padding-left:0px;padding-right:0px;padding-top:0px;padding-bottom:0px;margin-left:0px;margin-right:0px;margin-top:0px;margin-bottom:0px;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border:none;outline:none;background:none;color:currentColor;font-family:var(--ion-font-family, inherit);cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{padding-left:unset;padding-right:unset;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0px;padding-inline-end:0px}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{margin-left:unset;margin-right:unset;-webkit-margin-start:0px;margin-inline-start:0px;-webkit-margin-end:0px;margin-inline-end:0px}}:host .calendar-day[disabled]{pointer-events:none;opacity:0.4}:host .calendar-day:after{border-radius:32px;padding-left:4px;padding-right:4px;padding-top:4px;padding-bottom:4px;position:absolute;top:50%;left:50%;width:32px;height:32px;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);content:\\\" \\\";z-index:-1}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day:after{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px}}:host .datetime-time{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host(.datetime-presentation-time) .datetime-time{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0}:host ion-popover{--height:200px}:host .time-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .time-body{border-radius:8px;padding-left:12px;padding-right:12px;padding-top:6px;padding-bottom:6px;display:-ms-flexbox;display:flex;border:none;background:var(--ion-color-step-300, #edeef0);color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .time-body{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}:host .time-body-active{color:var(--ion-color-base)}:host(.in-item){position:static}:host(.show-month-and-year) .calendar-action-buttons ion-item{--color:var(--ion-color-base)}:host{--background:var(--ion-color-light, #ffffff);--background-rgb:var(--ion-color-light-rgb);--title-color:var(--ion-color-step-600, #666666)}:host(.datetime-presentation-date-time:not(.datetime-prefer-wheel)),:host(.datetime-presentation-time-date:not(.datetime-prefer-wheel)),:host(.datetime-presentation-date:not(.datetime-prefer-wheel)){min-height:350px}:host .datetime-header{padding-left:16px;padding-right:16px;padding-top:16px;padding-bottom:16px;border-bottom:0.55px solid var(--ion-color-step-200, #cccccc);font-size:14px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-header{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host .datetime-header .datetime-title{color:var(--title-color)}:host .datetime-header .datetime-selected-date{margin-top:10px}:host .calendar-action-buttons ion-item{--padding-start:16px;--background-hover:transparent;--background-activated:transparent;font-size:16px;font-weight:600}:host .calendar-action-buttons ion-item ion-icon,:host .calendar-action-buttons ion-buttons ion-button{color:var(--ion-color-base)}:host .calendar-action-buttons ion-buttons{padding-left:0;padding-right:0;padding-top:8px;padding-bottom:0}:host .calendar-action-buttons ion-buttons ion-button{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}:host .calendar-days-of-week{padding-left:8px;padding-right:8px;padding-top:0;padding-bottom:0;color:var(--ion-color-step-300, #b3b3b3);font-size:12px;font-weight:600;line-height:24px;text-transform:uppercase}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-days-of-week{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}:host .calendar-body .calendar-month .calendar-month-grid{padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;height:calc(100% - 16px)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-body .calendar-month .calendar-month-grid{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}:host .calendar-day{font-size:20px}:host .calendar-day:after{opacity:0.2}:host .calendar-day:focus:after{background:var(--ion-color-base)}:host .calendar-day.calendar-day-today{color:var(--ion-color-base)}:host .calendar-day.calendar-day-active{color:var(--ion-color-base);font-weight:600}:host .calendar-day.calendar-day-active:after{background:var(--ion-color-base)}:host .calendar-day.calendar-day-today.calendar-day-active{color:var(--ion-color-contrast)}:host .calendar-day.calendar-day-today.calendar-day-active:after{background:var(--ion-color-base);opacity:1}:host .datetime-time{padding-left:16px;padding-right:16px;padding-top:8px;padding-bottom:16px;font-size:16px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-time{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host .datetime-time .time-header{font-weight:600}:host .datetime-buttons{padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;border-top:0.55px solid var(--ion-color-step-200, #cccccc)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-buttons{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}:host .datetime-buttons ::slotted(ion-buttons),:host .datetime-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between}:host .datetime-action-buttons{width:100%}\";\nvar datetimeMdCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;background:var(--background);overflow:hidden}ion-picker-column-internal{min-width:26px}:host(.datetime-size-fixed){width:auto;height:auto}:host(.datetime-size-fixed:not(.datetime-prefer-wheel)){max-width:350px}:host(.datetime-size-fixed.datetime-prefer-wheel){min-width:350px;max-width:-webkit-max-content;max-width:-moz-max-content;max-width:max-content}:host(.datetime-size-cover){width:100%}:host .calendar-body,:host .datetime-year{opacity:0}:host(:not(.datetime-ready)) .datetime-year{position:absolute;pointer-events:none}:host(.datetime-ready) .calendar-body{opacity:1}:host(.datetime-ready) .datetime-year{display:none;opacity:1}:host .wheel-order-year-first .day-column{-ms-flex-order:3;order:3;text-align:end}:host .wheel-order-year-first .month-column{-ms-flex-order:2;order:2;text-align:end}:host .wheel-order-year-first .year-column{-ms-flex-order:1;order:1;text-align:start}:host .datetime-calendar,:host .datetime-year{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-flow:column;flex-flow:column}:host(.show-month-and-year) .datetime-year{display:-ms-flexbox;display:flex}@supports (background: -webkit-named-image(apple-pay-logo-black)) and (not (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{left:-99999px;position:absolute;visibility:hidden;pointer-events:none}:host-context([dir=rtl]):host(.show-month-and-year) .calendar-next-prev,:host-context([dir=rtl]).show-month-and-year .calendar-next-prev,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-days-of-week,:host-context([dir=rtl]).show-month-and-year .calendar-days-of-week,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-body,:host-context([dir=rtl]).show-month-and-year .calendar-body,:host-context([dir=rtl]):host(.show-month-and-year) .datetime-time,:host-context([dir=rtl]).show-month-and-year .datetime-time{left:unset;right:unset;right:-99999px}}@supports (not (background: -webkit-named-image(apple-pay-logo-black))) or ((background: -webkit-named-image(apple-pay-logo-black)) and (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{display:none}}:host(.month-year-picker-open) .datetime-footer{display:none}:host(.datetime-readonly),:host(.datetime-disabled){pointer-events:none}:host(.datetime-disabled){opacity:0.4}:host .datetime-header .datetime-title{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host .datetime-action-buttons.has-clear-button{width:100%}:host .datetime-action-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{--background:translucent}:host .calendar-action-buttons ion-item ion-label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .calendar-action-buttons ion-item ion-icon{padding-left:4px;padding-right:0;padding-top:0;padding-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-action-buttons ion-item ion-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:0;padding-inline-end:0}}:host .calendar-days-of-week{display:grid;grid-template-columns:repeat(7, 1fr);text-align:center}:host .calendar-body{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;overflow-x:scroll;overflow-y:hidden;scrollbar-width:none;outline:none}:host .calendar-body .calendar-month{scroll-snap-align:start;scroll-snap-stop:always;-ms-flex-negative:0;flex-shrink:0;width:100%}:host .calendar-body .calendar-month-disabled{scroll-snap-align:none}:host .calendar-body::-webkit-scrollbar{display:none}:host .calendar-body .calendar-month-grid{display:grid;grid-template-columns:repeat(7, 1fr)}:host .calendar-day{padding-left:0px;padding-right:0px;padding-top:0px;padding-bottom:0px;margin-left:0px;margin-right:0px;margin-top:0px;margin-bottom:0px;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border:none;outline:none;background:none;color:currentColor;font-family:var(--ion-font-family, inherit);cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{padding-left:unset;padding-right:unset;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0px;padding-inline-end:0px}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{margin-left:unset;margin-right:unset;-webkit-margin-start:0px;margin-inline-start:0px;-webkit-margin-end:0px;margin-inline-end:0px}}:host .calendar-day[disabled]{pointer-events:none;opacity:0.4}:host .calendar-day:after{border-radius:32px;padding-left:4px;padding-right:4px;padding-top:4px;padding-bottom:4px;position:absolute;top:50%;left:50%;width:32px;height:32px;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);content:\\\" \\\";z-index:-1}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day:after{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px}}:host .datetime-time{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host(.datetime-presentation-time) .datetime-time{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0}:host ion-popover{--height:200px}:host .time-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .time-body{border-radius:8px;padding-left:12px;padding-right:12px;padding-top:6px;padding-bottom:6px;display:-ms-flexbox;display:flex;border:none;background:var(--ion-color-step-300, #edeef0);color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .time-body{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}:host .time-body-active{color:var(--ion-color-base)}:host(.in-item){position:static}:host(.show-month-and-year) .calendar-action-buttons ion-item{--color:var(--ion-color-base)}:host{--background:var(--ion-color-step-100, #ffffff);--title-color:var(--ion-color-contrast)}:host .datetime-header{padding-left:20px;padding-right:20px;padding-top:20px;padding-bottom:20px;background:var(--ion-color-base);color:var(--title-color)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-header{padding-left:unset;padding-right:unset;-webkit-padding-start:20px;padding-inline-start:20px;-webkit-padding-end:20px;padding-inline-end:20px}}:host .datetime-header .datetime-title{font-size:12px;text-transform:uppercase}:host .datetime-header .datetime-selected-date{margin-top:30px;font-size:34px}:host .datetime-calendar .calendar-action-buttons ion-item{--padding-start:20px}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{color:var(--ion-color-step-650, #595959)}:host .calendar-days-of-week{padding-left:10px;padding-right:10px;padding-top:0px;padding-bottom:0px;color:var(--ion-color-step-500, gray);font-size:14px;line-height:36px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-days-of-week{padding-left:unset;padding-right:unset;-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px}}:host .calendar-body .calendar-month .calendar-month-grid{padding-left:10px;padding-right:10px;padding-top:4px;padding-bottom:4px;grid-template-rows:repeat(6, 1fr)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-body .calendar-month .calendar-month-grid{padding-left:unset;padding-right:unset;-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px}}:host .calendar-day{padding-left:0px;padding-right:0;padding-top:13px;padding-bottom:13px;font-size:14px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{padding-left:unset;padding-right:unset;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0;padding-inline-end:0}}:host .calendar-day:focus:after{background:rgba(var(--ion-color-base-rgb), 0.2);-webkit-box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2);box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2)}:host .calendar-day.calendar-day-today{color:var(--ion-color-base)}:host .calendar-day.calendar-day-today:after{border:1px solid var(--ion-color-base)}:host .calendar-day.calendar-day-active{color:var(--ion-color-contrast)}:host .calendar-day.calendar-day-active:after{border:1px solid var(--ion-color-base);background:var(--ion-color-base)}:host .datetime-time{padding-left:16px;padding-right:16px;padding-top:8px;padding-bottom:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-time{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host .time-header{color:var(--ion-color-step-650, #595959)}:host(.datetime-presentation-month) .datetime-year,:host(.datetime-presentation-year) .datetime-year,:host(.datetime-presentation-month-year) .datetime-year{margin-top:20px;margin-bottom:20px}:host .datetime-buttons{padding-left:10px;padding-right:10px;padding-top:10px;padding-bottom:10px;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:end;justify-content:flex-end}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-buttons{padding-left:unset;padding-right:unset;-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px}}:host .datetime-view-buttons ion-button{color:var(--ion-color-step-800, #333333)}\";\nvar Datetime = /*@__PURE__*/proxyCustomElement( /*#__PURE__*/function (_HTMLElement) {\n  _inherits(_class, _HTMLElement);\n  var _super = _createSuper(_class);\n  function _class() {\n    var _this;\n    _classCallCheck(this, _class);\n    _this = _super.call(this);\n    _this.__registerHost();\n    _this.__attachShadow();\n    _this.ionCancel = createEvent(_assertThisInitialized(_this), \"ionCancel\", 7);\n    _this.ionChange = createEvent(_assertThisInitialized(_this), \"ionChange\", 7);\n    _this.ionFocus = createEvent(_assertThisInitialized(_this), \"ionFocus\", 7);\n    _this.ionBlur = createEvent(_assertThisInitialized(_this), \"ionBlur\", 7);\n    _this.ionStyle = createEvent(_assertThisInitialized(_this), \"ionStyle\", 7);\n    _this.ionRender = createEvent(_assertThisInitialized(_this), \"ionRender\", 7);\n    _this.inputId = \"ion-dt-\".concat(datetimeIds++);\n    _this.prevPresentation = null;\n    /**\n     * Duplicate reference to `activeParts` that does not trigger a re-render of the component.\n     * Allows caching an instance of the `activeParts` in between render cycles.\n     */\n    _this.activePartsClone = [];\n    _this.showMonthAndYear = false;\n    _this.activeParts = [];\n    _this.workingParts = {\n      month: 5,\n      day: 28,\n      year: 2021,\n      hour: 13,\n      minute: 52,\n      ampm: 'pm'\n    };\n    _this.isPresented = false;\n    _this.isTimePopoverOpen = false;\n    /**\n     * The color to use from your application's color palette.\n     * Default options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\n     * For more information on colors, see [theming](/docs/theming/basics).\n     */\n    _this.color = 'primary';\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n    _this.name = _this.inputId;\n    /**\n     * If `true`, the user cannot interact with the datetime.\n     */\n    _this.disabled = false;\n    /**\n     * If `true`, the datetime appears normal but is not interactive.\n     */\n    _this.readonly = false;\n    /**\n     * Which values you want to select. `'date'` will show\n     * a calendar picker to select the month, day, and year. `'time'`\n     * will show a time picker to select the hour, minute, and (optionally)\n     * AM/PM. `'date-time'` will show the date picker first and time picker second.\n     * `'time-date'` will show the time picker first and date picker second.\n     */\n    _this.presentation = 'date-time';\n    /**\n     * The text to display on the picker's cancel button.\n     */\n    _this.cancelText = 'Cancel';\n    /**\n     * The text to display on the picker's \"Done\" button.\n     */\n    _this.doneText = 'Done';\n    /**\n     * The text to display on the picker's \"Clear\" button.\n     */\n    _this.clearText = 'Clear';\n    /**\n     * The locale to use for `ion-datetime`. This\n     * impacts month and day name formatting.\n     * The `'default'` value refers to the default\n     * locale set by your device.\n     */\n    _this.locale = 'default';\n    /**\n     * The first day of the week to use for `ion-datetime`. The\n     * default value is `0` and represents Sunday.\n     */\n    _this.firstDayOfWeek = 0;\n    /**\n     * If `true`, multiple dates can be selected at once. Only\n     * applies to `presentation=\"date\"` and `preferWheel=\"false\"`.\n     */\n    _this.multiple = false;\n    /**\n     * If `true`, a header will be shown above the calendar\n     * picker. This will include both the slotted title, and\n     * the selected date.\n     */\n    _this.showDefaultTitle = false;\n    /**\n     * If `true`, the default \"Cancel\" and \"OK\" buttons\n     * will be rendered at the bottom of the `ion-datetime`\n     * component. Developers can also use the `button` slot\n     * if they want to customize these buttons. If custom\n     * buttons are set in the `button` slot then the\n     * default buttons will not be rendered.\n     */\n    _this.showDefaultButtons = false;\n    /**\n     * If `true`, a \"Clear\" button will be rendered alongside\n     * the default \"Cancel\" and \"OK\" buttons at the bottom of the `ion-datetime`\n     * component. Developers can also use the `button` slot\n     * if they want to customize these buttons. If custom\n     * buttons are set in the `button` slot then the\n     * default buttons will not be rendered.\n     */\n    _this.showClearButton = false;\n    /**\n     * If `true`, the default \"Time\" label will be rendered\n     * for the time selector of the `ion-datetime` component.\n     * Developers can also use the `time-label` slot\n     * if they want to customize this label. If a custom\n     * label is set in the `time-label` slot then the\n     * default label will not be rendered.\n     */\n    _this.showDefaultTimeLabel = true;\n    /**\n     * If `cover`, the `ion-datetime` will expand to cover the full width of its container.\n     * If `fixed`, the `ion-datetime` will have a fixed width.\n     */\n    _this.size = 'fixed';\n    /**\n     * If `true`, a wheel picker will be rendered instead of a calendar grid\n     * where possible. If `false`, a calendar grid will be rendered instead of\n     * a wheel picker where possible.\n     *\n     * A wheel picker can be rendered instead of a grid when `presentation` is\n     * one of the following values: `'date'`, `'date-time'`, or `'time-date'`.\n     *\n     * A wheel picker will always be rendered regardless of\n     * the `preferWheel` value when `presentation` is one of the following values:\n     * `'time'`, `'month'`, `'month-year'`, or `'year'`.\n     */\n    _this.preferWheel = false;\n    /**\n     * Returns the DatetimePart interface\n     * to use when rendering an initial set of\n     * data. This should be used when rendering an\n     * interface in an environment where the `value`\n     * may not be set. This function works\n     * by returning the first selected date in\n     * \"activePartsClone\" and then falling back to\n     * defaultParts if no active date is selected.\n     */\n    _this.getActivePartsWithFallback = function () {\n      var _a;\n      var _assertThisInitialize = _assertThisInitialized(_this),\n        defaultParts = _assertThisInitialize.defaultParts;\n      return (_a = _this.getActivePart()) !== null && _a !== void 0 ? _a : defaultParts;\n    };\n    _this.getActivePart = function () {\n      var _assertThisInitialize2 = _assertThisInitialized(_this),\n        activePartsClone = _assertThisInitialize2.activePartsClone;\n      return Array.isArray(activePartsClone) ? activePartsClone[0] : activePartsClone;\n    };\n    _this.closeParentOverlay = function () {\n      var popoverOrModal = _this.el.closest('ion-modal, ion-popover');\n      if (popoverOrModal) {\n        popoverOrModal.dismiss();\n      }\n    };\n    _this.setWorkingParts = function (parts) {\n      _this.workingParts = Object.assign({}, parts);\n    };\n    _this.setActiveParts = function (parts) {\n      var removeDate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var _assertThisInitialize3 = _assertThisInitialized(_this),\n        multiple = _assertThisInitialize3.multiple,\n        minParts = _assertThisInitialize3.minParts,\n        maxParts = _assertThisInitialize3.maxParts,\n        activePartsClone = _assertThisInitialize3.activePartsClone;\n      /**\n       * When setting the active parts, it is possible\n       * to set invalid data. For example,\n       * when updating January 31 to February,\n       * February 31 does not exist. As a result\n       * we need to validate the active parts and\n       * ensure that we are only setting valid dates.\n       * Additionally, we need to update the working parts\n       * too in the event that the validated parts are different.\n       */\n      var validatedParts = validateParts(parts, minParts, maxParts);\n      _this.setWorkingParts(validatedParts);\n      if (multiple) {\n        /**\n         * We read from activePartsClone here because valueChanged() only updates that,\n         * so it's the more reliable source of truth. If we read from activeParts, then\n         * if you click July 1, manually set the value to July 2, and then click July 3,\n         * the new value would be [July 1, July 3], ignoring the value set.\n         *\n         * We can then pass the new value to activeParts (rather than activePartsClone)\n         * since the clone will be updated automatically by activePartsChanged().\n         */\n        var activePartsArray = Array.isArray(activePartsClone) ? activePartsClone : [activePartsClone];\n        if (removeDate) {\n          _this.activeParts = activePartsArray.filter(function (p) {\n            return !isSameDay(p, validatedParts);\n          });\n        } else {\n          _this.activeParts = [].concat(_toConsumableArray(activePartsArray), [validatedParts]);\n        }\n      } else {\n        _this.activeParts = Object.assign({}, validatedParts);\n      }\n      var hasSlottedButtons = _this.el.querySelector('[slot=\"buttons\"]') !== null;\n      if (hasSlottedButtons || _this.showDefaultButtons) {\n        return;\n      }\n      _this.confirm();\n    };\n    _this.initializeKeyboardListeners = function () {\n      var calendarBodyRef = _this.calendarBodyRef;\n      if (!calendarBodyRef) {\n        return;\n      }\n      var root = _this.el.shadowRoot;\n      /**\n       * Get a reference to the month\n       * element we are currently viewing.\n       */\n      var currentMonth = calendarBodyRef.querySelector('.calendar-month:nth-of-type(2)');\n      /**\n       * When focusing the calendar body, we want to pass focus\n       * to the working day, but other days should\n       * only be accessible using the arrow keys. Pressing\n       * Tab should jump between bodies of selectable content.\n       */\n      var checkCalendarBodyFocus = function checkCalendarBodyFocus(ev) {\n        var _a;\n        var record = ev[0];\n        /**\n         * If calendar body was already focused\n         * when this fired or if the calendar body\n         * if not currently focused, we should not re-focus\n         * the inner day.\n         */\n        if (((_a = record.oldValue) === null || _a === void 0 ? void 0 : _a.includes('ion-focused')) || !calendarBodyRef.classList.contains('ion-focused')) {\n          return;\n        }\n        _this.focusWorkingDay(currentMonth);\n      };\n      var mo = new MutationObserver(checkCalendarBodyFocus);\n      mo.observe(calendarBodyRef, {\n        attributeFilter: ['class'],\n        attributeOldValue: true\n      });\n      _this.destroyKeyboardMO = function () {\n        mo === null || mo === void 0 ? void 0 : mo.disconnect();\n      };\n      /**\n       * We must use keydown not keyup as we want\n       * to prevent scrolling when using the arrow keys.\n       */\n      calendarBodyRef.addEventListener('keydown', function (ev) {\n        var activeElement = root.activeElement;\n        if (!activeElement || !activeElement.classList.contains('calendar-day')) {\n          return;\n        }\n        var parts = getPartsFromCalendarDay(activeElement);\n        var partsToFocus;\n        switch (ev.key) {\n          case 'ArrowDown':\n            ev.preventDefault();\n            partsToFocus = getNextWeek(parts);\n            break;\n          case 'ArrowUp':\n            ev.preventDefault();\n            partsToFocus = getPreviousWeek(parts);\n            break;\n          case 'ArrowRight':\n            ev.preventDefault();\n            partsToFocus = getNextDay(parts);\n            break;\n          case 'ArrowLeft':\n            ev.preventDefault();\n            partsToFocus = getPreviousDay(parts);\n            break;\n          case 'Home':\n            ev.preventDefault();\n            partsToFocus = getStartOfWeek(parts);\n            break;\n          case 'End':\n            ev.preventDefault();\n            partsToFocus = getEndOfWeek(parts);\n            break;\n          case 'PageUp':\n            ev.preventDefault();\n            partsToFocus = ev.shiftKey ? getPreviousYear(parts) : getPreviousMonth(parts);\n            break;\n          case 'PageDown':\n            ev.preventDefault();\n            partsToFocus = ev.shiftKey ? getNextYear(parts) : getNextMonth(parts);\n            break;\n          /**\n           * Do not preventDefault here\n           * as we do not want to override other\n           * browser defaults such as pressing Enter/Space\n           * to select a day.\n           */\n          default:\n            return;\n        }\n        /**\n         * If the day we want to move focus to is\n         * disabled, do not do anything.\n         */\n        if (isDayDisabled(partsToFocus, _this.minParts, _this.maxParts)) {\n          return;\n        }\n        _this.setWorkingParts(Object.assign(Object.assign({}, _this.workingParts), partsToFocus));\n        /**\n         * Give view a chance to re-render\n         * then move focus to the new working day\n         */\n        requestAnimationFrame(function () {\n          return _this.focusWorkingDay(currentMonth);\n        });\n      });\n    };\n    _this.focusWorkingDay = function (currentMonth) {\n      /**\n       * Get the number of padding days so\n       * we know how much to offset our next selector by\n       * to grab the correct calenday-day element.\n       */\n      var padding = currentMonth.querySelectorAll('.calendar-day-padding');\n      var day = _this.workingParts.day;\n      if (day === null) {\n        return;\n      }\n      /**\n       * Get the calendar day element\n       * and focus it.\n       */\n      var dayEl = currentMonth.querySelector(\".calendar-day:nth-of-type(\".concat(padding.length + day, \")\"));\n      if (dayEl) {\n        dayEl.focus();\n      }\n    };\n    _this.processMinParts = function () {\n      var _assertThisInitialize4 = _assertThisInitialized(_this),\n        min = _assertThisInitialize4.min,\n        defaultParts = _assertThisInitialize4.defaultParts;\n      if (min === undefined) {\n        _this.minParts = undefined;\n        return;\n      }\n      _this.minParts = parseMinParts(min, defaultParts);\n    };\n    _this.processMaxParts = function () {\n      var _assertThisInitialize5 = _assertThisInitialized(_this),\n        max = _assertThisInitialize5.max,\n        defaultParts = _assertThisInitialize5.defaultParts;\n      if (max === undefined) {\n        _this.maxParts = undefined;\n        return;\n      }\n      _this.maxParts = parseMaxParts(max, defaultParts);\n    };\n    _this.initializeCalendarListener = function () {\n      var calendarBodyRef = _this.calendarBodyRef;\n      if (!calendarBodyRef) {\n        return;\n      }\n      /**\n       * For performance reasons, we only render 3\n       * months at a time: The current month, the previous\n       * month, and the next month. We have a scroll listener\n       * on the calendar body to append/prepend new months.\n       *\n       * We can do this because Stencil is smart enough to not\n       * re-create the .calendar-month containers, but rather\n       * update the content within those containers.\n       *\n       * As an added bonus, WebKit has some troubles with\n       * scroll-snap-stop: always, so not rendering all of\n       * the months in a row allows us to mostly sidestep\n       * that issue.\n       */\n      var months = calendarBodyRef.querySelectorAll('.calendar-month');\n      var startMonth = months[0];\n      var workingMonth = months[1];\n      var endMonth = months[2];\n      var mode = getIonMode(_assertThisInitialized(_this));\n      var needsiOSRubberBandFix = mode === 'ios' && typeof navigator !== 'undefined' && navigator.maxTouchPoints > 1;\n      /**\n       * Before setting up the scroll listener,\n       * scroll the middle month into view.\n       * scrollIntoView() will scroll entire page\n       * if element is not in viewport. Use scrollLeft instead.\n       */\n      writeTask(function () {\n        calendarBodyRef.scrollLeft = startMonth.clientWidth * (isRTL(_this.el) ? -1 : 1);\n        var getChangedMonth = function getChangedMonth(parts) {\n          var box = calendarBodyRef.getBoundingClientRect();\n          var root = _this.el.shadowRoot;\n          /**\n           * Get the element that is in the center of the calendar body.\n           * This will be an element inside of the active month.\n           */\n          var elementAtCenter = root.elementFromPoint(box.x + box.width / 2, box.y + box.height / 2);\n          /**\n           * If there is no element then the\n           * component may be re-rendering on a slow device.\n           */\n          if (!elementAtCenter) return;\n          var month = elementAtCenter.closest('.calendar-month');\n          if (!month) return;\n          /**\n           * The edge of the month must be lined up with\n           * the edge of the calendar body in order for\n           * the component to update. Otherwise, it\n           * may be the case that the user has paused their\n           * swipe or the browser has not finished snapping yet.\n           * Rather than check if the x values are equal,\n           * we give it a tolerance of 2px to account for\n           * sub pixel rendering.\n           */\n          var monthBox = month.getBoundingClientRect();\n          if (Math.abs(monthBox.x - box.x) > 2) return;\n          /**\n           * From here, we can determine if the start\n           * month or the end month was scrolled into view.\n           * If no month was changed, then we can return from\n           * the scroll callback early.\n           */\n          if (month === startMonth) {\n            return getPreviousMonth(parts);\n          } else if (month === endMonth) {\n            return getNextMonth(parts);\n          } else {\n            return;\n          }\n        };\n        var updateActiveMonth = function updateActiveMonth() {\n          if (needsiOSRubberBandFix) {\n            calendarBodyRef.style.removeProperty('pointer-events');\n            appliediOSRubberBandFix = false;\n          }\n          /**\n           * If the month did not change\n           * then we can return early.\n           */\n          var newDate = getChangedMonth(_this.workingParts);\n          if (!newDate) return;\n          var month = newDate.month,\n            day = newDate.day,\n            year = newDate.year;\n          if (isMonthDisabled({\n            month: month,\n            year: year,\n            day: null\n          }, {\n            minParts: Object.assign(Object.assign({}, _this.minParts), {\n              day: null\n            }),\n            maxParts: Object.assign(Object.assign({}, _this.maxParts), {\n              day: null\n            })\n          })) {\n            return;\n          }\n          /**\n           * Prevent scrolling for other browsers\n           * to give the DOM time to update and the container\n           * time to properly snap.\n           */\n          calendarBodyRef.style.setProperty('overflow', 'hidden');\n          /**\n           * Use a writeTask here to ensure\n           * that the state is updated and the\n           * correct month is scrolled into view\n           * in the same frame. This is not\n           * typically a problem on newer devices\n           * but older/slower device may have a flicker\n           * if we did not do this.\n           */\n          writeTask(function () {\n            _this.setWorkingParts(Object.assign(Object.assign({}, _this.workingParts), {\n              month: month,\n              day: day,\n              year: year\n            }));\n            calendarBodyRef.scrollLeft = workingMonth.clientWidth * (isRTL(_this.el) ? -1 : 1);\n            calendarBodyRef.style.removeProperty('overflow');\n          });\n        };\n        /**\n         * When the container finishes scrolling we\n         * need to update the DOM with the selected month.\n         */\n        var scrollTimeout;\n        /**\n         * We do not want to attempt to set pointer-events\n         * multiple times within a single swipe gesture as\n         * that adds unnecessary work to the main thread.\n         */\n        var appliediOSRubberBandFix = false;\n        var scrollCallback = function scrollCallback() {\n          if (scrollTimeout) {\n            clearTimeout(scrollTimeout);\n          }\n          /**\n           * On iOS it is possible to quickly rubber band\n           * the scroll area before the scroll timeout has fired.\n           * This results in users reaching the end of the scrollable\n           * container before the DOM has updated.\n           * By setting `pointer-events: none` we can ensure that\n           * subsequent swipes do not happen while the container\n           * is snapping.\n           */\n          if (!appliediOSRubberBandFix && needsiOSRubberBandFix) {\n            calendarBodyRef.style.setProperty('pointer-events', 'none');\n            appliediOSRubberBandFix = true;\n          }\n          // Wait ~3 frames\n          scrollTimeout = setTimeout(updateActiveMonth, 50);\n        };\n        calendarBodyRef.addEventListener('scroll', scrollCallback);\n        _this.destroyCalendarListener = function () {\n          calendarBodyRef.removeEventListener('scroll', scrollCallback);\n        };\n      });\n    };\n    /**\n     * Clean up all listeners except for the overlay\n     * listener. This is so that we can re-create the listeners\n     * if the datetime has been hidden/presented by a modal or popover.\n     */\n    _this.destroyInteractionListeners = function () {\n      var _assertThisInitialize6 = _assertThisInitialized(_this),\n        destroyCalendarListener = _assertThisInitialize6.destroyCalendarListener,\n        destroyKeyboardMO = _assertThisInitialize6.destroyKeyboardMO;\n      if (destroyCalendarListener !== undefined) {\n        destroyCalendarListener();\n      }\n      if (destroyKeyboardMO !== undefined) {\n        destroyKeyboardMO();\n      }\n    };\n    _this.processValue = function (value) {\n      /**\n       * TODO FW-2646 remove value !== ''\n       */\n      var hasValue = value !== '' && value !== null && value !== undefined;\n      var valueToProcess = hasValue ? parseDate(value) : _this.defaultParts;\n      var _assertThisInitialize7 = _assertThisInitialized(_this),\n        minParts = _assertThisInitialize7.minParts,\n        maxParts = _assertThisInitialize7.maxParts,\n        multiple = _assertThisInitialize7.multiple;\n      if (!multiple && Array.isArray(value)) {\n        _this.value = value[0];\n        valueToProcess = valueToProcess[0];\n      }\n      /**\n       * Datetime should only warn of out of bounds values\n       * if set by the user. If the `value` is undefined,\n       * we will default to today's date which may be out\n       * of bounds. In this case, the warning makes it look\n       * like the developer did something wrong which is\n       * not true.\n       */\n      if (hasValue) {\n        warnIfValueOutOfBounds(valueToProcess, minParts, maxParts);\n      }\n      /**\n       * If there are multiple values, pick an arbitrary one to clamp to. This way,\n       * if the values are across months, we always show at least one of them. Note\n       * that the values don't necessarily have to be in order.\n       */\n      var singleValue = Array.isArray(valueToProcess) ? valueToProcess[0] : valueToProcess;\n      var _clampDate = clampDate(singleValue, minParts, maxParts),\n        month = _clampDate.month,\n        day = _clampDate.day,\n        year = _clampDate.year,\n        hour = _clampDate.hour,\n        minute = _clampDate.minute,\n        tzOffset = _clampDate.tzOffset;\n      var ampm = parseAmPm(hour);\n      _this.setWorkingParts({\n        month: month,\n        day: day,\n        year: year,\n        hour: hour,\n        minute: minute,\n        tzOffset: tzOffset,\n        ampm: ampm\n      });\n      /**\n       * Since `activeParts` indicates a value that\n       * been explicitly selected either by the\n       * user or the app, only update `activeParts`\n       * if the `value` property is set.\n       */\n      if (hasValue) {\n        if (Array.isArray(valueToProcess)) {\n          _this.activeParts = _toConsumableArray(valueToProcess);\n        } else {\n          _this.activeParts = {\n            month: month,\n            day: day,\n            year: year,\n            hour: hour,\n            minute: minute,\n            tzOffset: tzOffset,\n            ampm: ampm\n          };\n        }\n      } else {\n        /**\n         * Reset the active parts if the value is not set.\n         * This will clear the selected calendar day when\n         * performing a clear action or using the reset() method.\n         */\n        _this.activeParts = [];\n      }\n    };\n    _this.onFocus = function () {\n      _this.ionFocus.emit();\n    };\n    _this.onBlur = function () {\n      _this.ionBlur.emit();\n    };\n    _this.hasValue = function () {\n      return _this.value != null && _this.value !== '';\n    };\n    _this.nextMonth = function () {\n      var calendarBodyRef = _this.calendarBodyRef;\n      if (!calendarBodyRef) {\n        return;\n      }\n      var nextMonth = calendarBodyRef.querySelector('.calendar-month:last-of-type');\n      if (!nextMonth) {\n        return;\n      }\n      var left = nextMonth.offsetWidth * 2;\n      calendarBodyRef.scrollTo({\n        top: 0,\n        left: left * (isRTL(_this.el) ? -1 : 1),\n        behavior: 'smooth'\n      });\n    };\n    _this.prevMonth = function () {\n      var calendarBodyRef = _this.calendarBodyRef;\n      if (!calendarBodyRef) {\n        return;\n      }\n      var prevMonth = calendarBodyRef.querySelector('.calendar-month:first-of-type');\n      if (!prevMonth) {\n        return;\n      }\n      calendarBodyRef.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: 'smooth'\n      });\n    };\n    _this.toggleMonthAndYearView = function () {\n      _this.showMonthAndYear = !_this.showMonthAndYear;\n    };\n    return _this;\n  }\n  _createClass(_class, [{\n    key: \"disabledChanged\",\n    value: function disabledChanged() {\n      this.emitStyle();\n    }\n  }, {\n    key: \"minChanged\",\n    value: function minChanged() {\n      this.processMinParts();\n    }\n  }, {\n    key: \"maxChanged\",\n    value: function maxChanged() {\n      this.processMaxParts();\n    }\n  }, {\n    key: \"yearValuesChanged\",\n    value: function yearValuesChanged() {\n      this.parsedYearValues = convertToArrayOfNumbers(this.yearValues);\n    }\n  }, {\n    key: \"monthValuesChanged\",\n    value: function monthValuesChanged() {\n      this.parsedMonthValues = convertToArrayOfNumbers(this.monthValues);\n    }\n  }, {\n    key: \"dayValuesChanged\",\n    value: function dayValuesChanged() {\n      this.parsedDayValues = convertToArrayOfNumbers(this.dayValues);\n    }\n  }, {\n    key: \"hourValuesChanged\",\n    value: function hourValuesChanged() {\n      this.parsedHourValues = convertToArrayOfNumbers(this.hourValues);\n    }\n  }, {\n    key: \"minuteValuesChanged\",\n    value: function minuteValuesChanged() {\n      this.parsedMinuteValues = convertToArrayOfNumbers(this.minuteValues);\n    }\n  }, {\n    key: \"activePartsChanged\",\n    value: function activePartsChanged() {\n      this.activePartsClone = this.activeParts;\n    }\n    /**\n     * Update the datetime value when the value changes\n     */\n  }, {\n    key: \"valueChanged\",\n    value: function valueChanged() {\n      var value = this.value,\n        minParts = this.minParts,\n        maxParts = this.maxParts,\n        workingParts = this.workingParts,\n        multiple = this.multiple;\n      if (this.hasValue()) {\n        if (!multiple && Array.isArray(value)) {\n          this.value = value[0];\n          return; // setting this.value will trigger re-run of this function\n        }\n        /**\n         * Clones the value of the `activeParts` to the private clone, to update\n         * the date display on the current render cycle without causing another render.\n         *\n         * This allows us to update the current value's date/time display without\n         * refocusing or shifting the user's display (leaves the user in place).\n         */\n        var valueDateParts = parseDate(value);\n        if (valueDateParts) {\n          warnIfValueOutOfBounds(valueDateParts, minParts, maxParts);\n          if (Array.isArray(valueDateParts)) {\n            this.activePartsClone = _toConsumableArray(valueDateParts);\n          } else {\n            var month = valueDateParts.month,\n              day = valueDateParts.day,\n              year = valueDateParts.year,\n              hour = valueDateParts.hour,\n              minute = valueDateParts.minute;\n            var ampm = hour != null ? hour >= 12 ? 'pm' : 'am' : undefined;\n            this.activePartsClone = Object.assign(Object.assign({}, this.activeParts), {\n              month: month,\n              day: day,\n              year: year,\n              hour: hour,\n              minute: minute,\n              ampm: ampm\n            });\n            /**\n             * The working parts am/pm value must be updated when the value changes, to\n             * ensure the time picker hour column values are generated correctly.\n             *\n             * Note that we don't need to do this if valueDateParts is an array, since\n             * multiple=\"true\" does not apply to time pickers.\n             */\n            this.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n              ampm: ampm\n            }));\n          }\n        } else {\n          printIonWarning(\"Unable to parse date string: \".concat(value, \". Please provide a valid ISO 8601 datetime string.\"));\n        }\n      }\n      this.emitStyle();\n      this.ionChange.emit({\n        value: value\n      });\n    }\n    /**\n     * Confirms the selected datetime value, updates the\n     * `value` property, and optionally closes the popover\n     * or modal that the datetime was presented in.\n     */\n  }, {\n    key: \"confirm\",\n    value: function () {\n      var _confirm = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var closeOverlay,\n          isCalendarPicker,\n          activeParts,\n          activePartsIsArray,\n          dates,\n          i,\n          date,\n          _args = arguments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              closeOverlay = _args.length > 0 && _args[0] !== undefined ? _args[0] : false;\n              isCalendarPicker = this.isCalendarPicker, activeParts = this.activeParts;\n              /**\n               * We only update the value if the presentation is not a calendar picker.\n               */\n              if (activeParts !== undefined || !isCalendarPicker) {\n                activePartsIsArray = Array.isArray(activeParts);\n                if (activePartsIsArray && activeParts.length === 0) {\n                  this.value = undefined;\n                } else {\n                  /**\n                   * Prevent convertDataToISO from doing any\n                   * kind of transformation based on timezone\n                   * This cancels out any change it attempts to make\n                   *\n                   * Important: Take the timezone offset based on\n                   * the date that is currently selected, otherwise\n                   * there can be 1 hr difference when dealing w/ DST\n                   */\n                  if (activePartsIsArray) {\n                    dates = convertDataToISO(activeParts).map(function (str) {\n                      return new Date(str);\n                    });\n                    for (i = 0; i < dates.length; i++) {\n                      activeParts[i].tzOffset = dates[i].getTimezoneOffset() * -1;\n                    }\n                  } else {\n                    date = new Date(convertDataToISO(activeParts));\n                    activeParts.tzOffset = date.getTimezoneOffset() * -1;\n                  }\n                  this.value = convertDataToISO(activeParts);\n                }\n              }\n              if (closeOverlay) {\n                this.closeParentOverlay();\n              }\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function confirm() {\n        return _confirm.apply(this, arguments);\n      }\n      return confirm;\n    }()\n    /**\n     * Resets the internal state of the datetime but does not update the value.\n     * Passing a valid ISO-8601 string will reset the state of the component to the provided date.\n     * If no value is provided, the internal state will be reset to the clamped value of the min, max and today.\n     */\n  }, {\n    key: \"reset\",\n    value: function () {\n      var _reset = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(startDate) {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              this.processValue(startDate);\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function reset(_x) {\n        return _reset.apply(this, arguments);\n      }\n      return reset;\n    }()\n    /**\n     * Emits the ionCancel event and\n     * optionally closes the popover\n     * or modal that the datetime was\n     * presented in.\n     */\n  }, {\n    key: \"cancel\",\n    value: function () {\n      var _cancel = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var closeOverlay,\n          _args3 = arguments;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              closeOverlay = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : false;\n              this.ionCancel.emit();\n              if (closeOverlay) {\n                this.closeParentOverlay();\n              }\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function cancel() {\n        return _cancel.apply(this, arguments);\n      }\n      return cancel;\n    }()\n  }, {\n    key: \"isCalendarPicker\",\n    get: function get() {\n      var presentation = this.presentation;\n      return presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n    }\n  }, {\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      this.clearFocusVisible = startFocusVisible(this.el).destroy;\n    }\n  }, {\n    key: \"disconnectedCallback\",\n    value: function disconnectedCallback() {\n      if (this.clearFocusVisible) {\n        this.clearFocusVisible();\n        this.clearFocusVisible = undefined;\n      }\n    }\n  }, {\n    key: \"initializeListeners\",\n    value: function initializeListeners() {\n      this.initializeCalendarListener();\n      this.initializeKeyboardListeners();\n    }\n  }, {\n    key: \"componentDidLoad\",\n    value: function componentDidLoad() {\n      var _this2 = this;\n      /**\n       * If a scrollable element is hidden using `display: none`,\n       * it will not have a scroll height meaning we cannot scroll elements\n       * into view. As a result, we will need to wait for the datetime to become\n       * visible if used inside of a modal or a popover otherwise the scrollable\n       * areas will not have the correct values snapped into place.\n       */\n      var visibleCallback = function visibleCallback(entries) {\n        var ev = entries[0];\n        if (!ev.isIntersecting) {\n          return;\n        }\n        _this2.initializeListeners();\n        /**\n         * TODO FW-2793: Datetime needs a frame to ensure that it\n         * can properly scroll contents into view. As a result\n         * we hide the scrollable content until after that frame\n         * so users do not see the content quickly shifting. The downside\n         * is that the content will pop into view a frame after. Maybe there\n         * is a better way to handle this?\n         */\n        writeTask(function () {\n          _this2.el.classList.add('datetime-ready');\n        });\n      };\n      var visibleIO = new IntersectionObserver(visibleCallback, {\n        threshold: 0.01\n      });\n      /**\n       * Use raf to avoid a race condition between the component loading and\n       * its display animation starting (such as when shown in a modal). This\n       * could cause the datetime to start at a visibility of 0, erroneously\n       * triggering the `hiddenIO` observer below.\n       */\n      raf(function () {\n        return visibleIO === null || visibleIO === void 0 ? void 0 : visibleIO.observe(_this2.el);\n      });\n      /**\n       * We need to clean up listeners when the datetime is hidden\n       * in a popover/modal so that we can properly scroll containers\n       * back into view if they are re-presented. When the datetime is hidden\n       * the scroll areas have scroll widths/heights of 0px, so any snapping\n       * we did originally has been lost.\n       */\n      var hiddenCallback = function hiddenCallback(entries) {\n        var ev = entries[0];\n        if (ev.isIntersecting) {\n          return;\n        }\n        _this2.destroyInteractionListeners();\n        /**\n         * When datetime is hidden, we need to make sure that\n         * the month/year picker is closed. Otherwise,\n         * it will be open when the datetime re-appears\n         * and the scroll area of the calendar grid will be 0.\n         * As a result, the wrong month will be shown.\n         */\n        _this2.showMonthAndYear = false;\n        writeTask(function () {\n          _this2.el.classList.remove('datetime-ready');\n        });\n      };\n      var hiddenIO = new IntersectionObserver(hiddenCallback, {\n        threshold: 0\n      });\n      raf(function () {\n        return hiddenIO === null || hiddenIO === void 0 ? void 0 : hiddenIO.observe(_this2.el);\n      });\n      /**\n       * Datetime uses Ionic components that emit\n       * ionFocus and ionBlur. These events are\n       * composed meaning they will cross\n       * the shadow dom boundary. We need to\n       * stop propagation on these events otherwise\n       * developers will see 2 ionFocus or 2 ionBlur\n       * events at a time.\n       */\n      var root = getElementRoot(this.el);\n      root.addEventListener('ionFocus', function (ev) {\n        return ev.stopPropagation();\n      });\n      root.addEventListener('ionBlur', function (ev) {\n        return ev.stopPropagation();\n      });\n    }\n    /**\n     * When the presentation is changed, all calendar content is recreated,\n     * so we need to re-init behavior with the new elements.\n     */\n  }, {\n    key: \"componentDidRender\",\n    value: function componentDidRender() {\n      var _this3 = this;\n      var presentation = this.presentation,\n        prevPresentation = this.prevPresentation,\n        calendarBodyRef = this.calendarBodyRef,\n        minParts = this.minParts,\n        preferWheel = this.preferWheel;\n      /**\n       * TODO(FW-2165)\n       * Remove this when https://bugs.webkit.org/show_bug.cgi?id=235960 is fixed.\n       * When using `min`, we add `scroll-snap-align: none`\n       * to the disabled month so that users cannot scroll to it.\n       * This triggers a bug in WebKit where the scroll position is reset.\n       * Since the month change logic is handled by a scroll listener,\n       * this causes the month to change leading to `scroll-snap-align`\n       * changing again, thus changing the scroll position again and causing\n       * an infinite loop.\n       * This issue only applies to the calendar grid, so we can disable\n       * it if the calendar grid is not being used.\n       */\n      var hasCalendarGrid = !preferWheel && ['date-time', 'time-date', 'date'].includes(presentation);\n      if (minParts !== undefined && hasCalendarGrid && calendarBodyRef) {\n        var workingMonth = calendarBodyRef.querySelector('.calendar-month:nth-of-type(1)');\n        if (workingMonth) {\n          calendarBodyRef.scrollLeft = workingMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n        }\n      }\n      if (prevPresentation === null) {\n        this.prevPresentation = presentation;\n        return;\n      }\n      if (presentation === prevPresentation) {\n        return;\n      }\n      this.prevPresentation = presentation;\n      this.destroyInteractionListeners();\n      this.initializeListeners();\n      /**\n       * The month/year picker from the date interface\n       * should be closed as it is not available in non-date\n       * interfaces.\n       */\n      this.showMonthAndYear = false;\n      raf(function () {\n        _this3.ionRender.emit();\n      });\n    }\n  }, {\n    key: \"componentWillLoad\",\n    value: function componentWillLoad() {\n      var el = this.el,\n        multiple = this.multiple,\n        presentation = this.presentation,\n        preferWheel = this.preferWheel;\n      if (multiple) {\n        if (presentation !== 'date') {\n          printIonWarning('Multiple date selection is only supported for presentation=\"date\".', el);\n        }\n        if (preferWheel) {\n          printIonWarning('Multiple date selection is not supported with preferWheel=\"true\".', el);\n        }\n      }\n      this.processMinParts();\n      this.processMaxParts();\n      var hourValues = this.parsedHourValues = convertToArrayOfNumbers(this.hourValues);\n      var minuteValues = this.parsedMinuteValues = convertToArrayOfNumbers(this.minuteValues);\n      var monthValues = this.parsedMonthValues = convertToArrayOfNumbers(this.monthValues);\n      var yearValues = this.parsedYearValues = convertToArrayOfNumbers(this.yearValues);\n      var dayValues = this.parsedDayValues = convertToArrayOfNumbers(this.dayValues);\n      var todayParts = this.todayParts = parseDate(getToday());\n      this.defaultParts = getClosestValidDate(todayParts, monthValues, dayValues, yearValues, hourValues, minuteValues);\n      this.processValue(this.value);\n      this.emitStyle();\n    }\n  }, {\n    key: \"emitStyle\",\n    value: function emitStyle() {\n      this.ionStyle.emit({\n        interactive: true,\n        datetime: true,\n        'interactive-disabled': this.disabled\n      });\n    }\n    /**\n     * Universal render methods\n     * These are pieces of datetime that\n     * are rendered independently of presentation.\n     */\n  }, {\n    key: \"renderFooter\",\n    value: function renderFooter() {\n      var _this4 = this,\n        _class2;\n      var showDefaultButtons = this.showDefaultButtons,\n        showClearButton = this.showClearButton;\n      var hasSlottedButtons = this.el.querySelector('[slot=\"buttons\"]') !== null;\n      if (!hasSlottedButtons && !showDefaultButtons && !showClearButton) {\n        return;\n      }\n      var clearButtonClick = function clearButtonClick() {\n        _this4.reset();\n        _this4.value = undefined;\n      };\n      /**\n       * By default we render two buttons:\n       * Cancel - Dismisses the datetime and\n       * does not update the `value` prop.\n       * OK - Dismisses the datetime and\n       * updates the `value` prop.\n       */\n      return h(\"div\", {\n        class: \"datetime-footer\"\n      }, h(\"div\", {\n        class: \"datetime-buttons\"\n      }, h(\"div\", {\n        class: (_class2 = {}, _defineProperty(_class2, 'datetime-action-buttons', true), _defineProperty(_class2, 'has-clear-button', this.showClearButton), _class2)\n      }, h(\"slot\", {\n        name: \"buttons\"\n      }, h(\"ion-buttons\", null, showDefaultButtons && h(\"ion-button\", {\n        id: \"cancel-button\",\n        color: this.color,\n        onClick: function onClick() {\n          return _this4.cancel(true);\n        }\n      }, this.cancelText), h(\"div\", null, showClearButton && h(\"ion-button\", {\n        id: \"clear-button\",\n        color: this.color,\n        onClick: function onClick() {\n          return clearButtonClick();\n        }\n      }, this.clearText), showDefaultButtons && h(\"ion-button\", {\n        id: \"confirm-button\",\n        color: this.color,\n        onClick: function onClick() {\n          return _this4.confirm(true);\n        }\n      }, this.doneText)))))));\n    }\n    /**\n     * Wheel picker render methods\n     */\n  }, {\n    key: \"renderWheelPicker\",\n    value: function renderWheelPicker() {\n      var forcePresentation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.presentation;\n      /**\n       * If presentation=\"time-date\" we switch the\n       * order of the render array here instead of\n       * manually reordering each date/time picker\n       * column with CSS. This allows for additional\n       * flexibility if we need to render subsets\n       * of the date/time data or do additional ordering\n       * within the child render functions.\n       */\n      var renderArray = forcePresentation === 'time-date' ? [this.renderTimePickerColumns(forcePresentation), this.renderDatePickerColumns(forcePresentation)] : [this.renderDatePickerColumns(forcePresentation), this.renderTimePickerColumns(forcePresentation)];\n      return h(\"ion-picker-internal\", null, renderArray);\n    }\n  }, {\n    key: \"renderDatePickerColumns\",\n    value: function renderDatePickerColumns(forcePresentation) {\n      return forcePresentation === 'date-time' || forcePresentation === 'time-date' ? this.renderCombinedDatePickerColumn() : this.renderIndividualDatePickerColumns(forcePresentation);\n    }\n  }, {\n    key: \"renderCombinedDatePickerColumn\",\n    value: function renderCombinedDatePickerColumn() {\n      var _this5 = this;\n      var defaultParts = this.defaultParts,\n        workingParts = this.workingParts,\n        locale = this.locale,\n        minParts = this.minParts,\n        maxParts = this.maxParts,\n        todayParts = this.todayParts,\n        isDateEnabled = this.isDateEnabled;\n      var activePart = this.getActivePartsWithFallback();\n      /**\n       * By default, generate a range of 3 months:\n       * Previous month, current month, and next month\n       */\n      var monthsToRender = generateMonths(workingParts);\n      var lastMonth = monthsToRender[monthsToRender.length - 1];\n      /**\n       * Ensure that users can select the entire window of dates.\n       */\n      monthsToRender[0].day = 1;\n      lastMonth.day = getNumDaysInMonth(lastMonth.month, lastMonth.year);\n      /**\n       * Narrow the dates rendered based on min/max dates (if any).\n       * The `min` date is used if the min is after the generated min month.\n       * The `max` date is used if the max is before the generated max month.\n       * This ensures that the sliding window always stays at 3 months\n       * but still allows future dates to be lazily rendered based on any min/max\n       * constraints.\n       */\n      var min = minParts !== undefined && isAfter(minParts, monthsToRender[0]) ? minParts : monthsToRender[0];\n      var max = maxParts !== undefined && isBefore(maxParts, lastMonth) ? maxParts : lastMonth;\n      var result = getCombinedDateColumnData(locale, todayParts, min, max, this.parsedDayValues, this.parsedMonthValues);\n      var items = result.items;\n      var parts = result.parts;\n      if (isDateEnabled) {\n        items = items.map(function (itemObject, index) {\n          var referenceParts = parts[index];\n          var disabled;\n          try {\n            /**\n             * The `isDateEnabled` implementation is try-catch wrapped\n             * to prevent exceptions in the user's function from\n             * interrupting the calendar rendering.\n             */\n            disabled = !isDateEnabled(convertDataToISO(referenceParts));\n          } catch (e) {\n            printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n          }\n          return Object.assign(Object.assign({}, itemObject), {\n            disabled: disabled\n          });\n        });\n      }\n      /**\n       * If we have selected a day already, then default the column\n       * to that value. Otherwise, set it to the default date.\n       */\n      var todayString = workingParts.day !== null ? \"\".concat(workingParts.year, \"-\").concat(workingParts.month, \"-\").concat(workingParts.day) : \"\".concat(defaultParts.year, \"-\").concat(defaultParts.month, \"-\").concat(defaultParts.day);\n      return h(\"ion-picker-column-internal\", {\n        class: \"date-column\",\n        color: this.color,\n        items: items,\n        value: todayString,\n        onIonChange: function onIonChange(ev) {\n          // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n          // Due to a Safari 14 issue we need to destroy\n          // the scroll listener before we update state\n          // and trigger a re-render.\n          if (_this5.destroyCalendarListener) {\n            _this5.destroyCalendarListener();\n          }\n          var value = ev.detail.value;\n          var findPart = parts.find(function (_ref2) {\n            var month = _ref2.month,\n              day = _ref2.day,\n              year = _ref2.year;\n            return value === \"\".concat(year, \"-\").concat(month, \"-\").concat(day);\n          });\n          _this5.setWorkingParts(Object.assign(Object.assign({}, workingParts), findPart));\n          _this5.setActiveParts(Object.assign(Object.assign({}, activePart), findPart));\n          // We can re-attach the scroll listener after\n          // the working parts have been updated.\n          _this5.initializeCalendarListener();\n          ev.stopPropagation();\n        }\n      });\n    }\n  }, {\n    key: \"renderIndividualDatePickerColumns\",\n    value: function renderIndividualDatePickerColumns(forcePresentation) {\n      var workingParts = this.workingParts,\n        isDateEnabled = this.isDateEnabled;\n      var shouldRenderMonths = forcePresentation !== 'year' && forcePresentation !== 'time';\n      var months = shouldRenderMonths ? getMonthColumnData(this.locale, workingParts, this.minParts, this.maxParts, this.parsedMonthValues) : [];\n      var shouldRenderDays = forcePresentation === 'date';\n      var days = shouldRenderDays ? getDayColumnData(this.locale, workingParts, this.minParts, this.maxParts, this.parsedDayValues) : [];\n      if (isDateEnabled) {\n        days = days.map(function (dayObject) {\n          var value = dayObject.value;\n          var valueNum = typeof value === 'string' ? parseInt(value) : value;\n          var referenceParts = {\n            month: workingParts.month,\n            day: valueNum,\n            year: workingParts.year\n          };\n          var disabled;\n          try {\n            /**\n             * The `isDateEnabled` implementation is try-catch wrapped\n             * to prevent exceptions in the user's function from\n             * interrupting the calendar rendering.\n             */\n            disabled = !isDateEnabled(convertDataToISO(referenceParts));\n          } catch (e) {\n            printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n          }\n          return Object.assign(Object.assign({}, dayObject), {\n            disabled: disabled\n          });\n        });\n      }\n      var shouldRenderYears = forcePresentation !== 'month' && forcePresentation !== 'time';\n      var years = shouldRenderYears ? getYearColumnData(this.locale, this.defaultParts, this.minParts, this.maxParts, this.parsedYearValues) : [];\n      /**\n       * Certain locales show the day before the month.\n       */\n      var showMonthFirst = isMonthFirstLocale(this.locale, {\n        month: 'numeric',\n        day: 'numeric'\n      });\n      var renderArray = [];\n      if (showMonthFirst) {\n        renderArray = [this.renderMonthPickerColumn(months), this.renderDayPickerColumn(days), this.renderYearPickerColumn(years)];\n      } else {\n        renderArray = [this.renderDayPickerColumn(days), this.renderMonthPickerColumn(months), this.renderYearPickerColumn(years)];\n      }\n      return renderArray;\n    }\n  }, {\n    key: \"renderDayPickerColumn\",\n    value: function renderDayPickerColumn(days) {\n      var _this6 = this;\n      var _a;\n      if (days.length === 0) {\n        return [];\n      }\n      var workingParts = this.workingParts;\n      var activePart = this.getActivePartsWithFallback();\n      return h(\"ion-picker-column-internal\", {\n        class: \"day-column\",\n        color: this.color,\n        items: days,\n        value: (_a = workingParts.day !== null ? workingParts.day : this.defaultParts.day) !== null && _a !== void 0 ? _a : undefined,\n        onIonChange: function onIonChange(ev) {\n          // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n          // Due to a Safari 14 issue we need to destroy\n          // the scroll listener before we update state\n          // and trigger a re-render.\n          if (_this6.destroyCalendarListener) {\n            _this6.destroyCalendarListener();\n          }\n          _this6.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n            day: ev.detail.value\n          }));\n          _this6.setActiveParts(Object.assign(Object.assign({}, activePart), {\n            day: ev.detail.value\n          }));\n          // We can re-attach the scroll listener after\n          // the working parts have been updated.\n          _this6.initializeCalendarListener();\n          ev.stopPropagation();\n        }\n      });\n    }\n  }, {\n    key: \"renderMonthPickerColumn\",\n    value: function renderMonthPickerColumn(months) {\n      var _this7 = this;\n      if (months.length === 0) {\n        return [];\n      }\n      var workingParts = this.workingParts;\n      var activePart = this.getActivePartsWithFallback();\n      return h(\"ion-picker-column-internal\", {\n        class: \"month-column\",\n        color: this.color,\n        items: months,\n        value: workingParts.month,\n        onIonChange: function onIonChange(ev) {\n          // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n          // Due to a Safari 14 issue we need to destroy\n          // the scroll listener before we update state\n          // and trigger a re-render.\n          if (_this7.destroyCalendarListener) {\n            _this7.destroyCalendarListener();\n          }\n          _this7.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n            month: ev.detail.value\n          }));\n          _this7.setActiveParts(Object.assign(Object.assign({}, activePart), {\n            month: ev.detail.value\n          }));\n          // We can re-attach the scroll listener after\n          // the working parts have been updated.\n          _this7.initializeCalendarListener();\n          ev.stopPropagation();\n        }\n      });\n    }\n  }, {\n    key: \"renderYearPickerColumn\",\n    value: function renderYearPickerColumn(years) {\n      var _this8 = this;\n      if (years.length === 0) {\n        return [];\n      }\n      var workingParts = this.workingParts;\n      var activePart = this.getActivePartsWithFallback();\n      return h(\"ion-picker-column-internal\", {\n        class: \"year-column\",\n        color: this.color,\n        items: years,\n        value: workingParts.year,\n        onIonChange: function onIonChange(ev) {\n          // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n          // Due to a Safari 14 issue we need to destroy\n          // the scroll listener before we update state\n          // and trigger a re-render.\n          if (_this8.destroyCalendarListener) {\n            _this8.destroyCalendarListener();\n          }\n          _this8.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n            year: ev.detail.value\n          }));\n          _this8.setActiveParts(Object.assign(Object.assign({}, activePart), {\n            year: ev.detail.value\n          }));\n          // We can re-attach the scroll listener after\n          // the working parts have been updated.\n          _this8.initializeCalendarListener();\n          ev.stopPropagation();\n        }\n      });\n    }\n  }, {\n    key: \"renderTimePickerColumns\",\n    value: function renderTimePickerColumns(forcePresentation) {\n      if (['date', 'month', 'month-year', 'year'].includes(forcePresentation)) {\n        return [];\n      }\n      /**\n       * If a user has not selected a date,\n       * then we should show all times. If the\n       * user has selected a date (even if it has\n       * not been confirmed yet), we should apply\n       * the max and min restrictions so that the\n       * time picker shows values that are\n       * appropriate for the selected date.\n       */\n      var activePart = this.getActivePart();\n      var userHasSelectedDate = activePart !== undefined;\n      var _getTimeColumnsData = getTimeColumnsData(this.locale, this.workingParts, this.hourCycle, userHasSelectedDate ? this.minParts : undefined, userHasSelectedDate ? this.maxParts : undefined, this.parsedHourValues, this.parsedMinuteValues),\n        hoursData = _getTimeColumnsData.hoursData,\n        minutesData = _getTimeColumnsData.minutesData,\n        dayPeriodData = _getTimeColumnsData.dayPeriodData;\n      return [this.renderHourPickerColumn(hoursData), this.renderMinutePickerColumn(minutesData), this.renderDayPeriodPickerColumn(dayPeriodData)];\n    }\n  }, {\n    key: \"renderHourPickerColumn\",\n    value: function renderHourPickerColumn(hoursData) {\n      var _this9 = this;\n      var workingParts = this.workingParts;\n      if (hoursData.length === 0) return [];\n      var activePart = this.getActivePartsWithFallback();\n      return h(\"ion-picker-column-internal\", {\n        color: this.color,\n        value: activePart.hour,\n        items: hoursData,\n        numericInput: true,\n        onIonChange: function onIonChange(ev) {\n          _this9.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n            hour: ev.detail.value\n          }));\n          _this9.setActiveParts(Object.assign(Object.assign({}, activePart), {\n            hour: ev.detail.value\n          }));\n          ev.stopPropagation();\n        }\n      });\n    }\n  }, {\n    key: \"renderMinutePickerColumn\",\n    value: function renderMinutePickerColumn(minutesData) {\n      var _this10 = this;\n      var workingParts = this.workingParts;\n      if (minutesData.length === 0) return [];\n      var activePart = this.getActivePartsWithFallback();\n      return h(\"ion-picker-column-internal\", {\n        color: this.color,\n        value: activePart.minute,\n        items: minutesData,\n        numericInput: true,\n        onIonChange: function onIonChange(ev) {\n          _this10.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n            minute: ev.detail.value\n          }));\n          _this10.setActiveParts(Object.assign(Object.assign({}, activePart), {\n            minute: ev.detail.value\n          }));\n          ev.stopPropagation();\n        }\n      });\n    }\n  }, {\n    key: \"renderDayPeriodPickerColumn\",\n    value: function renderDayPeriodPickerColumn(dayPeriodData) {\n      var _this11 = this;\n      var workingParts = this.workingParts;\n      if (dayPeriodData.length === 0) {\n        return [];\n      }\n      var activePart = this.getActivePartsWithFallback();\n      var isDayPeriodRTL = isLocaleDayPeriodRTL(this.locale);\n      return h(\"ion-picker-column-internal\", {\n        style: isDayPeriodRTL ? {\n          order: '-1'\n        } : {},\n        color: this.color,\n        value: activePart.ampm,\n        items: dayPeriodData,\n        onIonChange: function onIonChange(ev) {\n          var hour = calculateHourFromAMPM(workingParts, ev.detail.value);\n          _this11.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n            ampm: ev.detail.value,\n            hour: hour\n          }));\n          _this11.setActiveParts(Object.assign(Object.assign({}, activePart), {\n            ampm: ev.detail.value,\n            hour: hour\n          }));\n          ev.stopPropagation();\n        }\n      });\n    }\n  }, {\n    key: \"renderWheelView\",\n    value: function renderWheelView(forcePresentation) {\n      var locale = this.locale;\n      var showMonthFirst = isMonthFirstLocale(locale);\n      var columnOrder = showMonthFirst ? 'month-first' : 'year-first';\n      return h(\"div\", {\n        class: _defineProperty({}, \"wheel-order-\".concat(columnOrder), true)\n      }, this.renderWheelPicker(forcePresentation));\n    }\n    /**\n     * Grid Render Methods\n     */\n  }, {\n    key: \"renderCalendarHeader\",\n    value: function renderCalendarHeader(mode) {\n      var _this12 = this;\n      var expandedIcon = mode === 'ios' ? chevronDown : caretUpSharp;\n      var collapsedIcon = mode === 'ios' ? chevronForward : caretDownSharp;\n      var prevMonthDisabled = isPrevMonthDisabled(this.workingParts, this.minParts, this.maxParts);\n      var nextMonthDisabled = isNextMonthDisabled(this.workingParts, this.maxParts);\n      // don't use the inheritAttributes util because it removes dir from the host, and we still need that\n      var hostDir = this.el.getAttribute('dir') || undefined;\n      return h(\"div\", {\n        class: \"calendar-header\"\n      }, h(\"div\", {\n        class: \"calendar-action-buttons\"\n      }, h(\"div\", {\n        class: \"calendar-month-year\"\n      }, h(\"ion-item\", {\n        button: true,\n        detail: false,\n        lines: \"none\",\n        onClick: function onClick() {\n          return _this12.toggleMonthAndYearView();\n        }\n      }, h(\"ion-label\", null, getMonthAndYear(this.locale, this.workingParts), h(\"ion-icon\", {\n        \"aria-hidden\": \"true\",\n        icon: this.showMonthAndYear ? expandedIcon : collapsedIcon,\n        lazy: false,\n        flipRtl: true\n      })))), h(\"div\", {\n        class: \"calendar-next-prev\"\n      }, h(\"ion-buttons\", null, h(\"ion-button\", {\n        \"aria-label\": \"previous month\",\n        disabled: prevMonthDisabled,\n        onClick: function onClick() {\n          return _this12.prevMonth();\n        }\n      }, h(\"ion-icon\", {\n        dir: hostDir,\n        \"aria-hidden\": \"true\",\n        slot: \"icon-only\",\n        icon: chevronBack,\n        lazy: false,\n        flipRtl: true\n      })), h(\"ion-button\", {\n        \"aria-label\": \"next month\",\n        disabled: nextMonthDisabled,\n        onClick: function onClick() {\n          return _this12.nextMonth();\n        }\n      }, h(\"ion-icon\", {\n        dir: hostDir,\n        \"aria-hidden\": \"true\",\n        slot: \"icon-only\",\n        icon: chevronForward,\n        lazy: false,\n        flipRtl: true\n      }))))), h(\"div\", {\n        class: \"calendar-days-of-week\"\n      }, getDaysOfWeek(this.locale, mode, this.firstDayOfWeek % 7).map(function (d) {\n        return h(\"div\", {\n          class: \"day-of-week\"\n        }, d);\n      })));\n    }\n  }, {\n    key: \"renderMonth\",\n    value: function renderMonth(month, year) {\n      var _this13 = this;\n      var yearAllowed = this.parsedYearValues === undefined || this.parsedYearValues.includes(year);\n      var monthAllowed = this.parsedMonthValues === undefined || this.parsedMonthValues.includes(month);\n      var isCalMonthDisabled = !yearAllowed || !monthAllowed;\n      var swipeDisabled = isMonthDisabled({\n        month: month,\n        year: year,\n        day: null\n      }, {\n        // The day is not used when checking if a month is disabled.\n        // Users should be able to access the min or max month, even if the\n        // min/max date is out of bounds (e.g. min is set to Feb 15, Feb should not be disabled).\n        minParts: Object.assign(Object.assign({}, this.minParts), {\n          day: null\n        }),\n        maxParts: Object.assign(Object.assign({}, this.maxParts), {\n          day: null\n        })\n      });\n      // The working month should never have swipe disabled.\n      // Otherwise the CSS scroll snap will not work and the user\n      // can free-scroll the calendar.\n      var isWorkingMonth = this.workingParts.month === month && this.workingParts.year === year;\n      var activePart = this.getActivePartsWithFallback();\n      return h(\"div\", {\n        \"aria-hidden\": !isWorkingMonth ? 'true' : null,\n        class: {\n          'calendar-month': true,\n          // Prevents scroll snap swipe gestures for months outside of the min/max bounds\n          'calendar-month-disabled': !isWorkingMonth && swipeDisabled\n        }\n      }, h(\"div\", {\n        class: \"calendar-month-grid\"\n      }, getDaysOfMonth(month, year, this.firstDayOfWeek % 7).map(function (dateObject, index) {\n        var day = dateObject.day,\n          dayOfWeek = dateObject.dayOfWeek;\n        var isDateEnabled = _this13.isDateEnabled,\n          multiple = _this13.multiple;\n        var referenceParts = {\n          month: month,\n          day: day,\n          year: year\n        };\n        var _getCalendarDayState = getCalendarDayState(_this13.locale, referenceParts, _this13.activePartsClone, _this13.todayParts, _this13.minParts, _this13.maxParts, _this13.parsedDayValues),\n          isActive = _getCalendarDayState.isActive,\n          isToday = _getCalendarDayState.isToday,\n          ariaLabel = _getCalendarDayState.ariaLabel,\n          ariaSelected = _getCalendarDayState.ariaSelected,\n          disabled = _getCalendarDayState.disabled,\n          text = _getCalendarDayState.text;\n        var isCalDayDisabled = isCalMonthDisabled || disabled;\n        if (!isCalDayDisabled && isDateEnabled !== undefined) {\n          try {\n            /**\n             * The `isDateEnabled` implementation is try-catch wrapped\n             * to prevent exceptions in the user's function from\n             * interrupting the calendar rendering.\n             */\n            isCalDayDisabled = !isDateEnabled(convertDataToISO(referenceParts));\n          } catch (e) {\n            printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n          }\n        }\n        return h(\"button\", {\n          tabindex: \"-1\",\n          \"data-day\": day,\n          \"data-month\": month,\n          \"data-year\": year,\n          \"data-index\": index,\n          \"data-day-of-week\": dayOfWeek,\n          disabled: isCalDayDisabled,\n          class: {\n            'calendar-day-padding': day === null,\n            'calendar-day': true,\n            'calendar-day-active': isActive,\n            'calendar-day-today': isToday\n          },\n          \"aria-selected\": ariaSelected,\n          \"aria-label\": ariaLabel,\n          onClick: function onClick() {\n            if (day === null) {\n              return;\n            }\n            _this13.setWorkingParts(Object.assign(Object.assign({}, _this13.workingParts), {\n              month: month,\n              day: day,\n              year: year\n            }));\n            // multiple only needs date info, so we can wipe out other fields like time\n            if (multiple) {\n              _this13.setActiveParts({\n                month: month,\n                day: day,\n                year: year\n              }, isActive);\n            } else {\n              _this13.setActiveParts(Object.assign(Object.assign({}, activePart), {\n                month: month,\n                day: day,\n                year: year\n              }));\n            }\n          }\n        }, text);\n      })));\n    }\n  }, {\n    key: \"renderCalendarBody\",\n    value: function renderCalendarBody() {\n      var _this14 = this;\n      return h(\"div\", {\n        class: \"calendar-body ion-focusable\",\n        ref: function ref(el) {\n          return _this14.calendarBodyRef = el;\n        },\n        tabindex: \"0\"\n      }, generateMonths(this.workingParts).map(function (_ref3) {\n        var month = _ref3.month,\n          year = _ref3.year;\n        return _this14.renderMonth(month, year);\n      }));\n    }\n  }, {\n    key: \"renderCalendar\",\n    value: function renderCalendar(mode) {\n      return h(\"div\", {\n        class: \"datetime-calendar\",\n        key: \"datetime-calendar\"\n      }, this.renderCalendarHeader(mode), this.renderCalendarBody());\n    }\n  }, {\n    key: \"renderTimeLabel\",\n    value: function renderTimeLabel() {\n      var hasSlottedTimeLabel = this.el.querySelector('[slot=\"time-label\"]') !== null;\n      if (!hasSlottedTimeLabel && !this.showDefaultTimeLabel) {\n        return;\n      }\n      return h(\"slot\", {\n        name: \"time-label\"\n      }, \"Time\");\n    }\n  }, {\n    key: \"renderTimeOverlay\",\n    value: function renderTimeOverlay() {\n      var _this15 = this;\n      var use24Hour = is24Hour(this.locale, this.hourCycle);\n      var activePart = this.getActivePartsWithFallback();\n      return [h(\"div\", {\n        class: \"time-header\"\n      }, this.renderTimeLabel()), h(\"button\", {\n        class: {\n          'time-body': true,\n          'time-body-active': this.isTimePopoverOpen\n        },\n        \"aria-expanded\": \"false\",\n        \"aria-haspopup\": \"true\",\n        onClick: function () {\n          var _onClick = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(ev) {\n            var popoverRef;\n            return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n              while (1) switch (_context4.prev = _context4.next) {\n                case 0:\n                  popoverRef = _this15.popoverRef;\n                  if (!popoverRef) {\n                    _context4.next = 7;\n                    break;\n                  }\n                  _this15.isTimePopoverOpen = true;\n                  popoverRef.present(new CustomEvent('ionShadowTarget', {\n                    detail: {\n                      ionShadowTarget: ev.target\n                    }\n                  }));\n                  _context4.next = 6;\n                  return popoverRef.onWillDismiss();\n                case 6:\n                  _this15.isTimePopoverOpen = false;\n                case 7:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }, _callee4);\n          }));\n          function onClick(_x2) {\n            return _onClick.apply(this, arguments);\n          }\n          return onClick;\n        }()\n      }, getLocalizedTime(this.locale, activePart, use24Hour)), h(\"ion-popover\", {\n        alignment: \"center\",\n        translucent: true,\n        overlayIndex: 1,\n        arrow: false,\n        onWillPresent: function onWillPresent(ev) {\n          /**\n           * Intersection Observers do not consistently fire between Blink and Webkit\n           * when toggling the visibility of the popover and trying to scroll the picker\n           * column to the correct time value.\n           *\n           * This will correctly scroll the element position to the correct time value,\n           * before the popover is fully presented.\n           */\n          var cols = ev.target.querySelectorAll('ion-picker-column-internal');\n          // TODO (FW-615): Potentially remove this when intersection observers are fixed in picker column\n          cols.forEach(function (col) {\n            return col.scrollActiveItemIntoView();\n          });\n        },\n        style: {\n          '--offset-y': '-10px',\n          '--min-width': 'fit-content'\n        },\n        // Allow native browser keyboard events to support up/down/home/end key\n        // navigation within the time picker.\n        keyboardEvents: true,\n        ref: function ref(el) {\n          return _this15.popoverRef = el;\n        }\n      }, this.renderWheelPicker('time'))];\n    }\n  }, {\n    key: \"getHeaderSelectedDateText\",\n    value: function getHeaderSelectedDateText() {\n      var activeParts = this.activeParts,\n        multiple = this.multiple,\n        titleSelectedDatesFormatter = this.titleSelectedDatesFormatter;\n      var isArray = Array.isArray(activeParts);\n      var headerText;\n      if (multiple && isArray && activeParts.length !== 1) {\n        headerText = \"\".concat(activeParts.length, \" days\"); // default/fallback for multiple selection\n        if (titleSelectedDatesFormatter !== undefined) {\n          try {\n            headerText = titleSelectedDatesFormatter(convertDataToISO(activeParts));\n          } catch (e) {\n            printIonError('Exception in provided `titleSelectedDatesFormatter`: ', e);\n          }\n        }\n      } else {\n        // for exactly 1 day selected (multiple set or not), show a formatted version of that\n        headerText = getMonthAndDay(this.locale, this.getActivePartsWithFallback());\n      }\n      return headerText;\n    }\n  }, {\n    key: \"renderCalendarViewHeader\",\n    value: function renderCalendarViewHeader() {\n      var showExpandedHeader = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var hasSlottedTitle = this.el.querySelector('[slot=\"title\"]') !== null;\n      if (!hasSlottedTitle && !this.showDefaultTitle) {\n        return;\n      }\n      return h(\"div\", {\n        class: \"datetime-header\"\n      }, h(\"div\", {\n        class: \"datetime-title\"\n      }, h(\"slot\", {\n        name: \"title\"\n      }, \"Select Date\")), showExpandedHeader && h(\"div\", {\n        class: \"datetime-selected-date\"\n      }, this.getHeaderSelectedDateText()));\n    }\n    /**\n     * Render time picker inside of datetime.\n     * Do not pass color prop to segment on\n     * iOS mode. MD segment has been customized and\n     * should take on the color prop, but iOS\n     * should just be the default segment.\n     */\n  }, {\n    key: \"renderTime\",\n    value: function renderTime() {\n      var presentation = this.presentation;\n      var timeOnlyPresentation = presentation === 'time';\n      return h(\"div\", {\n        class: \"datetime-time\"\n      }, timeOnlyPresentation ? this.renderWheelPicker() : this.renderTimeOverlay());\n    }\n    /**\n     * Renders the month/year picker that is\n     * displayed on the calendar grid.\n     * The .datetime-year class has additional\n     * styles that let us show/hide the\n     * picker when the user clicks on the\n     * toggle in the calendar header.\n     */\n  }, {\n    key: \"renderCalendarViewMonthYearPicker\",\n    value: function renderCalendarViewMonthYearPicker() {\n      return h(\"div\", {\n        class: \"datetime-year\"\n      }, this.renderWheelView('month-year'));\n    }\n    /**\n     * Render entry point\n     * All presentation types are rendered from here.\n     */\n  }, {\n    key: \"renderDatetime\",\n    value: function renderDatetime(mode) {\n      var presentation = this.presentation,\n        preferWheel = this.preferWheel;\n      /**\n       * Certain presentation types have separate grid and wheel displays.\n       * If preferWheel is true then we should show a wheel picker instead.\n       */\n      var hasWheelVariant = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n      if (preferWheel && hasWheelVariant) {\n        return [this.renderCalendarViewHeader(false), this.renderWheelView(), this.renderFooter()];\n      }\n      switch (presentation) {\n        case 'date-time':\n          return [this.renderCalendarViewHeader(), this.renderCalendar(mode), this.renderCalendarViewMonthYearPicker(), this.renderTime(), this.renderFooter()];\n        case 'time-date':\n          return [this.renderCalendarViewHeader(), this.renderTime(), this.renderCalendar(mode), this.renderCalendarViewMonthYearPicker(), this.renderFooter()];\n        case 'time':\n          return [this.renderTime(), this.renderFooter()];\n        case 'month':\n        case 'month-year':\n        case 'year':\n          return [this.renderWheelView(), this.renderFooter()];\n        default:\n          return [this.renderCalendarViewHeader(), this.renderCalendar(mode), this.renderCalendarViewMonthYearPicker(), this.renderFooter()];\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _createColorClasses;\n      var name = this.name,\n        value = this.value,\n        disabled = this.disabled,\n        el = this.el,\n        color = this.color,\n        isPresented = this.isPresented,\n        readonly = this.readonly,\n        showMonthAndYear = this.showMonthAndYear,\n        preferWheel = this.preferWheel,\n        presentation = this.presentation,\n        size = this.size;\n      var mode = getIonMode(this);\n      var isMonthAndYearPresentation = presentation === 'year' || presentation === 'month' || presentation === 'month-year';\n      var shouldShowMonthAndYear = showMonthAndYear || isMonthAndYearPresentation;\n      var monthYearPickerOpen = showMonthAndYear && !isMonthAndYearPresentation;\n      var hasDatePresentation = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n      var hasWheelVariant = hasDatePresentation && preferWheel;\n      var hasGrid = hasDatePresentation && !preferWheel;\n      renderHiddenInput(true, el, name, formatValue(value), disabled);\n      return h(Host, {\n        \"aria-disabled\": disabled ? 'true' : null,\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        class: Object.assign({}, createColorClasses(color, (_createColorClasses = {}, _defineProperty(_createColorClasses, mode, true), _defineProperty(_createColorClasses, 'datetime-presented', isPresented), _defineProperty(_createColorClasses, 'datetime-readonly', readonly), _defineProperty(_createColorClasses, 'datetime-disabled', disabled), _defineProperty(_createColorClasses, 'show-month-and-year', shouldShowMonthAndYear), _defineProperty(_createColorClasses, 'month-year-picker-open', monthYearPickerOpen), _defineProperty(_createColorClasses, \"datetime-presentation-\".concat(presentation), true), _defineProperty(_createColorClasses, \"datetime-size-\".concat(size), true), _defineProperty(_createColorClasses, \"datetime-prefer-wheel\", hasWheelVariant), _defineProperty(_createColorClasses, \"datetime-grid\", hasGrid), _createColorClasses)))\n      }, this.renderDatetime(mode));\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return this;\n    }\n  }], [{\n    key: \"watchers\",\n    get: function get() {\n      return {\n        \"disabled\": [\"disabledChanged\"],\n        \"min\": [\"minChanged\"],\n        \"max\": [\"maxChanged\"],\n        \"yearValues\": [\"yearValuesChanged\"],\n        \"monthValues\": [\"monthValuesChanged\"],\n        \"dayValues\": [\"dayValuesChanged\"],\n        \"hourValues\": [\"hourValuesChanged\"],\n        \"minuteValues\": [\"minuteValuesChanged\"],\n        \"activeParts\": [\"activePartsChanged\"],\n        \"value\": [\"valueChanged\"]\n      };\n    }\n  }, {\n    key: \"style\",\n    get: function get() {\n      return {\n        ios: datetimeIosCss,\n        md: datetimeMdCss\n      };\n    }\n  }]);\n  return _class;\n}(HTMLElement), [33, \"ion-datetime\", {\n  \"color\": [1],\n  \"name\": [1],\n  \"disabled\": [4],\n  \"readonly\": [4],\n  \"isDateEnabled\": [16],\n  \"min\": [1025],\n  \"max\": [1025],\n  \"presentation\": [1],\n  \"cancelText\": [1, \"cancel-text\"],\n  \"doneText\": [1, \"done-text\"],\n  \"clearText\": [1, \"clear-text\"],\n  \"yearValues\": [8, \"year-values\"],\n  \"monthValues\": [8, \"month-values\"],\n  \"dayValues\": [8, \"day-values\"],\n  \"hourValues\": [8, \"hour-values\"],\n  \"minuteValues\": [8, \"minute-values\"],\n  \"locale\": [1],\n  \"firstDayOfWeek\": [2, \"first-day-of-week\"],\n  \"titleSelectedDatesFormatter\": [16],\n  \"multiple\": [4],\n  \"value\": [1025],\n  \"showDefaultTitle\": [4, \"show-default-title\"],\n  \"showDefaultButtons\": [4, \"show-default-buttons\"],\n  \"showClearButton\": [4, \"show-clear-button\"],\n  \"showDefaultTimeLabel\": [4, \"show-default-time-label\"],\n  \"hourCycle\": [1, \"hour-cycle\"],\n  \"size\": [1],\n  \"preferWheel\": [4, \"prefer-wheel\"],\n  \"showMonthAndYear\": [32],\n  \"activeParts\": [32],\n  \"workingParts\": [32],\n  \"isPresented\": [32],\n  \"isTimePopoverOpen\": [32],\n  \"confirm\": [64],\n  \"reset\": [64],\n  \"cancel\": [64]\n}]);\nvar datetimeIds = 0;\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  var components = [\"ion-datetime\", \"ion-backdrop\", \"ion-button\", \"ion-buttons\", \"ion-icon\", \"ion-item\", \"ion-label\", \"ion-note\", \"ion-picker-column-internal\", \"ion-picker-internal\", \"ion-popover\", \"ion-ripple-effect\"];\n  components.forEach(function (tagName) {\n    switch (tagName) {\n      case \"ion-datetime\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Datetime);\n        }\n        break;\n      case \"ion-backdrop\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$c();\n        }\n        break;\n      case \"ion-button\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$b();\n        }\n        break;\n      case \"ion-buttons\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$a();\n        }\n        break;\n      case \"ion-icon\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$9();\n        }\n        break;\n      case \"ion-item\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$8();\n        }\n        break;\n      case \"ion-label\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$7();\n        }\n        break;\n      case \"ion-note\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$6();\n        }\n        break;\n      case \"ion-picker-column-internal\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$5();\n        }\n        break;\n      case \"ion-picker-internal\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$4();\n        }\n        break;\n      case \"ion-popover\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$3();\n        }\n        break;\n      case \"ion-ripple-effect\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$2();\n        }\n        break;\n    }\n  });\n}\nvar IonDatetime = Datetime;\nvar defineCustomElement = defineCustomElement$1;\nexport { IonDatetime, defineCustomElement };","map":{"version":3,"names":["proxyCustomElement","HTMLElement","createEvent","writeTask","h","Host","a","chevronBack","f","chevronForward","c","chevronDown","g","caretUpSharp","caretDownSharp","b","getIonMode","startFocusVisible","r","raf","e","renderHiddenInput","getElementRoot","p","printIonWarning","printIonError","i","isRTL","createColorClasses","generateDayAriaLabel","getDay","isBefore","isAfter","isSameDay","d","getPreviousMonth","getNextMonth","v","validateParts","getPartsFromCalendarDay","getEndOfWeek","j","getStartOfWeek","k","getPreviousDay","l","getNextDay","m","getPreviousWeek","n","getNextWeek","parseMinParts","o","parseMaxParts","q","parseDate","w","warnIfValueOutOfBounds","convertToArrayOfNumbers","s","convertDataToISO","t","getToday","u","getClosestValidDate","x","getNumDaysInMonth","y","getCombinedDateColumnData","z","getMonthColumnData","A","getDayColumnData","B","getYearColumnData","C","isMonthFirstLocale","D","getTimeColumnsData","E","isLocaleDayPeriodRTL","F","getMonthAndYear","G","getDaysOfWeek","H","getDaysOfMonth","I","generateMonths","J","is24Hour","K","getLocalizedTime","L","getMonthAndDay","M","formatValue","N","getNextYear","O","getPreviousYear","P","clampDate","Q","parseAmPm","R","calculateHourFromAMPM","defineCustomElement$c","defineCustomElement$b","defineCustomElement$a","defineCustomElement$9","defineCustomElement$8","defineCustomElement$7","defineCustomElement$6","defineCustomElement$5","defineCustomElement$4","defineCustomElement$3","defineCustomElement$2","isYearDisabled","refYear","minParts","maxParts","year","isDayDisabled","refParts","dayValues","day","undefined","includes","getCalendarDayState","locale","activeParts","todayParts","activePartsArray","Array","isArray","isActive","find","parts","isToday","disabled","ariaSelected","ariaLabel","text","isMonthDisabled","isPrevMonthDisabled","prevMonth","Object","assign","isNextMonthDisabled","nextMonth","datetimeIosCss","datetimeMdCss","Datetime","__registerHost","__attachShadow","ionCancel","ionChange","ionFocus","ionBlur","ionStyle","ionRender","inputId","datetimeIds","prevPresentation","activePartsClone","showMonthAndYear","workingParts","month","hour","minute","ampm","isPresented","isTimePopoverOpen","color","name","readonly","presentation","cancelText","doneText","clearText","firstDayOfWeek","multiple","showDefaultTitle","showDefaultButtons","showClearButton","showDefaultTimeLabel","size","preferWheel","getActivePartsWithFallback","_a","defaultParts","getActivePart","closeParentOverlay","popoverOrModal","el","closest","dismiss","setWorkingParts","setActiveParts","removeDate","validatedParts","filter","hasSlottedButtons","querySelector","confirm","initializeKeyboardListeners","calendarBodyRef","root","shadowRoot","currentMonth","checkCalendarBodyFocus","ev","record","oldValue","classList","contains","focusWorkingDay","mo","MutationObserver","observe","attributeFilter","attributeOldValue","destroyKeyboardMO","disconnect","addEventListener","activeElement","partsToFocus","key","preventDefault","shiftKey","requestAnimationFrame","padding","querySelectorAll","dayEl","length","focus","processMinParts","min","processMaxParts","max","initializeCalendarListener","months","startMonth","workingMonth","endMonth","mode","needsiOSRubberBandFix","navigator","maxTouchPoints","scrollLeft","clientWidth","getChangedMonth","box","getBoundingClientRect","elementAtCenter","elementFromPoint","width","height","monthBox","Math","abs","updateActiveMonth","style","removeProperty","appliediOSRubberBandFix","newDate","setProperty","scrollTimeout","scrollCallback","clearTimeout","setTimeout","destroyCalendarListener","removeEventListener","destroyInteractionListeners","processValue","value","hasValue","valueToProcess","singleValue","tzOffset","onFocus","emit","onBlur","left","offsetWidth","scrollTo","top","behavior","toggleMonthAndYearView","emitStyle","parsedYearValues","yearValues","parsedMonthValues","monthValues","parsedDayValues","parsedHourValues","hourValues","parsedMinuteValues","minuteValues","valueDateParts","closeOverlay","isCalendarPicker","activePartsIsArray","dates","map","str","Date","getTimezoneOffset","date","startDate","clearFocusVisible","destroy","visibleCallback","entries","isIntersecting","initializeListeners","add","visibleIO","IntersectionObserver","threshold","hiddenCallback","remove","hiddenIO","stopPropagation","hasCalendarGrid","interactive","datetime","clearButtonClick","reset","class","id","onClick","cancel","forcePresentation","renderArray","renderTimePickerColumns","renderDatePickerColumns","renderCombinedDatePickerColumn","renderIndividualDatePickerColumns","isDateEnabled","activePart","monthsToRender","lastMonth","result","items","itemObject","index","referenceParts","todayString","onIonChange","detail","findPart","shouldRenderMonths","shouldRenderDays","days","dayObject","valueNum","parseInt","shouldRenderYears","years","showMonthFirst","renderMonthPickerColumn","renderDayPickerColumn","renderYearPickerColumn","userHasSelectedDate","hourCycle","hoursData","minutesData","dayPeriodData","renderHourPickerColumn","renderMinutePickerColumn","renderDayPeriodPickerColumn","numericInput","isDayPeriodRTL","order","columnOrder","renderWheelPicker","expandedIcon","collapsedIcon","prevMonthDisabled","nextMonthDisabled","hostDir","getAttribute","button","lines","icon","lazy","flipRtl","dir","slot","yearAllowed","monthAllowed","isCalMonthDisabled","swipeDisabled","isWorkingMonth","dateObject","dayOfWeek","isCalDayDisabled","tabindex","ref","renderMonth","renderCalendarHeader","renderCalendarBody","hasSlottedTimeLabel","use24Hour","renderTimeLabel","popoverRef","present","CustomEvent","ionShadowTarget","target","onWillDismiss","alignment","translucent","overlayIndex","arrow","onWillPresent","cols","forEach","col","scrollActiveItemIntoView","keyboardEvents","titleSelectedDatesFormatter","headerText","showExpandedHeader","hasSlottedTitle","getHeaderSelectedDateText","timeOnlyPresentation","renderTimeOverlay","renderWheelView","hasWheelVariant","renderCalendarViewHeader","renderFooter","renderCalendar","renderCalendarViewMonthYearPicker","renderTime","isMonthAndYearPresentation","shouldShowMonthAndYear","monthYearPickerOpen","hasDatePresentation","hasGrid","renderDatetime","ios","md","defineCustomElement$1","customElements","components","tagName","get","define","IonDatetime","defineCustomElement"],"sources":["/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@ionic/core/components/ion-datetime.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, writeTask, h, Host } from '@stencil/core/internal/client';\nimport { a as chevronBack, f as chevronForward, c as chevronDown, g as caretUpSharp, h as caretDownSharp } from './index7.js';\nimport { b as getIonMode } from './ionic-global.js';\nimport { startFocusVisible } from './focus-visible.js';\nimport { r as raf, e as renderHiddenInput, g as getElementRoot } from './helpers.js';\nimport { p as printIonWarning, a as printIonError } from './index8.js';\nimport { i as isRTL } from './dir.js';\nimport { c as createColorClasses } from './theme.js';\nimport { g as generateDayAriaLabel, a as getDay, i as isBefore, b as isAfter, c as isSameDay, d as getPreviousMonth, e as getNextMonth, v as validateParts, f as getPartsFromCalendarDay, h as getEndOfWeek, j as getStartOfWeek, k as getPreviousDay, l as getNextDay, m as getPreviousWeek, n as getNextWeek, p as parseMinParts, o as parseMaxParts, q as parseDate, w as warnIfValueOutOfBounds, r as convertToArrayOfNumbers, s as convertDataToISO, t as getToday, u as getClosestValidDate, x as getNumDaysInMonth, y as getCombinedDateColumnData, z as getMonthColumnData, A as getDayColumnData, B as getYearColumnData, C as isMonthFirstLocale, D as getTimeColumnsData, E as isLocaleDayPeriodRTL, F as getMonthAndYear, G as getDaysOfWeek, H as getDaysOfMonth, I as generateMonths, J as is24Hour, K as getLocalizedTime, L as getMonthAndDay, M as formatValue, N as getNextYear, O as getPreviousYear, P as clampDate, Q as parseAmPm, R as calculateHourFromAMPM } from './data.js';\nimport { d as defineCustomElement$c } from './backdrop.js';\nimport { d as defineCustomElement$b } from './button.js';\nimport { d as defineCustomElement$a } from './buttons.js';\nimport { d as defineCustomElement$9 } from './icon.js';\nimport { d as defineCustomElement$8 } from './item.js';\nimport { d as defineCustomElement$7 } from './label.js';\nimport { d as defineCustomElement$6 } from './note.js';\nimport { d as defineCustomElement$5 } from './picker-column-internal.js';\nimport { d as defineCustomElement$4 } from './picker-internal.js';\nimport { d as defineCustomElement$3 } from './popover.js';\nimport { d as defineCustomElement$2 } from './ripple-effect.js';\n\nconst isYearDisabled = (refYear, minParts, maxParts) => {\n  if (minParts && minParts.year > refYear) {\n    return true;\n  }\n  if (maxParts && maxParts.year < refYear) {\n    return true;\n  }\n  return false;\n};\n/**\n * Returns true if a given day should\n * not be interactive according to its value,\n * or the max/min dates.\n */\nconst isDayDisabled = (refParts, minParts, maxParts, dayValues) => {\n  /**\n   * If this is a filler date (i.e. padding)\n   * then the date is disabled.\n   */\n  if (refParts.day === null) {\n    return true;\n  }\n  /**\n   * If user passed in a list of acceptable day values\n   * check to make sure that the date we are looking\n   * at is in this array.\n   */\n  if (dayValues !== undefined && !dayValues.includes(refParts.day)) {\n    return true;\n  }\n  /**\n   * Given a min date, perform the following\n   * checks. If any of them are true, then the\n   * day should be disabled:\n   * 1. Is the current year < the min allowed year?\n   * 2. Is the current year === min allowed year,\n   * but the current month < the min allowed month?\n   * 3. Is the current year === min allowed year, the\n   * current month === min allow month, but the current\n   * day < the min allowed day?\n   */\n  if (minParts && isBefore(refParts, minParts)) {\n    return true;\n  }\n  /**\n   * Given a max date, perform the following\n   * checks. If any of them are true, then the\n   * day should be disabled:\n   * 1. Is the current year > the max allowed year?\n   * 2. Is the current year === max allowed year,\n   * but the current month > the max allowed month?\n   * 3. Is the current year === max allowed year, the\n   * current month === max allow month, but the current\n   * day > the max allowed day?\n   */\n  if (maxParts && isAfter(refParts, maxParts)) {\n    return true;\n  }\n  /**\n   * If none of these checks\n   * passed then the date should\n   * be interactive.\n   */\n  return false;\n};\n/**\n * Given a locale, a date, the selected date(s), and today's date,\n * generate the state for a given calendar day button.\n */\nconst getCalendarDayState = (locale, refParts, activeParts, todayParts, minParts, maxParts, dayValues) => {\n  /**\n   * activeParts signals what day(s) are currently selected in the datetime.\n   * If multiple=\"true\", this will be an array, but the logic in this util\n   * is the same whether we have one selected day or many because we're only\n   * calculating the state for one button. So, we treat a single activeParts value\n   * the same as an array of length one.\n   */\n  const activePartsArray = Array.isArray(activeParts) ? activeParts : [activeParts];\n  /**\n   * The day button is active if it is selected, or in other words, if refParts\n   * matches at least one selected date.\n   */\n  const isActive = activePartsArray.find((parts) => isSameDay(refParts, parts)) !== undefined;\n  const isToday = isSameDay(refParts, todayParts);\n  const disabled = isDayDisabled(refParts, minParts, maxParts, dayValues);\n  /**\n   * Note that we always return one object regardless of whether activeParts\n   * was an array, since we pare down to one value for isActive.\n   */\n  return {\n    disabled,\n    isActive,\n    isToday,\n    ariaSelected: isActive ? 'true' : null,\n    ariaLabel: generateDayAriaLabel(locale, isToday, refParts),\n    text: refParts.day != null ? getDay(locale, refParts) : null,\n  };\n};\n/**\n * Returns `true` if the month is disabled given the\n * current date value and min/max date constraints.\n */\nconst isMonthDisabled = (refParts, { minParts, maxParts, }) => {\n  // If the year is disabled then the month is disabled.\n  if (isYearDisabled(refParts.year, minParts, maxParts)) {\n    return true;\n  }\n  // If the date value is before the min date, then the month is disabled.\n  // If the date value is after the max date, then the month is disabled.\n  if ((minParts && isBefore(refParts, minParts)) || (maxParts && isAfter(refParts, maxParts))) {\n    return true;\n  }\n  return false;\n};\n/**\n * Given a working date, an optional minimum date range,\n * and an optional maximum date range; determine if the\n * previous navigation button is disabled.\n */\nconst isPrevMonthDisabled = (refParts, minParts, maxParts) => {\n  const prevMonth = Object.assign(Object.assign({}, getPreviousMonth(refParts)), { day: null });\n  return isMonthDisabled(prevMonth, {\n    minParts,\n    maxParts,\n  });\n};\n/**\n * Given a working date and a maximum date range,\n * determine if the next navigation button is disabled.\n */\nconst isNextMonthDisabled = (refParts, maxParts) => {\n  const nextMonth = Object.assign(Object.assign({}, getNextMonth(refParts)), { day: null });\n  return isMonthDisabled(nextMonth, {\n    maxParts,\n  });\n};\n\nconst datetimeIosCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;background:var(--background);overflow:hidden}ion-picker-column-internal{min-width:26px}:host(.datetime-size-fixed){width:auto;height:auto}:host(.datetime-size-fixed:not(.datetime-prefer-wheel)){max-width:350px}:host(.datetime-size-fixed.datetime-prefer-wheel){min-width:350px;max-width:-webkit-max-content;max-width:-moz-max-content;max-width:max-content}:host(.datetime-size-cover){width:100%}:host .calendar-body,:host .datetime-year{opacity:0}:host(:not(.datetime-ready)) .datetime-year{position:absolute;pointer-events:none}:host(.datetime-ready) .calendar-body{opacity:1}:host(.datetime-ready) .datetime-year{display:none;opacity:1}:host .wheel-order-year-first .day-column{-ms-flex-order:3;order:3;text-align:end}:host .wheel-order-year-first .month-column{-ms-flex-order:2;order:2;text-align:end}:host .wheel-order-year-first .year-column{-ms-flex-order:1;order:1;text-align:start}:host .datetime-calendar,:host .datetime-year{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-flow:column;flex-flow:column}:host(.show-month-and-year) .datetime-year{display:-ms-flexbox;display:flex}@supports (background: -webkit-named-image(apple-pay-logo-black)) and (not (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{left:-99999px;position:absolute;visibility:hidden;pointer-events:none}:host-context([dir=rtl]):host(.show-month-and-year) .calendar-next-prev,:host-context([dir=rtl]).show-month-and-year .calendar-next-prev,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-days-of-week,:host-context([dir=rtl]).show-month-and-year .calendar-days-of-week,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-body,:host-context([dir=rtl]).show-month-and-year .calendar-body,:host-context([dir=rtl]):host(.show-month-and-year) .datetime-time,:host-context([dir=rtl]).show-month-and-year .datetime-time{left:unset;right:unset;right:-99999px}}@supports (not (background: -webkit-named-image(apple-pay-logo-black))) or ((background: -webkit-named-image(apple-pay-logo-black)) and (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{display:none}}:host(.month-year-picker-open) .datetime-footer{display:none}:host(.datetime-readonly),:host(.datetime-disabled){pointer-events:none}:host(.datetime-disabled){opacity:0.4}:host .datetime-header .datetime-title{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host .datetime-action-buttons.has-clear-button{width:100%}:host .datetime-action-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{--background:translucent}:host .calendar-action-buttons ion-item ion-label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .calendar-action-buttons ion-item ion-icon{padding-left:4px;padding-right:0;padding-top:0;padding-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-action-buttons ion-item ion-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:0;padding-inline-end:0}}:host .calendar-days-of-week{display:grid;grid-template-columns:repeat(7, 1fr);text-align:center}:host .calendar-body{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;overflow-x:scroll;overflow-y:hidden;scrollbar-width:none;outline:none}:host .calendar-body .calendar-month{scroll-snap-align:start;scroll-snap-stop:always;-ms-flex-negative:0;flex-shrink:0;width:100%}:host .calendar-body .calendar-month-disabled{scroll-snap-align:none}:host .calendar-body::-webkit-scrollbar{display:none}:host .calendar-body .calendar-month-grid{display:grid;grid-template-columns:repeat(7, 1fr)}:host .calendar-day{padding-left:0px;padding-right:0px;padding-top:0px;padding-bottom:0px;margin-left:0px;margin-right:0px;margin-top:0px;margin-bottom:0px;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border:none;outline:none;background:none;color:currentColor;font-family:var(--ion-font-family, inherit);cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{padding-left:unset;padding-right:unset;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0px;padding-inline-end:0px}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{margin-left:unset;margin-right:unset;-webkit-margin-start:0px;margin-inline-start:0px;-webkit-margin-end:0px;margin-inline-end:0px}}:host .calendar-day[disabled]{pointer-events:none;opacity:0.4}:host .calendar-day:after{border-radius:32px;padding-left:4px;padding-right:4px;padding-top:4px;padding-bottom:4px;position:absolute;top:50%;left:50%;width:32px;height:32px;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);content:\\\" \\\";z-index:-1}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day:after{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px}}:host .datetime-time{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host(.datetime-presentation-time) .datetime-time{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0}:host ion-popover{--height:200px}:host .time-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .time-body{border-radius:8px;padding-left:12px;padding-right:12px;padding-top:6px;padding-bottom:6px;display:-ms-flexbox;display:flex;border:none;background:var(--ion-color-step-300, #edeef0);color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .time-body{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}:host .time-body-active{color:var(--ion-color-base)}:host(.in-item){position:static}:host(.show-month-and-year) .calendar-action-buttons ion-item{--color:var(--ion-color-base)}:host{--background:var(--ion-color-light, #ffffff);--background-rgb:var(--ion-color-light-rgb);--title-color:var(--ion-color-step-600, #666666)}:host(.datetime-presentation-date-time:not(.datetime-prefer-wheel)),:host(.datetime-presentation-time-date:not(.datetime-prefer-wheel)),:host(.datetime-presentation-date:not(.datetime-prefer-wheel)){min-height:350px}:host .datetime-header{padding-left:16px;padding-right:16px;padding-top:16px;padding-bottom:16px;border-bottom:0.55px solid var(--ion-color-step-200, #cccccc);font-size:14px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-header{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host .datetime-header .datetime-title{color:var(--title-color)}:host .datetime-header .datetime-selected-date{margin-top:10px}:host .calendar-action-buttons ion-item{--padding-start:16px;--background-hover:transparent;--background-activated:transparent;font-size:16px;font-weight:600}:host .calendar-action-buttons ion-item ion-icon,:host .calendar-action-buttons ion-buttons ion-button{color:var(--ion-color-base)}:host .calendar-action-buttons ion-buttons{padding-left:0;padding-right:0;padding-top:8px;padding-bottom:0}:host .calendar-action-buttons ion-buttons ion-button{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}:host .calendar-days-of-week{padding-left:8px;padding-right:8px;padding-top:0;padding-bottom:0;color:var(--ion-color-step-300, #b3b3b3);font-size:12px;font-weight:600;line-height:24px;text-transform:uppercase}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-days-of-week{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}:host .calendar-body .calendar-month .calendar-month-grid{padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;height:calc(100% - 16px)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-body .calendar-month .calendar-month-grid{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}:host .calendar-day{font-size:20px}:host .calendar-day:after{opacity:0.2}:host .calendar-day:focus:after{background:var(--ion-color-base)}:host .calendar-day.calendar-day-today{color:var(--ion-color-base)}:host .calendar-day.calendar-day-active{color:var(--ion-color-base);font-weight:600}:host .calendar-day.calendar-day-active:after{background:var(--ion-color-base)}:host .calendar-day.calendar-day-today.calendar-day-active{color:var(--ion-color-contrast)}:host .calendar-day.calendar-day-today.calendar-day-active:after{background:var(--ion-color-base);opacity:1}:host .datetime-time{padding-left:16px;padding-right:16px;padding-top:8px;padding-bottom:16px;font-size:16px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-time{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host .datetime-time .time-header{font-weight:600}:host .datetime-buttons{padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;border-top:0.55px solid var(--ion-color-step-200, #cccccc)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-buttons{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}:host .datetime-buttons ::slotted(ion-buttons),:host .datetime-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between}:host .datetime-action-buttons{width:100%}\";\n\nconst datetimeMdCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;background:var(--background);overflow:hidden}ion-picker-column-internal{min-width:26px}:host(.datetime-size-fixed){width:auto;height:auto}:host(.datetime-size-fixed:not(.datetime-prefer-wheel)){max-width:350px}:host(.datetime-size-fixed.datetime-prefer-wheel){min-width:350px;max-width:-webkit-max-content;max-width:-moz-max-content;max-width:max-content}:host(.datetime-size-cover){width:100%}:host .calendar-body,:host .datetime-year{opacity:0}:host(:not(.datetime-ready)) .datetime-year{position:absolute;pointer-events:none}:host(.datetime-ready) .calendar-body{opacity:1}:host(.datetime-ready) .datetime-year{display:none;opacity:1}:host .wheel-order-year-first .day-column{-ms-flex-order:3;order:3;text-align:end}:host .wheel-order-year-first .month-column{-ms-flex-order:2;order:2;text-align:end}:host .wheel-order-year-first .year-column{-ms-flex-order:1;order:1;text-align:start}:host .datetime-calendar,:host .datetime-year{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-flow:column;flex-flow:column}:host(.show-month-and-year) .datetime-year{display:-ms-flexbox;display:flex}@supports (background: -webkit-named-image(apple-pay-logo-black)) and (not (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{left:-99999px;position:absolute;visibility:hidden;pointer-events:none}:host-context([dir=rtl]):host(.show-month-and-year) .calendar-next-prev,:host-context([dir=rtl]).show-month-and-year .calendar-next-prev,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-days-of-week,:host-context([dir=rtl]).show-month-and-year .calendar-days-of-week,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-body,:host-context([dir=rtl]).show-month-and-year .calendar-body,:host-context([dir=rtl]):host(.show-month-and-year) .datetime-time,:host-context([dir=rtl]).show-month-and-year .datetime-time{left:unset;right:unset;right:-99999px}}@supports (not (background: -webkit-named-image(apple-pay-logo-black))) or ((background: -webkit-named-image(apple-pay-logo-black)) and (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{display:none}}:host(.month-year-picker-open) .datetime-footer{display:none}:host(.datetime-readonly),:host(.datetime-disabled){pointer-events:none}:host(.datetime-disabled){opacity:0.4}:host .datetime-header .datetime-title{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host .datetime-action-buttons.has-clear-button{width:100%}:host .datetime-action-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{--background:translucent}:host .calendar-action-buttons ion-item ion-label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .calendar-action-buttons ion-item ion-icon{padding-left:4px;padding-right:0;padding-top:0;padding-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-action-buttons ion-item ion-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:0;padding-inline-end:0}}:host .calendar-days-of-week{display:grid;grid-template-columns:repeat(7, 1fr);text-align:center}:host .calendar-body{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;overflow-x:scroll;overflow-y:hidden;scrollbar-width:none;outline:none}:host .calendar-body .calendar-month{scroll-snap-align:start;scroll-snap-stop:always;-ms-flex-negative:0;flex-shrink:0;width:100%}:host .calendar-body .calendar-month-disabled{scroll-snap-align:none}:host .calendar-body::-webkit-scrollbar{display:none}:host .calendar-body .calendar-month-grid{display:grid;grid-template-columns:repeat(7, 1fr)}:host .calendar-day{padding-left:0px;padding-right:0px;padding-top:0px;padding-bottom:0px;margin-left:0px;margin-right:0px;margin-top:0px;margin-bottom:0px;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border:none;outline:none;background:none;color:currentColor;font-family:var(--ion-font-family, inherit);cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{padding-left:unset;padding-right:unset;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0px;padding-inline-end:0px}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{margin-left:unset;margin-right:unset;-webkit-margin-start:0px;margin-inline-start:0px;-webkit-margin-end:0px;margin-inline-end:0px}}:host .calendar-day[disabled]{pointer-events:none;opacity:0.4}:host .calendar-day:after{border-radius:32px;padding-left:4px;padding-right:4px;padding-top:4px;padding-bottom:4px;position:absolute;top:50%;left:50%;width:32px;height:32px;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);content:\\\" \\\";z-index:-1}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day:after{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px}}:host .datetime-time{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host(.datetime-presentation-time) .datetime-time{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0}:host ion-popover{--height:200px}:host .time-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .time-body{border-radius:8px;padding-left:12px;padding-right:12px;padding-top:6px;padding-bottom:6px;display:-ms-flexbox;display:flex;border:none;background:var(--ion-color-step-300, #edeef0);color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .time-body{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}:host .time-body-active{color:var(--ion-color-base)}:host(.in-item){position:static}:host(.show-month-and-year) .calendar-action-buttons ion-item{--color:var(--ion-color-base)}:host{--background:var(--ion-color-step-100, #ffffff);--title-color:var(--ion-color-contrast)}:host .datetime-header{padding-left:20px;padding-right:20px;padding-top:20px;padding-bottom:20px;background:var(--ion-color-base);color:var(--title-color)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-header{padding-left:unset;padding-right:unset;-webkit-padding-start:20px;padding-inline-start:20px;-webkit-padding-end:20px;padding-inline-end:20px}}:host .datetime-header .datetime-title{font-size:12px;text-transform:uppercase}:host .datetime-header .datetime-selected-date{margin-top:30px;font-size:34px}:host .datetime-calendar .calendar-action-buttons ion-item{--padding-start:20px}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{color:var(--ion-color-step-650, #595959)}:host .calendar-days-of-week{padding-left:10px;padding-right:10px;padding-top:0px;padding-bottom:0px;color:var(--ion-color-step-500, gray);font-size:14px;line-height:36px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-days-of-week{padding-left:unset;padding-right:unset;-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px}}:host .calendar-body .calendar-month .calendar-month-grid{padding-left:10px;padding-right:10px;padding-top:4px;padding-bottom:4px;grid-template-rows:repeat(6, 1fr)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-body .calendar-month .calendar-month-grid{padding-left:unset;padding-right:unset;-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px}}:host .calendar-day{padding-left:0px;padding-right:0;padding-top:13px;padding-bottom:13px;font-size:14px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{padding-left:unset;padding-right:unset;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0;padding-inline-end:0}}:host .calendar-day:focus:after{background:rgba(var(--ion-color-base-rgb), 0.2);-webkit-box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2);box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2)}:host .calendar-day.calendar-day-today{color:var(--ion-color-base)}:host .calendar-day.calendar-day-today:after{border:1px solid var(--ion-color-base)}:host .calendar-day.calendar-day-active{color:var(--ion-color-contrast)}:host .calendar-day.calendar-day-active:after{border:1px solid var(--ion-color-base);background:var(--ion-color-base)}:host .datetime-time{padding-left:16px;padding-right:16px;padding-top:8px;padding-bottom:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-time{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host .time-header{color:var(--ion-color-step-650, #595959)}:host(.datetime-presentation-month) .datetime-year,:host(.datetime-presentation-year) .datetime-year,:host(.datetime-presentation-month-year) .datetime-year{margin-top:20px;margin-bottom:20px}:host .datetime-buttons{padding-left:10px;padding-right:10px;padding-top:10px;padding-bottom:10px;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:end;justify-content:flex-end}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-buttons{padding-left:unset;padding-right:unset;-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px}}:host .datetime-view-buttons ion-button{color:var(--ion-color-step-800, #333333)}\";\n\nconst Datetime = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.ionCancel = createEvent(this, \"ionCancel\", 7);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.ionRender = createEvent(this, \"ionRender\", 7);\n    this.inputId = `ion-dt-${datetimeIds++}`;\n    this.prevPresentation = null;\n    /**\n     * Duplicate reference to `activeParts` that does not trigger a re-render of the component.\n     * Allows caching an instance of the `activeParts` in between render cycles.\n     */\n    this.activePartsClone = [];\n    this.showMonthAndYear = false;\n    this.activeParts = [];\n    this.workingParts = {\n      month: 5,\n      day: 28,\n      year: 2021,\n      hour: 13,\n      minute: 52,\n      ampm: 'pm',\n    };\n    this.isPresented = false;\n    this.isTimePopoverOpen = false;\n    /**\n     * The color to use from your application's color palette.\n     * Default options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\n     * For more information on colors, see [theming](/docs/theming/basics).\n     */\n    this.color = 'primary';\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n    this.name = this.inputId;\n    /**\n     * If `true`, the user cannot interact with the datetime.\n     */\n    this.disabled = false;\n    /**\n     * If `true`, the datetime appears normal but is not interactive.\n     */\n    this.readonly = false;\n    /**\n     * Which values you want to select. `'date'` will show\n     * a calendar picker to select the month, day, and year. `'time'`\n     * will show a time picker to select the hour, minute, and (optionally)\n     * AM/PM. `'date-time'` will show the date picker first and time picker second.\n     * `'time-date'` will show the time picker first and date picker second.\n     */\n    this.presentation = 'date-time';\n    /**\n     * The text to display on the picker's cancel button.\n     */\n    this.cancelText = 'Cancel';\n    /**\n     * The text to display on the picker's \"Done\" button.\n     */\n    this.doneText = 'Done';\n    /**\n     * The text to display on the picker's \"Clear\" button.\n     */\n    this.clearText = 'Clear';\n    /**\n     * The locale to use for `ion-datetime`. This\n     * impacts month and day name formatting.\n     * The `'default'` value refers to the default\n     * locale set by your device.\n     */\n    this.locale = 'default';\n    /**\n     * The first day of the week to use for `ion-datetime`. The\n     * default value is `0` and represents Sunday.\n     */\n    this.firstDayOfWeek = 0;\n    /**\n     * If `true`, multiple dates can be selected at once. Only\n     * applies to `presentation=\"date\"` and `preferWheel=\"false\"`.\n     */\n    this.multiple = false;\n    /**\n     * If `true`, a header will be shown above the calendar\n     * picker. This will include both the slotted title, and\n     * the selected date.\n     */\n    this.showDefaultTitle = false;\n    /**\n     * If `true`, the default \"Cancel\" and \"OK\" buttons\n     * will be rendered at the bottom of the `ion-datetime`\n     * component. Developers can also use the `button` slot\n     * if they want to customize these buttons. If custom\n     * buttons are set in the `button` slot then the\n     * default buttons will not be rendered.\n     */\n    this.showDefaultButtons = false;\n    /**\n     * If `true`, a \"Clear\" button will be rendered alongside\n     * the default \"Cancel\" and \"OK\" buttons at the bottom of the `ion-datetime`\n     * component. Developers can also use the `button` slot\n     * if they want to customize these buttons. If custom\n     * buttons are set in the `button` slot then the\n     * default buttons will not be rendered.\n     */\n    this.showClearButton = false;\n    /**\n     * If `true`, the default \"Time\" label will be rendered\n     * for the time selector of the `ion-datetime` component.\n     * Developers can also use the `time-label` slot\n     * if they want to customize this label. If a custom\n     * label is set in the `time-label` slot then the\n     * default label will not be rendered.\n     */\n    this.showDefaultTimeLabel = true;\n    /**\n     * If `cover`, the `ion-datetime` will expand to cover the full width of its container.\n     * If `fixed`, the `ion-datetime` will have a fixed width.\n     */\n    this.size = 'fixed';\n    /**\n     * If `true`, a wheel picker will be rendered instead of a calendar grid\n     * where possible. If `false`, a calendar grid will be rendered instead of\n     * a wheel picker where possible.\n     *\n     * A wheel picker can be rendered instead of a grid when `presentation` is\n     * one of the following values: `'date'`, `'date-time'`, or `'time-date'`.\n     *\n     * A wheel picker will always be rendered regardless of\n     * the `preferWheel` value when `presentation` is one of the following values:\n     * `'time'`, `'month'`, `'month-year'`, or `'year'`.\n     */\n    this.preferWheel = false;\n    /**\n     * Returns the DatetimePart interface\n     * to use when rendering an initial set of\n     * data. This should be used when rendering an\n     * interface in an environment where the `value`\n     * may not be set. This function works\n     * by returning the first selected date in\n     * \"activePartsClone\" and then falling back to\n     * defaultParts if no active date is selected.\n     */\n    this.getActivePartsWithFallback = () => {\n      var _a;\n      const { defaultParts } = this;\n      return (_a = this.getActivePart()) !== null && _a !== void 0 ? _a : defaultParts;\n    };\n    this.getActivePart = () => {\n      const { activePartsClone } = this;\n      return Array.isArray(activePartsClone) ? activePartsClone[0] : activePartsClone;\n    };\n    this.closeParentOverlay = () => {\n      const popoverOrModal = this.el.closest('ion-modal, ion-popover');\n      if (popoverOrModal) {\n        popoverOrModal.dismiss();\n      }\n    };\n    this.setWorkingParts = (parts) => {\n      this.workingParts = Object.assign({}, parts);\n    };\n    this.setActiveParts = (parts, removeDate = false) => {\n      const { multiple, minParts, maxParts, activePartsClone } = this;\n      /**\n       * When setting the active parts, it is possible\n       * to set invalid data. For example,\n       * when updating January 31 to February,\n       * February 31 does not exist. As a result\n       * we need to validate the active parts and\n       * ensure that we are only setting valid dates.\n       * Additionally, we need to update the working parts\n       * too in the event that the validated parts are different.\n       */\n      const validatedParts = validateParts(parts, minParts, maxParts);\n      this.setWorkingParts(validatedParts);\n      if (multiple) {\n        /**\n         * We read from activePartsClone here because valueChanged() only updates that,\n         * so it's the more reliable source of truth. If we read from activeParts, then\n         * if you click July 1, manually set the value to July 2, and then click July 3,\n         * the new value would be [July 1, July 3], ignoring the value set.\n         *\n         * We can then pass the new value to activeParts (rather than activePartsClone)\n         * since the clone will be updated automatically by activePartsChanged().\n         */\n        const activePartsArray = Array.isArray(activePartsClone) ? activePartsClone : [activePartsClone];\n        if (removeDate) {\n          this.activeParts = activePartsArray.filter((p) => !isSameDay(p, validatedParts));\n        }\n        else {\n          this.activeParts = [...activePartsArray, validatedParts];\n        }\n      }\n      else {\n        this.activeParts = Object.assign({}, validatedParts);\n      }\n      const hasSlottedButtons = this.el.querySelector('[slot=\"buttons\"]') !== null;\n      if (hasSlottedButtons || this.showDefaultButtons) {\n        return;\n      }\n      this.confirm();\n    };\n    this.initializeKeyboardListeners = () => {\n      const calendarBodyRef = this.calendarBodyRef;\n      if (!calendarBodyRef) {\n        return;\n      }\n      const root = this.el.shadowRoot;\n      /**\n       * Get a reference to the month\n       * element we are currently viewing.\n       */\n      const currentMonth = calendarBodyRef.querySelector('.calendar-month:nth-of-type(2)');\n      /**\n       * When focusing the calendar body, we want to pass focus\n       * to the working day, but other days should\n       * only be accessible using the arrow keys. Pressing\n       * Tab should jump between bodies of selectable content.\n       */\n      const checkCalendarBodyFocus = (ev) => {\n        var _a;\n        const record = ev[0];\n        /**\n         * If calendar body was already focused\n         * when this fired or if the calendar body\n         * if not currently focused, we should not re-focus\n         * the inner day.\n         */\n        if (((_a = record.oldValue) === null || _a === void 0 ? void 0 : _a.includes('ion-focused')) || !calendarBodyRef.classList.contains('ion-focused')) {\n          return;\n        }\n        this.focusWorkingDay(currentMonth);\n      };\n      const mo = new MutationObserver(checkCalendarBodyFocus);\n      mo.observe(calendarBodyRef, { attributeFilter: ['class'], attributeOldValue: true });\n      this.destroyKeyboardMO = () => {\n        mo === null || mo === void 0 ? void 0 : mo.disconnect();\n      };\n      /**\n       * We must use keydown not keyup as we want\n       * to prevent scrolling when using the arrow keys.\n       */\n      calendarBodyRef.addEventListener('keydown', (ev) => {\n        const activeElement = root.activeElement;\n        if (!activeElement || !activeElement.classList.contains('calendar-day')) {\n          return;\n        }\n        const parts = getPartsFromCalendarDay(activeElement);\n        let partsToFocus;\n        switch (ev.key) {\n          case 'ArrowDown':\n            ev.preventDefault();\n            partsToFocus = getNextWeek(parts);\n            break;\n          case 'ArrowUp':\n            ev.preventDefault();\n            partsToFocus = getPreviousWeek(parts);\n            break;\n          case 'ArrowRight':\n            ev.preventDefault();\n            partsToFocus = getNextDay(parts);\n            break;\n          case 'ArrowLeft':\n            ev.preventDefault();\n            partsToFocus = getPreviousDay(parts);\n            break;\n          case 'Home':\n            ev.preventDefault();\n            partsToFocus = getStartOfWeek(parts);\n            break;\n          case 'End':\n            ev.preventDefault();\n            partsToFocus = getEndOfWeek(parts);\n            break;\n          case 'PageUp':\n            ev.preventDefault();\n            partsToFocus = ev.shiftKey ? getPreviousYear(parts) : getPreviousMonth(parts);\n            break;\n          case 'PageDown':\n            ev.preventDefault();\n            partsToFocus = ev.shiftKey ? getNextYear(parts) : getNextMonth(parts);\n            break;\n          /**\n           * Do not preventDefault here\n           * as we do not want to override other\n           * browser defaults such as pressing Enter/Space\n           * to select a day.\n           */\n          default:\n            return;\n        }\n        /**\n         * If the day we want to move focus to is\n         * disabled, do not do anything.\n         */\n        if (isDayDisabled(partsToFocus, this.minParts, this.maxParts)) {\n          return;\n        }\n        this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), partsToFocus));\n        /**\n         * Give view a chance to re-render\n         * then move focus to the new working day\n         */\n        requestAnimationFrame(() => this.focusWorkingDay(currentMonth));\n      });\n    };\n    this.focusWorkingDay = (currentMonth) => {\n      /**\n       * Get the number of padding days so\n       * we know how much to offset our next selector by\n       * to grab the correct calenday-day element.\n       */\n      const padding = currentMonth.querySelectorAll('.calendar-day-padding');\n      const { day } = this.workingParts;\n      if (day === null) {\n        return;\n      }\n      /**\n       * Get the calendar day element\n       * and focus it.\n       */\n      const dayEl = currentMonth.querySelector(`.calendar-day:nth-of-type(${padding.length + day})`);\n      if (dayEl) {\n        dayEl.focus();\n      }\n    };\n    this.processMinParts = () => {\n      const { min, defaultParts } = this;\n      if (min === undefined) {\n        this.minParts = undefined;\n        return;\n      }\n      this.minParts = parseMinParts(min, defaultParts);\n    };\n    this.processMaxParts = () => {\n      const { max, defaultParts } = this;\n      if (max === undefined) {\n        this.maxParts = undefined;\n        return;\n      }\n      this.maxParts = parseMaxParts(max, defaultParts);\n    };\n    this.initializeCalendarListener = () => {\n      const calendarBodyRef = this.calendarBodyRef;\n      if (!calendarBodyRef) {\n        return;\n      }\n      /**\n       * For performance reasons, we only render 3\n       * months at a time: The current month, the previous\n       * month, and the next month. We have a scroll listener\n       * on the calendar body to append/prepend new months.\n       *\n       * We can do this because Stencil is smart enough to not\n       * re-create the .calendar-month containers, but rather\n       * update the content within those containers.\n       *\n       * As an added bonus, WebKit has some troubles with\n       * scroll-snap-stop: always, so not rendering all of\n       * the months in a row allows us to mostly sidestep\n       * that issue.\n       */\n      const months = calendarBodyRef.querySelectorAll('.calendar-month');\n      const startMonth = months[0];\n      const workingMonth = months[1];\n      const endMonth = months[2];\n      const mode = getIonMode(this);\n      const needsiOSRubberBandFix = mode === 'ios' && typeof navigator !== 'undefined' && navigator.maxTouchPoints > 1;\n      /**\n       * Before setting up the scroll listener,\n       * scroll the middle month into view.\n       * scrollIntoView() will scroll entire page\n       * if element is not in viewport. Use scrollLeft instead.\n       */\n      writeTask(() => {\n        calendarBodyRef.scrollLeft = startMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n        const getChangedMonth = (parts) => {\n          const box = calendarBodyRef.getBoundingClientRect();\n          const root = this.el.shadowRoot;\n          /**\n           * Get the element that is in the center of the calendar body.\n           * This will be an element inside of the active month.\n           */\n          const elementAtCenter = root.elementFromPoint(box.x + box.width / 2, box.y + box.height / 2);\n          /**\n           * If there is no element then the\n           * component may be re-rendering on a slow device.\n           */\n          if (!elementAtCenter)\n            return;\n          const month = elementAtCenter.closest('.calendar-month');\n          if (!month)\n            return;\n          /**\n           * The edge of the month must be lined up with\n           * the edge of the calendar body in order for\n           * the component to update. Otherwise, it\n           * may be the case that the user has paused their\n           * swipe or the browser has not finished snapping yet.\n           * Rather than check if the x values are equal,\n           * we give it a tolerance of 2px to account for\n           * sub pixel rendering.\n           */\n          const monthBox = month.getBoundingClientRect();\n          if (Math.abs(monthBox.x - box.x) > 2)\n            return;\n          /**\n           * From here, we can determine if the start\n           * month or the end month was scrolled into view.\n           * If no month was changed, then we can return from\n           * the scroll callback early.\n           */\n          if (month === startMonth) {\n            return getPreviousMonth(parts);\n          }\n          else if (month === endMonth) {\n            return getNextMonth(parts);\n          }\n          else {\n            return;\n          }\n        };\n        const updateActiveMonth = () => {\n          if (needsiOSRubberBandFix) {\n            calendarBodyRef.style.removeProperty('pointer-events');\n            appliediOSRubberBandFix = false;\n          }\n          /**\n           * If the month did not change\n           * then we can return early.\n           */\n          const newDate = getChangedMonth(this.workingParts);\n          if (!newDate)\n            return;\n          const { month, day, year } = newDate;\n          if (isMonthDisabled({ month, year, day: null }, {\n            minParts: Object.assign(Object.assign({}, this.minParts), { day: null }),\n            maxParts: Object.assign(Object.assign({}, this.maxParts), { day: null }),\n          })) {\n            return;\n          }\n          /**\n           * Prevent scrolling for other browsers\n           * to give the DOM time to update and the container\n           * time to properly snap.\n           */\n          calendarBodyRef.style.setProperty('overflow', 'hidden');\n          /**\n           * Use a writeTask here to ensure\n           * that the state is updated and the\n           * correct month is scrolled into view\n           * in the same frame. This is not\n           * typically a problem on newer devices\n           * but older/slower device may have a flicker\n           * if we did not do this.\n           */\n          writeTask(() => {\n            this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), { month, day: day, year }));\n            calendarBodyRef.scrollLeft = workingMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n            calendarBodyRef.style.removeProperty('overflow');\n          });\n        };\n        /**\n         * When the container finishes scrolling we\n         * need to update the DOM with the selected month.\n         */\n        let scrollTimeout;\n        /**\n         * We do not want to attempt to set pointer-events\n         * multiple times within a single swipe gesture as\n         * that adds unnecessary work to the main thread.\n         */\n        let appliediOSRubberBandFix = false;\n        const scrollCallback = () => {\n          if (scrollTimeout) {\n            clearTimeout(scrollTimeout);\n          }\n          /**\n           * On iOS it is possible to quickly rubber band\n           * the scroll area before the scroll timeout has fired.\n           * This results in users reaching the end of the scrollable\n           * container before the DOM has updated.\n           * By setting `pointer-events: none` we can ensure that\n           * subsequent swipes do not happen while the container\n           * is snapping.\n           */\n          if (!appliediOSRubberBandFix && needsiOSRubberBandFix) {\n            calendarBodyRef.style.setProperty('pointer-events', 'none');\n            appliediOSRubberBandFix = true;\n          }\n          // Wait ~3 frames\n          scrollTimeout = setTimeout(updateActiveMonth, 50);\n        };\n        calendarBodyRef.addEventListener('scroll', scrollCallback);\n        this.destroyCalendarListener = () => {\n          calendarBodyRef.removeEventListener('scroll', scrollCallback);\n        };\n      });\n    };\n    /**\n     * Clean up all listeners except for the overlay\n     * listener. This is so that we can re-create the listeners\n     * if the datetime has been hidden/presented by a modal or popover.\n     */\n    this.destroyInteractionListeners = () => {\n      const { destroyCalendarListener, destroyKeyboardMO } = this;\n      if (destroyCalendarListener !== undefined) {\n        destroyCalendarListener();\n      }\n      if (destroyKeyboardMO !== undefined) {\n        destroyKeyboardMO();\n      }\n    };\n    this.processValue = (value) => {\n      /**\n       * TODO FW-2646 remove value !== ''\n       */\n      const hasValue = value !== '' && value !== null && value !== undefined;\n      let valueToProcess = hasValue ? parseDate(value) : this.defaultParts;\n      const { minParts, maxParts, multiple } = this;\n      if (!multiple && Array.isArray(value)) {\n        this.value = value[0];\n        valueToProcess = valueToProcess[0];\n      }\n      /**\n       * Datetime should only warn of out of bounds values\n       * if set by the user. If the `value` is undefined,\n       * we will default to today's date which may be out\n       * of bounds. In this case, the warning makes it look\n       * like the developer did something wrong which is\n       * not true.\n       */\n      if (hasValue) {\n        warnIfValueOutOfBounds(valueToProcess, minParts, maxParts);\n      }\n      /**\n       * If there are multiple values, pick an arbitrary one to clamp to. This way,\n       * if the values are across months, we always show at least one of them. Note\n       * that the values don't necessarily have to be in order.\n       */\n      const singleValue = Array.isArray(valueToProcess) ? valueToProcess[0] : valueToProcess;\n      const { month, day, year, hour, minute, tzOffset } = clampDate(singleValue, minParts, maxParts);\n      const ampm = parseAmPm(hour);\n      this.setWorkingParts({\n        month,\n        day,\n        year,\n        hour,\n        minute,\n        tzOffset,\n        ampm,\n      });\n      /**\n       * Since `activeParts` indicates a value that\n       * been explicitly selected either by the\n       * user or the app, only update `activeParts`\n       * if the `value` property is set.\n       */\n      if (hasValue) {\n        if (Array.isArray(valueToProcess)) {\n          this.activeParts = [...valueToProcess];\n        }\n        else {\n          this.activeParts = {\n            month,\n            day,\n            year,\n            hour,\n            minute,\n            tzOffset,\n            ampm,\n          };\n        }\n      }\n      else {\n        /**\n         * Reset the active parts if the value is not set.\n         * This will clear the selected calendar day when\n         * performing a clear action or using the reset() method.\n         */\n        this.activeParts = [];\n      }\n    };\n    this.onFocus = () => {\n      this.ionFocus.emit();\n    };\n    this.onBlur = () => {\n      this.ionBlur.emit();\n    };\n    this.hasValue = () => {\n      return this.value != null && this.value !== '';\n    };\n    this.nextMonth = () => {\n      const calendarBodyRef = this.calendarBodyRef;\n      if (!calendarBodyRef) {\n        return;\n      }\n      const nextMonth = calendarBodyRef.querySelector('.calendar-month:last-of-type');\n      if (!nextMonth) {\n        return;\n      }\n      const left = nextMonth.offsetWidth * 2;\n      calendarBodyRef.scrollTo({\n        top: 0,\n        left: left * (isRTL(this.el) ? -1 : 1),\n        behavior: 'smooth',\n      });\n    };\n    this.prevMonth = () => {\n      const calendarBodyRef = this.calendarBodyRef;\n      if (!calendarBodyRef) {\n        return;\n      }\n      const prevMonth = calendarBodyRef.querySelector('.calendar-month:first-of-type');\n      if (!prevMonth) {\n        return;\n      }\n      calendarBodyRef.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: 'smooth',\n      });\n    };\n    this.toggleMonthAndYearView = () => {\n      this.showMonthAndYear = !this.showMonthAndYear;\n    };\n  }\n  disabledChanged() {\n    this.emitStyle();\n  }\n  minChanged() {\n    this.processMinParts();\n  }\n  maxChanged() {\n    this.processMaxParts();\n  }\n  yearValuesChanged() {\n    this.parsedYearValues = convertToArrayOfNumbers(this.yearValues);\n  }\n  monthValuesChanged() {\n    this.parsedMonthValues = convertToArrayOfNumbers(this.monthValues);\n  }\n  dayValuesChanged() {\n    this.parsedDayValues = convertToArrayOfNumbers(this.dayValues);\n  }\n  hourValuesChanged() {\n    this.parsedHourValues = convertToArrayOfNumbers(this.hourValues);\n  }\n  minuteValuesChanged() {\n    this.parsedMinuteValues = convertToArrayOfNumbers(this.minuteValues);\n  }\n  activePartsChanged() {\n    this.activePartsClone = this.activeParts;\n  }\n  /**\n   * Update the datetime value when the value changes\n   */\n  valueChanged() {\n    const { value, minParts, maxParts, workingParts, multiple } = this;\n    if (this.hasValue()) {\n      if (!multiple && Array.isArray(value)) {\n        this.value = value[0];\n        return; // setting this.value will trigger re-run of this function\n      }\n      /**\n       * Clones the value of the `activeParts` to the private clone, to update\n       * the date display on the current render cycle without causing another render.\n       *\n       * This allows us to update the current value's date/time display without\n       * refocusing or shifting the user's display (leaves the user in place).\n       */\n      const valueDateParts = parseDate(value);\n      if (valueDateParts) {\n        warnIfValueOutOfBounds(valueDateParts, minParts, maxParts);\n        if (Array.isArray(valueDateParts)) {\n          this.activePartsClone = [...valueDateParts];\n        }\n        else {\n          const { month, day, year, hour, minute } = valueDateParts;\n          const ampm = hour != null ? (hour >= 12 ? 'pm' : 'am') : undefined;\n          this.activePartsClone = Object.assign(Object.assign({}, this.activeParts), { month,\n            day,\n            year,\n            hour,\n            minute,\n            ampm });\n          /**\n           * The working parts am/pm value must be updated when the value changes, to\n           * ensure the time picker hour column values are generated correctly.\n           *\n           * Note that we don't need to do this if valueDateParts is an array, since\n           * multiple=\"true\" does not apply to time pickers.\n           */\n          this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { ampm }));\n        }\n      }\n      else {\n        printIonWarning(`Unable to parse date string: ${value}. Please provide a valid ISO 8601 datetime string.`);\n      }\n    }\n    this.emitStyle();\n    this.ionChange.emit({ value });\n  }\n  /**\n   * Confirms the selected datetime value, updates the\n   * `value` property, and optionally closes the popover\n   * or modal that the datetime was presented in.\n   */\n  async confirm(closeOverlay = false) {\n    const { isCalendarPicker, activeParts } = this;\n    /**\n     * We only update the value if the presentation is not a calendar picker.\n     */\n    if (activeParts !== undefined || !isCalendarPicker) {\n      const activePartsIsArray = Array.isArray(activeParts);\n      if (activePartsIsArray && activeParts.length === 0) {\n        this.value = undefined;\n      }\n      else {\n        /**\n         * Prevent convertDataToISO from doing any\n         * kind of transformation based on timezone\n         * This cancels out any change it attempts to make\n         *\n         * Important: Take the timezone offset based on\n         * the date that is currently selected, otherwise\n         * there can be 1 hr difference when dealing w/ DST\n         */\n        if (activePartsIsArray) {\n          const dates = convertDataToISO(activeParts).map((str) => new Date(str));\n          for (let i = 0; i < dates.length; i++) {\n            activeParts[i].tzOffset = dates[i].getTimezoneOffset() * -1;\n          }\n        }\n        else {\n          const date = new Date(convertDataToISO(activeParts));\n          activeParts.tzOffset = date.getTimezoneOffset() * -1;\n        }\n        this.value = convertDataToISO(activeParts);\n      }\n    }\n    if (closeOverlay) {\n      this.closeParentOverlay();\n    }\n  }\n  /**\n   * Resets the internal state of the datetime but does not update the value.\n   * Passing a valid ISO-8601 string will reset the state of the component to the provided date.\n   * If no value is provided, the internal state will be reset to the clamped value of the min, max and today.\n   */\n  async reset(startDate) {\n    this.processValue(startDate);\n  }\n  /**\n   * Emits the ionCancel event and\n   * optionally closes the popover\n   * or modal that the datetime was\n   * presented in.\n   */\n  async cancel(closeOverlay = false) {\n    this.ionCancel.emit();\n    if (closeOverlay) {\n      this.closeParentOverlay();\n    }\n  }\n  get isCalendarPicker() {\n    const { presentation } = this;\n    return presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n  }\n  connectedCallback() {\n    this.clearFocusVisible = startFocusVisible(this.el).destroy;\n  }\n  disconnectedCallback() {\n    if (this.clearFocusVisible) {\n      this.clearFocusVisible();\n      this.clearFocusVisible = undefined;\n    }\n  }\n  initializeListeners() {\n    this.initializeCalendarListener();\n    this.initializeKeyboardListeners();\n  }\n  componentDidLoad() {\n    /**\n     * If a scrollable element is hidden using `display: none`,\n     * it will not have a scroll height meaning we cannot scroll elements\n     * into view. As a result, we will need to wait for the datetime to become\n     * visible if used inside of a modal or a popover otherwise the scrollable\n     * areas will not have the correct values snapped into place.\n     */\n    const visibleCallback = (entries) => {\n      const ev = entries[0];\n      if (!ev.isIntersecting) {\n        return;\n      }\n      this.initializeListeners();\n      /**\n       * TODO FW-2793: Datetime needs a frame to ensure that it\n       * can properly scroll contents into view. As a result\n       * we hide the scrollable content until after that frame\n       * so users do not see the content quickly shifting. The downside\n       * is that the content will pop into view a frame after. Maybe there\n       * is a better way to handle this?\n       */\n      writeTask(() => {\n        this.el.classList.add('datetime-ready');\n      });\n    };\n    const visibleIO = new IntersectionObserver(visibleCallback, { threshold: 0.01 });\n    /**\n     * Use raf to avoid a race condition between the component loading and\n     * its display animation starting (such as when shown in a modal). This\n     * could cause the datetime to start at a visibility of 0, erroneously\n     * triggering the `hiddenIO` observer below.\n     */\n    raf(() => visibleIO === null || visibleIO === void 0 ? void 0 : visibleIO.observe(this.el));\n    /**\n     * We need to clean up listeners when the datetime is hidden\n     * in a popover/modal so that we can properly scroll containers\n     * back into view if they are re-presented. When the datetime is hidden\n     * the scroll areas have scroll widths/heights of 0px, so any snapping\n     * we did originally has been lost.\n     */\n    const hiddenCallback = (entries) => {\n      const ev = entries[0];\n      if (ev.isIntersecting) {\n        return;\n      }\n      this.destroyInteractionListeners();\n      /**\n       * When datetime is hidden, we need to make sure that\n       * the month/year picker is closed. Otherwise,\n       * it will be open when the datetime re-appears\n       * and the scroll area of the calendar grid will be 0.\n       * As a result, the wrong month will be shown.\n       */\n      this.showMonthAndYear = false;\n      writeTask(() => {\n        this.el.classList.remove('datetime-ready');\n      });\n    };\n    const hiddenIO = new IntersectionObserver(hiddenCallback, { threshold: 0 });\n    raf(() => hiddenIO === null || hiddenIO === void 0 ? void 0 : hiddenIO.observe(this.el));\n    /**\n     * Datetime uses Ionic components that emit\n     * ionFocus and ionBlur. These events are\n     * composed meaning they will cross\n     * the shadow dom boundary. We need to\n     * stop propagation on these events otherwise\n     * developers will see 2 ionFocus or 2 ionBlur\n     * events at a time.\n     */\n    const root = getElementRoot(this.el);\n    root.addEventListener('ionFocus', (ev) => ev.stopPropagation());\n    root.addEventListener('ionBlur', (ev) => ev.stopPropagation());\n  }\n  /**\n   * When the presentation is changed, all calendar content is recreated,\n   * so we need to re-init behavior with the new elements.\n   */\n  componentDidRender() {\n    const { presentation, prevPresentation, calendarBodyRef, minParts, preferWheel } = this;\n    /**\n     * TODO(FW-2165)\n     * Remove this when https://bugs.webkit.org/show_bug.cgi?id=235960 is fixed.\n     * When using `min`, we add `scroll-snap-align: none`\n     * to the disabled month so that users cannot scroll to it.\n     * This triggers a bug in WebKit where the scroll position is reset.\n     * Since the month change logic is handled by a scroll listener,\n     * this causes the month to change leading to `scroll-snap-align`\n     * changing again, thus changing the scroll position again and causing\n     * an infinite loop.\n     * This issue only applies to the calendar grid, so we can disable\n     * it if the calendar grid is not being used.\n     */\n    const hasCalendarGrid = !preferWheel && ['date-time', 'time-date', 'date'].includes(presentation);\n    if (minParts !== undefined && hasCalendarGrid && calendarBodyRef) {\n      const workingMonth = calendarBodyRef.querySelector('.calendar-month:nth-of-type(1)');\n      if (workingMonth) {\n        calendarBodyRef.scrollLeft = workingMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n      }\n    }\n    if (prevPresentation === null) {\n      this.prevPresentation = presentation;\n      return;\n    }\n    if (presentation === prevPresentation) {\n      return;\n    }\n    this.prevPresentation = presentation;\n    this.destroyInteractionListeners();\n    this.initializeListeners();\n    /**\n     * The month/year picker from the date interface\n     * should be closed as it is not available in non-date\n     * interfaces.\n     */\n    this.showMonthAndYear = false;\n    raf(() => {\n      this.ionRender.emit();\n    });\n  }\n  componentWillLoad() {\n    const { el, multiple, presentation, preferWheel } = this;\n    if (multiple) {\n      if (presentation !== 'date') {\n        printIonWarning('Multiple date selection is only supported for presentation=\"date\".', el);\n      }\n      if (preferWheel) {\n        printIonWarning('Multiple date selection is not supported with preferWheel=\"true\".', el);\n      }\n    }\n    this.processMinParts();\n    this.processMaxParts();\n    const hourValues = (this.parsedHourValues = convertToArrayOfNumbers(this.hourValues));\n    const minuteValues = (this.parsedMinuteValues = convertToArrayOfNumbers(this.minuteValues));\n    const monthValues = (this.parsedMonthValues = convertToArrayOfNumbers(this.monthValues));\n    const yearValues = (this.parsedYearValues = convertToArrayOfNumbers(this.yearValues));\n    const dayValues = (this.parsedDayValues = convertToArrayOfNumbers(this.dayValues));\n    const todayParts = (this.todayParts = parseDate(getToday()));\n    this.defaultParts = getClosestValidDate(todayParts, monthValues, dayValues, yearValues, hourValues, minuteValues);\n    this.processValue(this.value);\n    this.emitStyle();\n  }\n  emitStyle() {\n    this.ionStyle.emit({\n      interactive: true,\n      datetime: true,\n      'interactive-disabled': this.disabled,\n    });\n  }\n  /**\n   * Universal render methods\n   * These are pieces of datetime that\n   * are rendered independently of presentation.\n   */\n  renderFooter() {\n    const { showDefaultButtons, showClearButton } = this;\n    const hasSlottedButtons = this.el.querySelector('[slot=\"buttons\"]') !== null;\n    if (!hasSlottedButtons && !showDefaultButtons && !showClearButton) {\n      return;\n    }\n    const clearButtonClick = () => {\n      this.reset();\n      this.value = undefined;\n    };\n    /**\n     * By default we render two buttons:\n     * Cancel - Dismisses the datetime and\n     * does not update the `value` prop.\n     * OK - Dismisses the datetime and\n     * updates the `value` prop.\n     */\n    return (h(\"div\", { class: \"datetime-footer\" }, h(\"div\", { class: \"datetime-buttons\" }, h(\"div\", { class: {\n        ['datetime-action-buttons']: true,\n        ['has-clear-button']: this.showClearButton,\n      } }, h(\"slot\", { name: \"buttons\" }, h(\"ion-buttons\", null, showDefaultButtons && (h(\"ion-button\", { id: \"cancel-button\", color: this.color, onClick: () => this.cancel(true) }, this.cancelText)), h(\"div\", null, showClearButton && (h(\"ion-button\", { id: \"clear-button\", color: this.color, onClick: () => clearButtonClick() }, this.clearText)), showDefaultButtons && (h(\"ion-button\", { id: \"confirm-button\", color: this.color, onClick: () => this.confirm(true) }, this.doneText)))))))));\n  }\n  /**\n   * Wheel picker render methods\n   */\n  renderWheelPicker(forcePresentation = this.presentation) {\n    /**\n     * If presentation=\"time-date\" we switch the\n     * order of the render array here instead of\n     * manually reordering each date/time picker\n     * column with CSS. This allows for additional\n     * flexibility if we need to render subsets\n     * of the date/time data or do additional ordering\n     * within the child render functions.\n     */\n    const renderArray = forcePresentation === 'time-date'\n      ? [this.renderTimePickerColumns(forcePresentation), this.renderDatePickerColumns(forcePresentation)]\n      : [this.renderDatePickerColumns(forcePresentation), this.renderTimePickerColumns(forcePresentation)];\n    return h(\"ion-picker-internal\", null, renderArray);\n  }\n  renderDatePickerColumns(forcePresentation) {\n    return forcePresentation === 'date-time' || forcePresentation === 'time-date'\n      ? this.renderCombinedDatePickerColumn()\n      : this.renderIndividualDatePickerColumns(forcePresentation);\n  }\n  renderCombinedDatePickerColumn() {\n    const { defaultParts, workingParts, locale, minParts, maxParts, todayParts, isDateEnabled } = this;\n    const activePart = this.getActivePartsWithFallback();\n    /**\n     * By default, generate a range of 3 months:\n     * Previous month, current month, and next month\n     */\n    const monthsToRender = generateMonths(workingParts);\n    const lastMonth = monthsToRender[monthsToRender.length - 1];\n    /**\n     * Ensure that users can select the entire window of dates.\n     */\n    monthsToRender[0].day = 1;\n    lastMonth.day = getNumDaysInMonth(lastMonth.month, lastMonth.year);\n    /**\n     * Narrow the dates rendered based on min/max dates (if any).\n     * The `min` date is used if the min is after the generated min month.\n     * The `max` date is used if the max is before the generated max month.\n     * This ensures that the sliding window always stays at 3 months\n     * but still allows future dates to be lazily rendered based on any min/max\n     * constraints.\n     */\n    const min = minParts !== undefined && isAfter(minParts, monthsToRender[0]) ? minParts : monthsToRender[0];\n    const max = maxParts !== undefined && isBefore(maxParts, lastMonth) ? maxParts : lastMonth;\n    const result = getCombinedDateColumnData(locale, todayParts, min, max, this.parsedDayValues, this.parsedMonthValues);\n    let items = result.items;\n    const parts = result.parts;\n    if (isDateEnabled) {\n      items = items.map((itemObject, index) => {\n        const referenceParts = parts[index];\n        let disabled;\n        try {\n          /**\n           * The `isDateEnabled` implementation is try-catch wrapped\n           * to prevent exceptions in the user's function from\n           * interrupting the calendar rendering.\n           */\n          disabled = !isDateEnabled(convertDataToISO(referenceParts));\n        }\n        catch (e) {\n          printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n        }\n        return Object.assign(Object.assign({}, itemObject), { disabled });\n      });\n    }\n    /**\n     * If we have selected a day already, then default the column\n     * to that value. Otherwise, set it to the default date.\n     */\n    const todayString = workingParts.day !== null\n      ? `${workingParts.year}-${workingParts.month}-${workingParts.day}`\n      : `${defaultParts.year}-${defaultParts.month}-${defaultParts.day}`;\n    return (h(\"ion-picker-column-internal\", { class: \"date-column\", color: this.color, items: items, value: todayString, onIonChange: (ev) => {\n        // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n        // Due to a Safari 14 issue we need to destroy\n        // the scroll listener before we update state\n        // and trigger a re-render.\n        if (this.destroyCalendarListener) {\n          this.destroyCalendarListener();\n        }\n        const { value } = ev.detail;\n        const findPart = parts.find(({ month, day, year }) => value === `${year}-${month}-${day}`);\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), findPart));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), findPart));\n        // We can re-attach the scroll listener after\n        // the working parts have been updated.\n        this.initializeCalendarListener();\n        ev.stopPropagation();\n      } }));\n  }\n  renderIndividualDatePickerColumns(forcePresentation) {\n    const { workingParts, isDateEnabled } = this;\n    const shouldRenderMonths = forcePresentation !== 'year' && forcePresentation !== 'time';\n    const months = shouldRenderMonths\n      ? getMonthColumnData(this.locale, workingParts, this.minParts, this.maxParts, this.parsedMonthValues)\n      : [];\n    const shouldRenderDays = forcePresentation === 'date';\n    let days = shouldRenderDays\n      ? getDayColumnData(this.locale, workingParts, this.minParts, this.maxParts, this.parsedDayValues)\n      : [];\n    if (isDateEnabled) {\n      days = days.map((dayObject) => {\n        const { value } = dayObject;\n        const valueNum = typeof value === 'string' ? parseInt(value) : value;\n        const referenceParts = {\n          month: workingParts.month,\n          day: valueNum,\n          year: workingParts.year,\n        };\n        let disabled;\n        try {\n          /**\n           * The `isDateEnabled` implementation is try-catch wrapped\n           * to prevent exceptions in the user's function from\n           * interrupting the calendar rendering.\n           */\n          disabled = !isDateEnabled(convertDataToISO(referenceParts));\n        }\n        catch (e) {\n          printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n        }\n        return Object.assign(Object.assign({}, dayObject), { disabled });\n      });\n    }\n    const shouldRenderYears = forcePresentation !== 'month' && forcePresentation !== 'time';\n    const years = shouldRenderYears\n      ? getYearColumnData(this.locale, this.defaultParts, this.minParts, this.maxParts, this.parsedYearValues)\n      : [];\n    /**\n     * Certain locales show the day before the month.\n     */\n    const showMonthFirst = isMonthFirstLocale(this.locale, { month: 'numeric', day: 'numeric' });\n    let renderArray = [];\n    if (showMonthFirst) {\n      renderArray = [\n        this.renderMonthPickerColumn(months),\n        this.renderDayPickerColumn(days),\n        this.renderYearPickerColumn(years),\n      ];\n    }\n    else {\n      renderArray = [\n        this.renderDayPickerColumn(days),\n        this.renderMonthPickerColumn(months),\n        this.renderYearPickerColumn(years),\n      ];\n    }\n    return renderArray;\n  }\n  renderDayPickerColumn(days) {\n    var _a;\n    if (days.length === 0) {\n      return [];\n    }\n    const { workingParts } = this;\n    const activePart = this.getActivePartsWithFallback();\n    return (h(\"ion-picker-column-internal\", { class: \"day-column\", color: this.color, items: days, value: (_a = (workingParts.day !== null ? workingParts.day : this.defaultParts.day)) !== null && _a !== void 0 ? _a : undefined, onIonChange: (ev) => {\n        // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n        // Due to a Safari 14 issue we need to destroy\n        // the scroll listener before we update state\n        // and trigger a re-render.\n        if (this.destroyCalendarListener) {\n          this.destroyCalendarListener();\n        }\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { day: ev.detail.value }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), { day: ev.detail.value }));\n        // We can re-attach the scroll listener after\n        // the working parts have been updated.\n        this.initializeCalendarListener();\n        ev.stopPropagation();\n      } }));\n  }\n  renderMonthPickerColumn(months) {\n    if (months.length === 0) {\n      return [];\n    }\n    const { workingParts } = this;\n    const activePart = this.getActivePartsWithFallback();\n    return (h(\"ion-picker-column-internal\", { class: \"month-column\", color: this.color, items: months, value: workingParts.month, onIonChange: (ev) => {\n        // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n        // Due to a Safari 14 issue we need to destroy\n        // the scroll listener before we update state\n        // and trigger a re-render.\n        if (this.destroyCalendarListener) {\n          this.destroyCalendarListener();\n        }\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { month: ev.detail.value }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), { month: ev.detail.value }));\n        // We can re-attach the scroll listener after\n        // the working parts have been updated.\n        this.initializeCalendarListener();\n        ev.stopPropagation();\n      } }));\n  }\n  renderYearPickerColumn(years) {\n    if (years.length === 0) {\n      return [];\n    }\n    const { workingParts } = this;\n    const activePart = this.getActivePartsWithFallback();\n    return (h(\"ion-picker-column-internal\", { class: \"year-column\", color: this.color, items: years, value: workingParts.year, onIonChange: (ev) => {\n        // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n        // Due to a Safari 14 issue we need to destroy\n        // the scroll listener before we update state\n        // and trigger a re-render.\n        if (this.destroyCalendarListener) {\n          this.destroyCalendarListener();\n        }\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { year: ev.detail.value }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), { year: ev.detail.value }));\n        // We can re-attach the scroll listener after\n        // the working parts have been updated.\n        this.initializeCalendarListener();\n        ev.stopPropagation();\n      } }));\n  }\n  renderTimePickerColumns(forcePresentation) {\n    if (['date', 'month', 'month-year', 'year'].includes(forcePresentation)) {\n      return [];\n    }\n    /**\n     * If a user has not selected a date,\n     * then we should show all times. If the\n     * user has selected a date (even if it has\n     * not been confirmed yet), we should apply\n     * the max and min restrictions so that the\n     * time picker shows values that are\n     * appropriate for the selected date.\n     */\n    const activePart = this.getActivePart();\n    const userHasSelectedDate = activePart !== undefined;\n    const { hoursData, minutesData, dayPeriodData } = getTimeColumnsData(this.locale, this.workingParts, this.hourCycle, userHasSelectedDate ? this.minParts : undefined, userHasSelectedDate ? this.maxParts : undefined, this.parsedHourValues, this.parsedMinuteValues);\n    return [\n      this.renderHourPickerColumn(hoursData),\n      this.renderMinutePickerColumn(minutesData),\n      this.renderDayPeriodPickerColumn(dayPeriodData),\n    ];\n  }\n  renderHourPickerColumn(hoursData) {\n    const { workingParts } = this;\n    if (hoursData.length === 0)\n      return [];\n    const activePart = this.getActivePartsWithFallback();\n    return (h(\"ion-picker-column-internal\", { color: this.color, value: activePart.hour, items: hoursData, numericInput: true, onIonChange: (ev) => {\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { hour: ev.detail.value }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), { hour: ev.detail.value }));\n        ev.stopPropagation();\n      } }));\n  }\n  renderMinutePickerColumn(minutesData) {\n    const { workingParts } = this;\n    if (minutesData.length === 0)\n      return [];\n    const activePart = this.getActivePartsWithFallback();\n    return (h(\"ion-picker-column-internal\", { color: this.color, value: activePart.minute, items: minutesData, numericInput: true, onIonChange: (ev) => {\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { minute: ev.detail.value }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), { minute: ev.detail.value }));\n        ev.stopPropagation();\n      } }));\n  }\n  renderDayPeriodPickerColumn(dayPeriodData) {\n    const { workingParts } = this;\n    if (dayPeriodData.length === 0) {\n      return [];\n    }\n    const activePart = this.getActivePartsWithFallback();\n    const isDayPeriodRTL = isLocaleDayPeriodRTL(this.locale);\n    return (h(\"ion-picker-column-internal\", { style: isDayPeriodRTL ? { order: '-1' } : {}, color: this.color, value: activePart.ampm, items: dayPeriodData, onIonChange: (ev) => {\n        const hour = calculateHourFromAMPM(workingParts, ev.detail.value);\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { ampm: ev.detail.value, hour }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), { ampm: ev.detail.value, hour }));\n        ev.stopPropagation();\n      } }));\n  }\n  renderWheelView(forcePresentation) {\n    const { locale } = this;\n    const showMonthFirst = isMonthFirstLocale(locale);\n    const columnOrder = showMonthFirst ? 'month-first' : 'year-first';\n    return (h(\"div\", { class: {\n        [`wheel-order-${columnOrder}`]: true,\n      } }, this.renderWheelPicker(forcePresentation)));\n  }\n  /**\n   * Grid Render Methods\n   */\n  renderCalendarHeader(mode) {\n    const expandedIcon = mode === 'ios' ? chevronDown : caretUpSharp;\n    const collapsedIcon = mode === 'ios' ? chevronForward : caretDownSharp;\n    const prevMonthDisabled = isPrevMonthDisabled(this.workingParts, this.minParts, this.maxParts);\n    const nextMonthDisabled = isNextMonthDisabled(this.workingParts, this.maxParts);\n    // don't use the inheritAttributes util because it removes dir from the host, and we still need that\n    const hostDir = this.el.getAttribute('dir') || undefined;\n    return (h(\"div\", { class: \"calendar-header\" }, h(\"div\", { class: \"calendar-action-buttons\" }, h(\"div\", { class: \"calendar-month-year\" }, h(\"ion-item\", { button: true, detail: false, lines: \"none\", onClick: () => this.toggleMonthAndYearView() }, h(\"ion-label\", null, getMonthAndYear(this.locale, this.workingParts), h(\"ion-icon\", { \"aria-hidden\": \"true\", icon: this.showMonthAndYear ? expandedIcon : collapsedIcon, lazy: false, flipRtl: true })))), h(\"div\", { class: \"calendar-next-prev\" }, h(\"ion-buttons\", null, h(\"ion-button\", { \"aria-label\": \"previous month\", disabled: prevMonthDisabled, onClick: () => this.prevMonth() }, h(\"ion-icon\", { dir: hostDir, \"aria-hidden\": \"true\", slot: \"icon-only\", icon: chevronBack, lazy: false, flipRtl: true })), h(\"ion-button\", { \"aria-label\": \"next month\", disabled: nextMonthDisabled, onClick: () => this.nextMonth() }, h(\"ion-icon\", { dir: hostDir, \"aria-hidden\": \"true\", slot: \"icon-only\", icon: chevronForward, lazy: false, flipRtl: true }))))), h(\"div\", { class: \"calendar-days-of-week\" }, getDaysOfWeek(this.locale, mode, this.firstDayOfWeek % 7).map((d) => {\n      return h(\"div\", { class: \"day-of-week\" }, d);\n    }))));\n  }\n  renderMonth(month, year) {\n    const yearAllowed = this.parsedYearValues === undefined || this.parsedYearValues.includes(year);\n    const monthAllowed = this.parsedMonthValues === undefined || this.parsedMonthValues.includes(month);\n    const isCalMonthDisabled = !yearAllowed || !monthAllowed;\n    const swipeDisabled = isMonthDisabled({\n      month,\n      year,\n      day: null,\n    }, {\n      // The day is not used when checking if a month is disabled.\n      // Users should be able to access the min or max month, even if the\n      // min/max date is out of bounds (e.g. min is set to Feb 15, Feb should not be disabled).\n      minParts: Object.assign(Object.assign({}, this.minParts), { day: null }),\n      maxParts: Object.assign(Object.assign({}, this.maxParts), { day: null }),\n    });\n    // The working month should never have swipe disabled.\n    // Otherwise the CSS scroll snap will not work and the user\n    // can free-scroll the calendar.\n    const isWorkingMonth = this.workingParts.month === month && this.workingParts.year === year;\n    const activePart = this.getActivePartsWithFallback();\n    return (h(\"div\", { \"aria-hidden\": !isWorkingMonth ? 'true' : null, class: {\n        'calendar-month': true,\n        // Prevents scroll snap swipe gestures for months outside of the min/max bounds\n        'calendar-month-disabled': !isWorkingMonth && swipeDisabled,\n      } }, h(\"div\", { class: \"calendar-month-grid\" }, getDaysOfMonth(month, year, this.firstDayOfWeek % 7).map((dateObject, index) => {\n      const { day, dayOfWeek } = dateObject;\n      const { isDateEnabled, multiple } = this;\n      const referenceParts = { month, day, year };\n      const { isActive, isToday, ariaLabel, ariaSelected, disabled, text } = getCalendarDayState(this.locale, referenceParts, this.activePartsClone, this.todayParts, this.minParts, this.maxParts, this.parsedDayValues);\n      let isCalDayDisabled = isCalMonthDisabled || disabled;\n      if (!isCalDayDisabled && isDateEnabled !== undefined) {\n        try {\n          /**\n           * The `isDateEnabled` implementation is try-catch wrapped\n           * to prevent exceptions in the user's function from\n           * interrupting the calendar rendering.\n           */\n          isCalDayDisabled = !isDateEnabled(convertDataToISO(referenceParts));\n        }\n        catch (e) {\n          printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n        }\n      }\n      return (h(\"button\", { tabindex: \"-1\", \"data-day\": day, \"data-month\": month, \"data-year\": year, \"data-index\": index, \"data-day-of-week\": dayOfWeek, disabled: isCalDayDisabled, class: {\n          'calendar-day-padding': day === null,\n          'calendar-day': true,\n          'calendar-day-active': isActive,\n          'calendar-day-today': isToday,\n        }, \"aria-selected\": ariaSelected, \"aria-label\": ariaLabel, onClick: () => {\n          if (day === null) {\n            return;\n          }\n          this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), { month,\n            day,\n            year }));\n          // multiple only needs date info, so we can wipe out other fields like time\n          if (multiple) {\n            this.setActiveParts({\n              month,\n              day,\n              year,\n            }, isActive);\n          }\n          else {\n            this.setActiveParts(Object.assign(Object.assign({}, activePart), { month,\n              day,\n              year }));\n          }\n        } }, text));\n    }))));\n  }\n  renderCalendarBody() {\n    return (h(\"div\", { class: \"calendar-body ion-focusable\", ref: (el) => (this.calendarBodyRef = el), tabindex: \"0\" }, generateMonths(this.workingParts).map(({ month, year }) => {\n      return this.renderMonth(month, year);\n    })));\n  }\n  renderCalendar(mode) {\n    return (h(\"div\", { class: \"datetime-calendar\", key: \"datetime-calendar\" }, this.renderCalendarHeader(mode), this.renderCalendarBody()));\n  }\n  renderTimeLabel() {\n    const hasSlottedTimeLabel = this.el.querySelector('[slot=\"time-label\"]') !== null;\n    if (!hasSlottedTimeLabel && !this.showDefaultTimeLabel) {\n      return;\n    }\n    return h(\"slot\", { name: \"time-label\" }, \"Time\");\n  }\n  renderTimeOverlay() {\n    const use24Hour = is24Hour(this.locale, this.hourCycle);\n    const activePart = this.getActivePartsWithFallback();\n    return [\n      h(\"div\", { class: \"time-header\" }, this.renderTimeLabel()),\n      h(\"button\", { class: {\n          'time-body': true,\n          'time-body-active': this.isTimePopoverOpen,\n        }, \"aria-expanded\": \"false\", \"aria-haspopup\": \"true\", onClick: async (ev) => {\n          const { popoverRef } = this;\n          if (popoverRef) {\n            this.isTimePopoverOpen = true;\n            popoverRef.present(new CustomEvent('ionShadowTarget', {\n              detail: {\n                ionShadowTarget: ev.target,\n              },\n            }));\n            await popoverRef.onWillDismiss();\n            this.isTimePopoverOpen = false;\n          }\n        } }, getLocalizedTime(this.locale, activePart, use24Hour)),\n      h(\"ion-popover\", { alignment: \"center\", translucent: true, overlayIndex: 1, arrow: false, onWillPresent: (ev) => {\n          /**\n           * Intersection Observers do not consistently fire between Blink and Webkit\n           * when toggling the visibility of the popover and trying to scroll the picker\n           * column to the correct time value.\n           *\n           * This will correctly scroll the element position to the correct time value,\n           * before the popover is fully presented.\n           */\n          const cols = ev.target.querySelectorAll('ion-picker-column-internal');\n          // TODO (FW-615): Potentially remove this when intersection observers are fixed in picker column\n          cols.forEach((col) => col.scrollActiveItemIntoView());\n        }, style: {\n          '--offset-y': '-10px',\n          '--min-width': 'fit-content',\n        },\n        // Allow native browser keyboard events to support up/down/home/end key\n        // navigation within the time picker.\n        keyboardEvents: true, ref: (el) => (this.popoverRef = el) }, this.renderWheelPicker('time')),\n    ];\n  }\n  getHeaderSelectedDateText() {\n    const { activeParts, multiple, titleSelectedDatesFormatter } = this;\n    const isArray = Array.isArray(activeParts);\n    let headerText;\n    if (multiple && isArray && activeParts.length !== 1) {\n      headerText = `${activeParts.length} days`; // default/fallback for multiple selection\n      if (titleSelectedDatesFormatter !== undefined) {\n        try {\n          headerText = titleSelectedDatesFormatter(convertDataToISO(activeParts));\n        }\n        catch (e) {\n          printIonError('Exception in provided `titleSelectedDatesFormatter`: ', e);\n        }\n      }\n    }\n    else {\n      // for exactly 1 day selected (multiple set or not), show a formatted version of that\n      headerText = getMonthAndDay(this.locale, this.getActivePartsWithFallback());\n    }\n    return headerText;\n  }\n  renderCalendarViewHeader(showExpandedHeader = true) {\n    const hasSlottedTitle = this.el.querySelector('[slot=\"title\"]') !== null;\n    if (!hasSlottedTitle && !this.showDefaultTitle) {\n      return;\n    }\n    return (h(\"div\", { class: \"datetime-header\" }, h(\"div\", { class: \"datetime-title\" }, h(\"slot\", { name: \"title\" }, \"Select Date\")), showExpandedHeader && h(\"div\", { class: \"datetime-selected-date\" }, this.getHeaderSelectedDateText())));\n  }\n  /**\n   * Render time picker inside of datetime.\n   * Do not pass color prop to segment on\n   * iOS mode. MD segment has been customized and\n   * should take on the color prop, but iOS\n   * should just be the default segment.\n   */\n  renderTime() {\n    const { presentation } = this;\n    const timeOnlyPresentation = presentation === 'time';\n    return (h(\"div\", { class: \"datetime-time\" }, timeOnlyPresentation ? this.renderWheelPicker() : this.renderTimeOverlay()));\n  }\n  /**\n   * Renders the month/year picker that is\n   * displayed on the calendar grid.\n   * The .datetime-year class has additional\n   * styles that let us show/hide the\n   * picker when the user clicks on the\n   * toggle in the calendar header.\n   */\n  renderCalendarViewMonthYearPicker() {\n    return h(\"div\", { class: \"datetime-year\" }, this.renderWheelView('month-year'));\n  }\n  /**\n   * Render entry point\n   * All presentation types are rendered from here.\n   */\n  renderDatetime(mode) {\n    const { presentation, preferWheel } = this;\n    /**\n     * Certain presentation types have separate grid and wheel displays.\n     * If preferWheel is true then we should show a wheel picker instead.\n     */\n    const hasWheelVariant = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n    if (preferWheel && hasWheelVariant) {\n      return [this.renderCalendarViewHeader(false), this.renderWheelView(), this.renderFooter()];\n    }\n    switch (presentation) {\n      case 'date-time':\n        return [\n          this.renderCalendarViewHeader(),\n          this.renderCalendar(mode),\n          this.renderCalendarViewMonthYearPicker(),\n          this.renderTime(),\n          this.renderFooter(),\n        ];\n      case 'time-date':\n        return [\n          this.renderCalendarViewHeader(),\n          this.renderTime(),\n          this.renderCalendar(mode),\n          this.renderCalendarViewMonthYearPicker(),\n          this.renderFooter(),\n        ];\n      case 'time':\n        return [this.renderTime(), this.renderFooter()];\n      case 'month':\n      case 'month-year':\n      case 'year':\n        return [this.renderWheelView(), this.renderFooter()];\n      default:\n        return [\n          this.renderCalendarViewHeader(),\n          this.renderCalendar(mode),\n          this.renderCalendarViewMonthYearPicker(),\n          this.renderFooter(),\n        ];\n    }\n  }\n  render() {\n    const { name, value, disabled, el, color, isPresented, readonly, showMonthAndYear, preferWheel, presentation, size, } = this;\n    const mode = getIonMode(this);\n    const isMonthAndYearPresentation = presentation === 'year' || presentation === 'month' || presentation === 'month-year';\n    const shouldShowMonthAndYear = showMonthAndYear || isMonthAndYearPresentation;\n    const monthYearPickerOpen = showMonthAndYear && !isMonthAndYearPresentation;\n    const hasDatePresentation = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n    const hasWheelVariant = hasDatePresentation && preferWheel;\n    const hasGrid = hasDatePresentation && !preferWheel;\n    renderHiddenInput(true, el, name, formatValue(value), disabled);\n    return (h(Host, { \"aria-disabled\": disabled ? 'true' : null, onFocus: this.onFocus, onBlur: this.onBlur, class: Object.assign({}, createColorClasses(color, {\n        [mode]: true,\n        ['datetime-presented']: isPresented,\n        ['datetime-readonly']: readonly,\n        ['datetime-disabled']: disabled,\n        'show-month-and-year': shouldShowMonthAndYear,\n        'month-year-picker-open': monthYearPickerOpen,\n        [`datetime-presentation-${presentation}`]: true,\n        [`datetime-size-${size}`]: true,\n        [`datetime-prefer-wheel`]: hasWheelVariant,\n        [`datetime-grid`]: hasGrid,\n      })) }, this.renderDatetime(mode)));\n  }\n  get el() { return this; }\n  static get watchers() { return {\n    \"disabled\": [\"disabledChanged\"],\n    \"min\": [\"minChanged\"],\n    \"max\": [\"maxChanged\"],\n    \"yearValues\": [\"yearValuesChanged\"],\n    \"monthValues\": [\"monthValuesChanged\"],\n    \"dayValues\": [\"dayValuesChanged\"],\n    \"hourValues\": [\"hourValuesChanged\"],\n    \"minuteValues\": [\"minuteValuesChanged\"],\n    \"activeParts\": [\"activePartsChanged\"],\n    \"value\": [\"valueChanged\"]\n  }; }\n  static get style() { return {\n    ios: datetimeIosCss,\n    md: datetimeMdCss\n  }; }\n}, [33, \"ion-datetime\", {\n    \"color\": [1],\n    \"name\": [1],\n    \"disabled\": [4],\n    \"readonly\": [4],\n    \"isDateEnabled\": [16],\n    \"min\": [1025],\n    \"max\": [1025],\n    \"presentation\": [1],\n    \"cancelText\": [1, \"cancel-text\"],\n    \"doneText\": [1, \"done-text\"],\n    \"clearText\": [1, \"clear-text\"],\n    \"yearValues\": [8, \"year-values\"],\n    \"monthValues\": [8, \"month-values\"],\n    \"dayValues\": [8, \"day-values\"],\n    \"hourValues\": [8, \"hour-values\"],\n    \"minuteValues\": [8, \"minute-values\"],\n    \"locale\": [1],\n    \"firstDayOfWeek\": [2, \"first-day-of-week\"],\n    \"titleSelectedDatesFormatter\": [16],\n    \"multiple\": [4],\n    \"value\": [1025],\n    \"showDefaultTitle\": [4, \"show-default-title\"],\n    \"showDefaultButtons\": [4, \"show-default-buttons\"],\n    \"showClearButton\": [4, \"show-clear-button\"],\n    \"showDefaultTimeLabel\": [4, \"show-default-time-label\"],\n    \"hourCycle\": [1, \"hour-cycle\"],\n    \"size\": [1],\n    \"preferWheel\": [4, \"prefer-wheel\"],\n    \"showMonthAndYear\": [32],\n    \"activeParts\": [32],\n    \"workingParts\": [32],\n    \"isPresented\": [32],\n    \"isTimePopoverOpen\": [32],\n    \"confirm\": [64],\n    \"reset\": [64],\n    \"cancel\": [64]\n  }]);\nlet datetimeIds = 0;\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-datetime\", \"ion-backdrop\", \"ion-button\", \"ion-buttons\", \"ion-icon\", \"ion-item\", \"ion-label\", \"ion-note\", \"ion-picker-column-internal\", \"ion-picker-internal\", \"ion-popover\", \"ion-ripple-effect\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"ion-datetime\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, Datetime);\n      }\n      break;\n    case \"ion-backdrop\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$c();\n      }\n      break;\n    case \"ion-button\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$b();\n      }\n      break;\n    case \"ion-buttons\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$a();\n      }\n      break;\n    case \"ion-icon\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$9();\n      }\n      break;\n    case \"ion-item\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$8();\n      }\n      break;\n    case \"ion-label\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$7();\n      }\n      break;\n    case \"ion-note\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$6();\n      }\n      break;\n    case \"ion-picker-column-internal\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$5();\n      }\n      break;\n    case \"ion-picker-internal\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$4();\n      }\n      break;\n    case \"ion-popover\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$3();\n      }\n      break;\n    case \"ion-ripple-effect\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$2();\n      }\n      break;\n  } });\n}\n\nconst IonDatetime = Datetime;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { IonDatetime, defineCustomElement };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}