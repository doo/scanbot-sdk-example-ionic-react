{"ast":null,"code":"/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messages } from './messages.js';\nimport '../../_version.js';\nvar fallback = function fallback(code) {\n  var msg = code;\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n  if (args.length > 0) {\n    msg += \" :: \".concat(JSON.stringify(args));\n  }\n  return msg;\n};\nvar generatorFunction = function generatorFunction(code) {\n  var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var message = messages[code];\n  if (!message) {\n    throw new Error(\"Unable to find message for code '\".concat(code, \"'.\"));\n  }\n  return message(details);\n};\nexport var messageGenerator = process.env.NODE_ENV === 'production' ? fallback : generatorFunction;","map":{"version":3,"names":["messages","fallback","code","msg","args","length","JSON","stringify","generatorFunction","details","message","Error","messageGenerator","process","env","NODE_ENV"],"sources":["/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/workbox-core/models/messages/messageGenerator.js"],"sourcesContent":["/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messages } from './messages.js';\nimport '../../_version.js';\nconst fallback = (code, ...args) => {\n    let msg = code;\n    if (args.length > 0) {\n        msg += ` :: ${JSON.stringify(args)}`;\n    }\n    return msg;\n};\nconst generatorFunction = (code, details = {}) => {\n    const message = messages[code];\n    if (!message) {\n        throw new Error(`Unable to find message for code '${code}'.`);\n    }\n    return message(details);\n};\nexport const messageGenerator = (process.env.NODE_ENV === 'production') ?\n    fallback : generatorFunction;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,QAAQ,QAAQ,eAAe;AACxC,OAAO,mBAAmB;AAC1B,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,CAAIC,IAAI,EAAc;EAChC,IAAIC,GAAG,GAAGD,IAAI;EAAC,kCADQE,IAAI;IAAJA,IAAI;EAAA;EAE3B,IAAIA,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;IACjBF,GAAG,kBAAWG,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC,CAAE;EACxC;EACA,OAAOD,GAAG;AACd,CAAC;AACD,IAAMK,iBAAiB,GAAG,SAApBA,iBAAiB,CAAIN,IAAI,EAAmB;EAAA,IAAjBO,OAAO,uEAAG,CAAC,CAAC;EACzC,IAAMC,OAAO,GAAGV,QAAQ,CAACE,IAAI,CAAC;EAC9B,IAAI,CAACQ,OAAO,EAAE;IACV,MAAM,IAAIC,KAAK,4CAAqCT,IAAI,QAAK;EACjE;EACA,OAAOQ,OAAO,CAACD,OAAO,CAAC;AAC3B,CAAC;AACD,OAAO,IAAMG,gBAAgB,GAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAClEd,QAAQ,GAAGO,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}