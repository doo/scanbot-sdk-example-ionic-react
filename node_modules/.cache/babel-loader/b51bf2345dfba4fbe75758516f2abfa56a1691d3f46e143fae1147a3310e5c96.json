{"ast":null,"code":"import _regeneratorRuntime from \"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _createForOfIteratorHelper from \"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _asyncToGenerator from \"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from '../_private/logger.js';\nimport { quotaErrorCallbacks } from '../models/quotaErrorCallbacks.js';\nimport '../_version.js';\n/**\n * Runs all of the callback functions, one at a time sequentially, in the order\n * in which they were registered.\n *\n * @memberof module:workbox-core\n * @private\n */\nfunction executeQuotaErrorCallbacks() {\n  return _executeQuotaErrorCallbacks.apply(this, arguments);\n}\nfunction _executeQuotaErrorCallbacks() {\n  _executeQuotaErrorCallbacks = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var _iterator, _step, callback;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (process.env.NODE_ENV !== 'production') {\n            logger.log(\"About to run \".concat(quotaErrorCallbacks.size, \" \") + \"callbacks to clean up caches.\");\n          }\n          _iterator = _createForOfIteratorHelper(quotaErrorCallbacks);\n          _context.prev = 2;\n          _iterator.s();\n        case 4:\n          if ((_step = _iterator.n()).done) {\n            _context.next = 11;\n            break;\n          }\n          callback = _step.value;\n          _context.next = 8;\n          return callback();\n        case 8:\n          if (process.env.NODE_ENV !== 'production') {\n            logger.log(callback, 'is complete.');\n          }\n        case 9:\n          _context.next = 4;\n          break;\n        case 11:\n          _context.next = 16;\n          break;\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](2);\n          _iterator.e(_context.t0);\n        case 16:\n          _context.prev = 16;\n          _iterator.f();\n          return _context.finish(16);\n        case 19:\n          if (process.env.NODE_ENV !== 'production') {\n            logger.log('Finished running callbacks.');\n          }\n        case 20:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[2, 13, 16, 19]]);\n  }));\n  return _executeQuotaErrorCallbacks.apply(this, arguments);\n}\nexport { executeQuotaErrorCallbacks };","map":{"version":3,"names":["logger","quotaErrorCallbacks","executeQuotaErrorCallbacks","process","env","NODE_ENV","log","size","callback"],"sources":["/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/workbox-core/_private/executeQuotaErrorCallbacks.js"],"sourcesContent":["/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from '../_private/logger.js';\nimport { quotaErrorCallbacks } from '../models/quotaErrorCallbacks.js';\nimport '../_version.js';\n/**\n * Runs all of the callback functions, one at a time sequentially, in the order\n * in which they were registered.\n *\n * @memberof module:workbox-core\n * @private\n */\nasync function executeQuotaErrorCallbacks() {\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log(`About to run ${quotaErrorCallbacks.size} ` +\n            `callbacks to clean up caches.`);\n    }\n    for (const callback of quotaErrorCallbacks) {\n        await callback();\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(callback, 'is complete.');\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Finished running callbacks.');\n    }\n}\nexport { executeQuotaErrorCallbacks };\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,MAAM,QAAQ,uBAAuB;AAC9C,SAASC,mBAAmB,QAAQ,kCAAkC;AACtE,OAAO,gBAAgB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AANA,SAOeC,0BAA0B;EAAA;AAAA;AAAA;EAAA,yFAAzC;IAAA;IAAA;MAAA;QAAA;UACI,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;YACvCL,MAAM,CAACM,GAAG,CAAC,uBAAgBL,mBAAmB,CAACM,IAAI,wCAChB,CAAC;UACxC;UAAC,uCACsBN,mBAAmB;UAAA;UAAA;QAAA;UAAA;YAAA;YAAA;UAAA;UAA/BO,QAAQ;UAAA;UAAA,OACTA,QAAQ,EAAE;QAAA;UAChB,IAAIL,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;YACvCL,MAAM,CAACM,GAAG,CAACE,QAAQ,EAAE,cAAc,CAAC;UACxC;QAAC;UAAA;UAAA;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;UAEL,IAAIL,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;YACvCL,MAAM,CAACM,GAAG,CAAC,6BAA6B,CAAC;UAC7C;QAAC;QAAA;UAAA;MAAA;IAAA;EAAA,CACJ;EAAA;AAAA;AACD,SAASJ,0BAA0B"},"metadata":{},"sourceType":"module","externalDependencies":[]}