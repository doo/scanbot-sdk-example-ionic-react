{"ast":null,"code":"import _slicedToArray from \"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _regeneratorRuntime from \"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _assertThisInitialized from \"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _classCallCheck from \"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from 'tslib';\nimport { createBrowserHistory, createHashHistory } from 'history';\nimport React from 'react';\nimport { matchPath as matchPath$1, withRouter, Router } from 'react-router-dom';\nimport { ViewStacks, generateId, IonRoute, ViewLifeCycleManager, StackContext, RouteManagerContext, getConfig, LocationHistory, NavManager } from '@ionic/react';\nimport { Route, matchPath, Router as Router$1 } from 'react-router';\nvar IonRouteInner = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(IonRouteInner, _React$PureComponent);\n  var _super = _createSuper(IonRouteInner);\n  function IonRouteInner() {\n    _classCallCheck(this, IonRouteInner);\n    return _super.apply(this, arguments);\n  }\n  _createClass(IonRouteInner, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Route, {\n        path: this.props.path,\n        exact: this.props.exact,\n        render: this.props.render,\n        /**\n         * `computedMatch` is a private API in react-router v5 that\n         * has been removed in v6.\n         *\n         * This needs to be removed when we support v6.\n         *\n         * TODO: FW-647\n         */\n        computedMatch: this.props.computedMatch\n      });\n    }\n  }]);\n  return IonRouteInner;\n}(React.PureComponent);\nvar ReactRouterViewStack = /*#__PURE__*/function (_ViewStacks) {\n  _inherits(ReactRouterViewStack, _ViewStacks);\n  var _super2 = _createSuper(ReactRouterViewStack);\n  function ReactRouterViewStack() {\n    var _this;\n    _classCallCheck(this, ReactRouterViewStack);\n    _this = _super2.call(this);\n    _this.createViewItem = _this.createViewItem.bind(_assertThisInitialized(_this));\n    _this.findViewItemByRouteInfo = _this.findViewItemByRouteInfo.bind(_assertThisInitialized(_this));\n    _this.findLeavingViewItemByRouteInfo = _this.findLeavingViewItemByRouteInfo.bind(_assertThisInitialized(_this));\n    _this.getChildrenToRender = _this.getChildrenToRender.bind(_assertThisInitialized(_this));\n    _this.findViewItemByPathname = _this.findViewItemByPathname.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n  _createClass(ReactRouterViewStack, [{\n    key: \"createViewItem\",\n    value: function createViewItem(outletId, reactElement, routeInfo, page) {\n      var viewItem = {\n        id: generateId('viewItem'),\n        outletId: outletId,\n        ionPageElement: page,\n        reactElement: reactElement,\n        mount: true,\n        ionRoute: false\n      };\n      var matchProps = {\n        exact: reactElement.props.exact,\n        path: reactElement.props.path || reactElement.props.from,\n        component: reactElement.props.component\n      };\n      var match = matchPath(routeInfo.pathname, matchProps);\n      if (reactElement.type === IonRoute) {\n        viewItem.ionRoute = true;\n        viewItem.disableIonPageManagement = reactElement.props.disableIonPageManagement;\n      }\n      viewItem.routeData = {\n        match: match,\n        childProps: reactElement.props\n      };\n      return viewItem;\n    }\n  }, {\n    key: \"getChildrenToRender\",\n    value: function getChildrenToRender(outletId, ionRouterOutlet, routeInfo) {\n      var _this2 = this;\n      var viewItems = this.getViewItemsForOutlet(outletId);\n      // Sync latest routes with viewItems\n      React.Children.forEach(ionRouterOutlet.props.children, function (child) {\n        var viewItem = viewItems.find(function (v) {\n          return matchComponent$1(child, v.routeData.childProps.path || v.routeData.childProps.from);\n        });\n        if (viewItem) {\n          viewItem.reactElement = child;\n        }\n      });\n      var children = viewItems.map(function (viewItem) {\n        var clonedChild;\n        if (viewItem.ionRoute && !viewItem.disableIonPageManagement) {\n          clonedChild = React.createElement(ViewLifeCycleManager, {\n            key: \"view-\".concat(viewItem.id),\n            mount: viewItem.mount,\n            removeView: function removeView() {\n              return _this2.remove(viewItem);\n            }\n          }, React.cloneElement(viewItem.reactElement, {\n            computedMatch: viewItem.routeData.match\n          }));\n        } else {\n          var match = matchComponent$1(viewItem.reactElement, routeInfo.pathname);\n          clonedChild = React.createElement(ViewLifeCycleManager, {\n            key: \"view-\".concat(viewItem.id),\n            mount: viewItem.mount,\n            removeView: function removeView() {\n              return _this2.remove(viewItem);\n            }\n          }, React.cloneElement(viewItem.reactElement, {\n            computedMatch: viewItem.routeData.match\n          }));\n          if (!match && viewItem.routeData.match) {\n            viewItem.routeData.match = undefined;\n            viewItem.mount = false;\n          }\n        }\n        return clonedChild;\n      });\n      return children;\n    }\n  }, {\n    key: \"findViewItemByRouteInfo\",\n    value: function findViewItemByRouteInfo(routeInfo, outletId, updateMatch) {\n      var _this$findViewItemByP = this.findViewItemByPath(routeInfo.pathname, outletId),\n        viewItem = _this$findViewItemByP.viewItem,\n        match = _this$findViewItemByP.match;\n      var shouldUpdateMatch = updateMatch === undefined || updateMatch === true;\n      if (shouldUpdateMatch && viewItem && match) {\n        viewItem.routeData.match = match;\n      }\n      return viewItem;\n    }\n  }, {\n    key: \"findLeavingViewItemByRouteInfo\",\n    value: function findLeavingViewItemByRouteInfo(routeInfo, outletId) {\n      var mustBeIonRoute = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var _this$findViewItemByP2 = this.findViewItemByPath(routeInfo.lastPathname, outletId, false, mustBeIonRoute),\n        viewItem = _this$findViewItemByP2.viewItem;\n      return viewItem;\n    }\n  }, {\n    key: \"findViewItemByPathname\",\n    value: function findViewItemByPathname(pathname, outletId) {\n      var _this$findViewItemByP3 = this.findViewItemByPath(pathname, outletId),\n        viewItem = _this$findViewItemByP3.viewItem;\n      return viewItem;\n    }\n  }, {\n    key: \"findViewItemByPath\",\n    value: function findViewItemByPath(pathname, outletId, forceExact, mustBeIonRoute) {\n      var viewItem;\n      var match;\n      var viewStack;\n      if (outletId) {\n        viewStack = this.getViewItemsForOutlet(outletId);\n        viewStack.some(matchView);\n        if (!viewItem) {\n          viewStack.some(matchDefaultRoute);\n        }\n      } else {\n        var viewItems = this.getAllViewItems();\n        viewItems.some(matchView);\n        if (!viewItem) {\n          viewItems.some(matchDefaultRoute);\n        }\n      }\n      return {\n        viewItem: viewItem,\n        match: match\n      };\n      function matchView(v) {\n        if (mustBeIonRoute && !v.ionRoute) {\n          return false;\n        }\n        var matchProps = {\n          exact: forceExact ? true : v.routeData.childProps.exact,\n          path: v.routeData.childProps.path || v.routeData.childProps.from,\n          component: v.routeData.childProps.component\n        };\n        var myMatch = matchPath(pathname, matchProps);\n        if (myMatch) {\n          viewItem = v;\n          match = myMatch;\n          return true;\n        }\n        return false;\n      }\n      function matchDefaultRoute(v) {\n        // try to find a route that doesn't have a path or from prop, that will be our default route\n        if (!v.routeData.childProps.path && !v.routeData.childProps.from) {\n          match = {\n            path: pathname,\n            url: pathname,\n            isExact: true,\n            params: {}\n          };\n          viewItem = v;\n          return true;\n        }\n        return false;\n      }\n    }\n  }]);\n  return ReactRouterViewStack;\n}(ViewStacks);\nfunction matchComponent$1(node, pathname, forceExact) {\n  var matchProps = {\n    exact: forceExact ? true : node.props.exact,\n    path: node.props.path || node.props.from,\n    component: node.props.component\n  };\n  var match = matchPath(pathname, matchProps);\n  return match;\n}\nfunction clonePageElement(leavingViewHtml) {\n  var html;\n  if (typeof leavingViewHtml === 'string') {\n    html = leavingViewHtml;\n  } else {\n    html = leavingViewHtml.outerHTML;\n  }\n  if (document) {\n    var newEl = document.createElement('div');\n    newEl.innerHTML = html;\n    newEl.style.zIndex = '';\n    // Remove an existing back button so the new element doesn't get two of them\n    var ionBackButton = newEl.getElementsByTagName('ion-back-button');\n    if (ionBackButton[0]) {\n      ionBackButton[0].remove();\n    }\n    return newEl.firstChild;\n  }\n  return undefined;\n}\nvar isViewVisible = function isViewVisible(el) {\n  return !el.classList.contains('ion-page-invisible') && !el.classList.contains('ion-page-hidden');\n};\nvar StackManager = /*#__PURE__*/function (_React$PureComponent2) {\n  _inherits(StackManager, _React$PureComponent2);\n  var _super3 = _createSuper(StackManager);\n  function StackManager(props) {\n    var _this3;\n    _classCallCheck(this, StackManager);\n    _this3 = _super3.call(this, props);\n    _this3.stackContextValue = {\n      registerIonPage: _this3.registerIonPage.bind(_assertThisInitialized(_this3)),\n      isInOutlet: function isInOutlet() {\n        return true;\n      }\n    };\n    _this3.pendingPageTransition = false;\n    _this3.registerIonPage = _this3.registerIonPage.bind(_assertThisInitialized(_this3));\n    _this3.transitionPage = _this3.transitionPage.bind(_assertThisInitialized(_this3));\n    _this3.handlePageTransition = _this3.handlePageTransition.bind(_assertThisInitialized(_this3));\n    _this3.id = generateId('routerOutlet');\n    _this3.prevProps = undefined;\n    _this3.skipTransition = false;\n    return _this3;\n  }\n  _createClass(StackManager, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.clearOutletTimeout) {\n        /**\n         * The clearOutlet integration with React Router is a bit hacky.\n         * It uses a timeout to clear the outlet after a transition.\n         * In React v18, components are mounted and unmounted in development mode\n         * to check for side effects.\n         *\n         * This clearTimeout prevents the outlet from being cleared when the component is re-mounted,\n         * which should only happen in development mode and as a result of a hot reload.\n         */\n        clearTimeout(this.clearOutletTimeout);\n      }\n      if (this.routerOutletElement) {\n        this.setupRouterOutlet(this.routerOutletElement);\n        this.handlePageTransition(this.props.routeInfo);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var pathname = this.props.routeInfo.pathname;\n      var prevPathname = prevProps.routeInfo.pathname;\n      if (pathname !== prevPathname) {\n        this.prevProps = prevProps;\n        this.handlePageTransition(this.props.routeInfo);\n      } else if (this.pendingPageTransition) {\n        this.handlePageTransition(this.props.routeInfo);\n        this.pendingPageTransition = false;\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.clearOutletTimeout = this.context.clearOutlet(this.id);\n    }\n  }, {\n    key: \"handlePageTransition\",\n    value: function () {\n      var _handlePageTransition = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(routeInfo) {\n        var _a, _b, enteringViewItem, leavingViewItem, enteringRoute;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(!this.routerOutletElement || !this.routerOutletElement.commit)) {\n                _context.next = 4;\n                break;\n              }\n              /**\n               * The route outlet has not mounted yet. We need to wait for it to render\n               * before we can transition the page.\n               *\n               * Set a flag to indicate that we should transition the page after\n               * the component has updated.\n               */\n              this.pendingPageTransition = true;\n              _context.next = 22;\n              break;\n            case 4:\n              enteringViewItem = this.context.findViewItemByRouteInfo(routeInfo, this.id);\n              leavingViewItem = this.context.findLeavingViewItemByRouteInfo(routeInfo, this.id);\n              if (!leavingViewItem && routeInfo.prevRouteLastPathname) {\n                leavingViewItem = this.context.findViewItemByPathname(routeInfo.prevRouteLastPathname, this.id);\n              }\n              // Check if leavingViewItem should be unmounted\n              if (leavingViewItem) {\n                if (routeInfo.routeAction === 'replace') {\n                  leavingViewItem.mount = false;\n                } else if (!(routeInfo.routeAction === 'push' && routeInfo.routeDirection === 'forward')) {\n                  if (routeInfo.routeDirection !== 'none' && enteringViewItem !== leavingViewItem) {\n                    leavingViewItem.mount = false;\n                  }\n                } else if ((_a = routeInfo.routeOptions) === null || _a === void 0 ? void 0 : _a.unmount) {\n                  leavingViewItem.mount = false;\n                }\n              }\n              enteringRoute = matchRoute((_b = this.ionRouterOutlet) === null || _b === void 0 ? void 0 : _b.props.children, routeInfo);\n              if (enteringViewItem) {\n                enteringViewItem.reactElement = enteringRoute;\n              } else if (enteringRoute) {\n                enteringViewItem = this.context.createViewItem(this.id, enteringRoute, routeInfo);\n                this.context.addViewItem(enteringViewItem);\n              }\n              if (!(enteringViewItem && enteringViewItem.ionPageElement)) {\n                _context.next = 20;\n                break;\n              }\n              if (!(enteringViewItem === leavingViewItem)) {\n                _context.next = 14;\n                break;\n              }\n              if (!(enteringViewItem.routeData.match.url !== routeInfo.pathname)) {\n                _context.next = 14;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 14:\n              /**\n               * If there isn't a leaving view item, but the route info indicates\n               * that the user has routed from a previous path, then we need\n               * to find the leaving view item to transition between.\n               */\n              if (!leavingViewItem && this.props.routeInfo.prevRouteLastPathname) {\n                leavingViewItem = this.context.findViewItemByPathname(this.props.routeInfo.prevRouteLastPathname, this.id);\n              }\n              /**\n               * If the entering view is already visible and the leaving view is not, the transition does not need to occur.\n               */\n              if (!(isViewVisible(enteringViewItem.ionPageElement) && leavingViewItem !== undefined && !isViewVisible(leavingViewItem.ionPageElement))) {\n                _context.next = 17;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 17:\n              /**\n               * The view should only be transitioned in the following cases:\n               * 1. Performing a replace or pop action, such as a swipe to go back gesture\n               * to animation the leaving view off the screen.\n               *\n               * 2. Navigating between top-level router outlets, such as /page-1 to /page-2;\n               * or navigating within a nested outlet, such as /tabs/tab-1 to /tabs/tab-2.\n               *\n               * 3. The entering view is an ion-router-outlet containing a page\n               * matching the current route and that hasn't already transitioned in.\n               *\n               * This should only happen when navigating directly to a nested router outlet\n               * route or on an initial page load (i.e. refreshing). In cases when loading\n               * /tabs/tab-1, we need to transition the /tabs page element into the view.\n               */\n              this.transitionPage(routeInfo, enteringViewItem, leavingViewItem);\n              _context.next = 21;\n              break;\n            case 20:\n              if (leavingViewItem && !enteringRoute && !enteringViewItem) {\n                // If we have a leavingView but no entering view/route, we are probably leaving to\n                // another outlet, so hide this leavingView. We do it in a timeout to give time for a\n                // transition to finish.\n                // setTimeout(() => {\n                if (leavingViewItem.ionPageElement) {\n                  leavingViewItem.ionPageElement.classList.add('ion-page-hidden');\n                  leavingViewItem.ionPageElement.setAttribute('aria-hidden', 'true');\n                }\n                // }, 250);\n              }\n            case 21:\n              this.forceUpdate();\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function handlePageTransition(_x) {\n        return _handlePageTransition.apply(this, arguments);\n      }\n      return handlePageTransition;\n    }()\n  }, {\n    key: \"registerIonPage\",\n    value: function registerIonPage(page, routeInfo) {\n      var foundView = this.context.findViewItemByRouteInfo(routeInfo, this.id);\n      if (foundView) {\n        var oldPageElement = foundView.ionPageElement;\n        foundView.ionPageElement = page;\n        foundView.ionRoute = true;\n        /**\n         * React 18 will unmount and remount IonPage\n         * elements in development mode when using createRoot.\n         * This can cause duplicate page transitions to occur.\n         */\n        if (oldPageElement === page) {\n          return;\n        }\n      }\n      this.handlePageTransition(routeInfo);\n    }\n  }, {\n    key: \"setupRouterOutlet\",\n    value: function () {\n      var _setupRouterOutlet = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(routerOutlet) {\n        var _this4 = this;\n        var canStart, onStart, onEnd;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              canStart = function canStart() {\n                var config = getConfig();\n                var swipeEnabled = config && config.get('swipeBackEnabled', routerOutlet.mode === 'ios');\n                if (!swipeEnabled) {\n                  return false;\n                }\n                var routeInfo = _this4.props.routeInfo;\n                var propsToUse = _this4.prevProps && _this4.prevProps.routeInfo.pathname === routeInfo.pushedByRoute ? _this4.prevProps.routeInfo : {\n                  pathname: routeInfo.pushedByRoute || ''\n                };\n                var enteringViewItem = _this4.context.findViewItemByRouteInfo(propsToUse, _this4.id, false);\n                return !!enteringViewItem &&\n                /**\n                 * The root url '/' is treated as\n                 * the first view item (but is never mounted),\n                 * so we do not want to swipe back to the\n                 * root url.\n                 */\n                enteringViewItem.mount &&\n                /**\n                 * When on the first page (whatever view\n                 * you land on after the root url) it\n                 * is possible for findViewItemByRouteInfo to\n                 * return the exact same view you are currently on.\n                 * Make sure that we are not swiping back to the same\n                 * instances of a view.\n                 */\n                enteringViewItem.routeData.match.path !== routeInfo.pathname;\n              };\n              onStart = /*#__PURE__*/function () {\n                var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n                  var routeInfo, propsToUse, enteringViewItem, leavingViewItem;\n                  return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n                    while (1) switch (_context2.prev = _context2.next) {\n                      case 0:\n                        routeInfo = _this4.props.routeInfo;\n                        propsToUse = _this4.prevProps && _this4.prevProps.routeInfo.pathname === routeInfo.pushedByRoute ? _this4.prevProps.routeInfo : {\n                          pathname: routeInfo.pushedByRoute || ''\n                        };\n                        enteringViewItem = _this4.context.findViewItemByRouteInfo(propsToUse, _this4.id, false);\n                        leavingViewItem = _this4.context.findViewItemByRouteInfo(routeInfo, _this4.id, false);\n                        /**\n                         * When the gesture starts, kick off\n                         * a transition that is controlled\n                         * via a swipe gesture.\n                         */\n                        if (!(enteringViewItem && leavingViewItem)) {\n                          _context2.next = 7;\n                          break;\n                        }\n                        _context2.next = 7;\n                        return _this4.transitionPage(routeInfo, enteringViewItem, leavingViewItem, 'back', true);\n                      case 7:\n                        return _context2.abrupt(\"return\", Promise.resolve());\n                      case 8:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }, _callee2);\n                }));\n                return function onStart() {\n                  return _ref.apply(this, arguments);\n                };\n              }();\n              onEnd = function onEnd(shouldContinue) {\n                if (shouldContinue) {\n                  _this4.skipTransition = true;\n                  _this4.context.goBack();\n                } else {\n                  /**\n                   * In the event that the swipe\n                   * gesture was aborted, we should\n                   * re-hide the page that was going to enter.\n                   */\n                  var routeInfo = _this4.props.routeInfo;\n                  var propsToUse = _this4.prevProps && _this4.prevProps.routeInfo.pathname === routeInfo.pushedByRoute ? _this4.prevProps.routeInfo : {\n                    pathname: routeInfo.pushedByRoute || ''\n                  };\n                  var enteringViewItem = _this4.context.findViewItemByRouteInfo(propsToUse, _this4.id, false);\n                  var leavingViewItem = _this4.context.findViewItemByRouteInfo(routeInfo, _this4.id, false);\n                  /**\n                   * Ionic React has a design defect where it\n                   * a) Unmounts the leaving view item when using parameterized routes\n                   * b) Considers the current view to be the entering view when using\n                   * parameterized routes\n                   *\n                   * As a result, we should not hide the view item here\n                   * as it will cause the current view to be hidden.\n                   */\n                  if (enteringViewItem !== leavingViewItem && (enteringViewItem === null || enteringViewItem === void 0 ? void 0 : enteringViewItem.ionPageElement) !== undefined) {\n                    var ionPageElement = enteringViewItem.ionPageElement;\n                    ionPageElement.setAttribute('aria-hidden', 'true');\n                    ionPageElement.classList.add('ion-page-hidden');\n                  }\n                }\n              };\n              routerOutlet.swipeHandler = {\n                canStart: canStart,\n                onStart: onStart,\n                onEnd: onEnd\n              };\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n      function setupRouterOutlet(_x2) {\n        return _setupRouterOutlet.apply(this, arguments);\n      }\n      return setupRouterOutlet;\n    }()\n  }, {\n    key: \"transitionPage\",\n    value: function () {\n      var _transitionPage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(routeInfo, enteringViewItem, leavingViewItem, direction) {\n        var _this5 = this;\n        var progressAnimation,\n          runCommit,\n          routerOutlet,\n          routeInfoFallbackDirection,\n          directionToUse,\n          match,\n          newLeavingElement,\n          _args5 = arguments;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              progressAnimation = _args5.length > 4 && _args5[4] !== undefined ? _args5[4] : false;\n              runCommit = /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(enteringEl, leavingEl) {\n                  var skipTransition;\n                  return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n                    while (1) switch (_context4.prev = _context4.next) {\n                      case 0:\n                        skipTransition = _this5.skipTransition;\n                        /**\n                         * If the transition was handled\n                         * via the swipe to go back gesture,\n                         * then we do not want to perform\n                         * another transition.\n                         *\n                         * We skip adding ion-page or ion-page-invisible\n                         * because the entering view already exists in the DOM.\n                         * If we added the classes, there would be a flicker where\n                         * the view would be briefly hidden.\n                         */\n                        if (skipTransition) {\n                          /**\n                           * We need to reset skipTransition before\n                           * we call routerOutlet.commit otherwise\n                           * the transition triggered by the swipe\n                           * to go back gesture would reset it. In\n                           * that case you would see a duplicate\n                           * transition triggered by handlePageTransition\n                           * in componentDidUpdate.\n                           */\n                          _this5.skipTransition = false;\n                        } else {\n                          enteringEl.classList.add('ion-page');\n                          enteringEl.classList.add('ion-page-invisible');\n                        }\n                        _context4.next = 4;\n                        return routerOutlet.commit(enteringEl, leavingEl, {\n                          deepWait: true,\n                          duration: skipTransition || directionToUse === undefined ? 0 : undefined,\n                          direction: directionToUse,\n                          showGoBack: !!routeInfo.pushedByRoute,\n                          progressAnimation: progressAnimation,\n                          animationBuilder: routeInfo.routeAnimation\n                        });\n                      case 4:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }, _callee4);\n                }));\n                return function runCommit(_x7, _x8) {\n                  return _ref2.apply(this, arguments);\n                };\n              }();\n              routerOutlet = this.routerOutletElement;\n              routeInfoFallbackDirection = routeInfo.routeDirection === 'none' || routeInfo.routeDirection === 'root' ? undefined : routeInfo.routeDirection;\n              directionToUse = direction !== null && direction !== void 0 ? direction : routeInfoFallbackDirection;\n              if (!(enteringViewItem && enteringViewItem.ionPageElement && this.routerOutletElement)) {\n                _context5.next = 24;\n                break;\n              }\n              if (!(leavingViewItem && leavingViewItem.ionPageElement && enteringViewItem === leavingViewItem)) {\n                _context5.next = 21;\n                break;\n              }\n              // If a page is transitioning to another version of itself\n              // we clone it so we can have an animation to show\n              match = matchComponent(leavingViewItem.reactElement, routeInfo.pathname, true);\n              if (!match) {\n                _context5.next = 17;\n                break;\n              }\n              newLeavingElement = clonePageElement(leavingViewItem.ionPageElement.outerHTML);\n              if (!newLeavingElement) {\n                _context5.next = 15;\n                break;\n              }\n              this.routerOutletElement.appendChild(newLeavingElement);\n              _context5.next = 14;\n              return runCommit(enteringViewItem.ionPageElement, newLeavingElement);\n            case 14:\n              this.routerOutletElement.removeChild(newLeavingElement);\n            case 15:\n              _context5.next = 19;\n              break;\n            case 17:\n              _context5.next = 19;\n              return runCommit(enteringViewItem.ionPageElement, undefined);\n            case 19:\n              _context5.next = 24;\n              break;\n            case 21:\n              _context5.next = 23;\n              return runCommit(enteringViewItem.ionPageElement, leavingViewItem === null || leavingViewItem === void 0 ? void 0 : leavingViewItem.ionPageElement);\n            case 23:\n              if (leavingViewItem && leavingViewItem.ionPageElement && !progressAnimation) {\n                leavingViewItem.ionPageElement.classList.add('ion-page-hidden');\n                leavingViewItem.ionPageElement.setAttribute('aria-hidden', 'true');\n              }\n            case 24:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function transitionPage(_x3, _x4, _x5, _x6) {\n        return _transitionPage.apply(this, arguments);\n      }\n      return transitionPage;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n      var children = this.props.children;\n      var ionRouterOutlet = React.Children.only(children);\n      this.ionRouterOutlet = ionRouterOutlet;\n      var components = this.context.getChildrenToRender(this.id, this.ionRouterOutlet, this.props.routeInfo, function () {\n        _this6.forceUpdate();\n      });\n      return React.createElement(StackContext.Provider, {\n        value: this.stackContextValue\n      }, React.cloneElement(ionRouterOutlet, {\n        ref: function ref(node) {\n          if (ionRouterOutlet.props.setRef) {\n            ionRouterOutlet.props.setRef(node);\n          }\n          if (ionRouterOutlet.props.forwardedRef) {\n            ionRouterOutlet.props.forwardedRef.current = node;\n          }\n          _this6.routerOutletElement = node;\n          var ref = ionRouterOutlet.ref;\n          if (typeof ref === 'function') {\n            ref(node);\n          }\n        }\n      }, components));\n    }\n  }], [{\n    key: \"contextType\",\n    get: function get() {\n      return RouteManagerContext;\n    }\n  }]);\n  return StackManager;\n}(React.PureComponent);\nfunction matchRoute(node, routeInfo) {\n  var matchedNode;\n  React.Children.forEach(node, function (child) {\n    var matchProps = {\n      exact: child.props.exact,\n      path: child.props.path || child.props.from,\n      component: child.props.component\n    };\n    var match = matchPath$1(routeInfo.pathname, matchProps);\n    if (match) {\n      matchedNode = child;\n    }\n  });\n  if (matchedNode) {\n    return matchedNode;\n  }\n  // If we haven't found a node\n  // try to find one that doesn't have a path or from prop, that will be our not found route\n  React.Children.forEach(node, function (child) {\n    if (!(child.props.path || child.props.from)) {\n      matchedNode = child;\n    }\n  });\n  return matchedNode;\n}\nfunction matchComponent(node, pathname, forceExact) {\n  var matchProps = {\n    exact: forceExact ? true : node.props.exact,\n    path: node.props.path || node.props.from,\n    component: node.props.component\n  };\n  var match = matchPath$1(pathname, matchProps);\n  return match;\n}\nvar IonRouterInner = /*#__PURE__*/function (_React$PureComponent3) {\n  _inherits(IonRouterInner, _React$PureComponent3);\n  var _super4 = _createSuper(IonRouterInner);\n  function IonRouterInner(props) {\n    var _this7;\n    _classCallCheck(this, IonRouterInner);\n    _this7 = _super4.call(this, props);\n    _this7.exitViewFromOtherOutletHandlers = [];\n    _this7.locationHistory = new LocationHistory();\n    _this7.viewStack = new ReactRouterViewStack();\n    _this7.routeMangerContextState = {\n      canGoBack: function canGoBack() {\n        return _this7.locationHistory.canGoBack();\n      },\n      clearOutlet: _this7.viewStack.clear,\n      findViewItemByPathname: _this7.viewStack.findViewItemByPathname,\n      getChildrenToRender: _this7.viewStack.getChildrenToRender,\n      goBack: function goBack() {\n        return _this7.handleNavigateBack();\n      },\n      createViewItem: _this7.viewStack.createViewItem,\n      findViewItemByRouteInfo: _this7.viewStack.findViewItemByRouteInfo,\n      findLeavingViewItemByRouteInfo: _this7.viewStack.findLeavingViewItemByRouteInfo,\n      addViewItem: _this7.viewStack.add,\n      unMountViewItem: _this7.viewStack.remove\n    };\n    var routeInfo = {\n      id: generateId('routeInfo'),\n      pathname: _this7.props.location.pathname,\n      search: _this7.props.location.search\n    };\n    _this7.locationHistory.add(routeInfo);\n    _this7.handleChangeTab = _this7.handleChangeTab.bind(_assertThisInitialized(_this7));\n    _this7.handleResetTab = _this7.handleResetTab.bind(_assertThisInitialized(_this7));\n    _this7.handleNativeBack = _this7.handleNativeBack.bind(_assertThisInitialized(_this7));\n    _this7.handleNavigate = _this7.handleNavigate.bind(_assertThisInitialized(_this7));\n    _this7.handleNavigateBack = _this7.handleNavigateBack.bind(_assertThisInitialized(_this7));\n    _this7.props.registerHistoryListener(_this7.handleHistoryChange.bind(_assertThisInitialized(_this7)));\n    _this7.handleSetCurrentTab = _this7.handleSetCurrentTab.bind(_assertThisInitialized(_this7));\n    _this7.state = {\n      routeInfo: routeInfo\n    };\n    return _this7;\n  }\n  _createClass(IonRouterInner, [{\n    key: \"handleChangeTab\",\n    value: function handleChangeTab(tab, path, routeOptions) {\n      if (!path) {\n        return;\n      }\n      var routeInfo = this.locationHistory.getCurrentRouteInfoForTab(tab);\n      var _path$split = path.split('?'),\n        _path$split2 = _slicedToArray(_path$split, 2),\n        pathname = _path$split2[0],\n        search = _path$split2[1];\n      if (routeInfo) {\n        this.incomingRouteParams = Object.assign(Object.assign({}, routeInfo), {\n          routeAction: 'push',\n          routeDirection: 'none'\n        });\n        if (routeInfo.pathname === pathname) {\n          this.incomingRouteParams.routeOptions = routeOptions;\n          this.props.history.push(routeInfo.pathname + (routeInfo.search || ''));\n        } else {\n          this.incomingRouteParams.pathname = pathname;\n          this.incomingRouteParams.search = search ? '?' + search : undefined;\n          this.incomingRouteParams.routeOptions = routeOptions;\n          this.props.history.push(pathname + (search ? '?' + search : ''));\n        }\n      } else {\n        this.handleNavigate(pathname, 'push', 'none', undefined, routeOptions, tab);\n      }\n    }\n  }, {\n    key: \"handleHistoryChange\",\n    value: function handleHistoryChange(location, action) {\n      var _a, _b, _c;\n      var leavingLocationInfo;\n      if (this.incomingRouteParams) {\n        if (this.incomingRouteParams.routeAction === 'replace') {\n          leavingLocationInfo = this.locationHistory.previous();\n        } else {\n          leavingLocationInfo = this.locationHistory.current();\n        }\n      } else {\n        leavingLocationInfo = this.locationHistory.current();\n      }\n      var leavingUrl = leavingLocationInfo.pathname + leavingLocationInfo.search;\n      if (leavingUrl !== location.pathname) {\n        if (!this.incomingRouteParams) {\n          if (action === 'REPLACE') {\n            this.incomingRouteParams = {\n              routeAction: 'replace',\n              routeDirection: 'none',\n              tab: this.currentTab\n            };\n          }\n          if (action === 'POP') {\n            var currentRoute = this.locationHistory.current();\n            if (currentRoute && currentRoute.pushedByRoute) {\n              var prevInfo = this.locationHistory.findLastLocation(currentRoute);\n              this.incomingRouteParams = Object.assign(Object.assign({}, prevInfo), {\n                routeAction: 'pop',\n                routeDirection: 'back'\n              });\n            } else {\n              this.incomingRouteParams = {\n                routeAction: 'pop',\n                routeDirection: 'none',\n                tab: this.currentTab\n              };\n            }\n          }\n          if (!this.incomingRouteParams) {\n            this.incomingRouteParams = {\n              routeAction: 'push',\n              routeDirection: ((_a = location.state) === null || _a === void 0 ? void 0 : _a.direction) || 'forward',\n              routeOptions: (_b = location.state) === null || _b === void 0 ? void 0 : _b.routerOptions,\n              tab: this.currentTab\n            };\n          }\n        }\n        var routeInfo;\n        if ((_c = this.incomingRouteParams) === null || _c === void 0 ? void 0 : _c.id) {\n          routeInfo = Object.assign(Object.assign({}, this.incomingRouteParams), {\n            lastPathname: leavingLocationInfo.pathname\n          });\n          this.locationHistory.add(routeInfo);\n        } else {\n          var isPushed = this.incomingRouteParams.routeAction === 'push' && this.incomingRouteParams.routeDirection === 'forward';\n          routeInfo = Object.assign(Object.assign({\n            id: generateId('routeInfo')\n          }, this.incomingRouteParams), {\n            lastPathname: leavingLocationInfo.pathname,\n            pathname: location.pathname,\n            search: location.search,\n            params: this.props.match.params,\n            prevRouteLastPathname: leavingLocationInfo.lastPathname\n          });\n          if (isPushed) {\n            routeInfo.tab = leavingLocationInfo.tab;\n            routeInfo.pushedByRoute = leavingLocationInfo.pathname;\n          } else if (routeInfo.routeAction === 'pop') {\n            var r = this.locationHistory.findLastLocation(routeInfo);\n            routeInfo.pushedByRoute = r === null || r === void 0 ? void 0 : r.pushedByRoute;\n          } else if (routeInfo.routeAction === 'push' && routeInfo.tab !== leavingLocationInfo.tab) {\n            // If we are switching tabs grab the last route info for the tab and use its pushedByRoute\n            var lastRoute = this.locationHistory.getCurrentRouteInfoForTab(routeInfo.tab);\n            routeInfo.pushedByRoute = lastRoute === null || lastRoute === void 0 ? void 0 : lastRoute.pushedByRoute;\n          } else if (routeInfo.routeAction === 'replace') {\n            // Make sure to set the lastPathname, etc.. to the current route so the page transitions out\n            var currentRouteInfo = this.locationHistory.current();\n            /**\n             * If going from /home to /child, then replacing from\n             * /child to /home, we don't want the route info to\n             * say that /home was pushed by /home which is not correct.\n             */\n            var currentPushedBy = currentRouteInfo === null || currentRouteInfo === void 0 ? void 0 : currentRouteInfo.pushedByRoute;\n            var pushedByRoute = currentPushedBy !== undefined && currentPushedBy !== routeInfo.pathname ? currentPushedBy : routeInfo.pushedByRoute;\n            routeInfo.lastPathname = (currentRouteInfo === null || currentRouteInfo === void 0 ? void 0 : currentRouteInfo.pathname) || routeInfo.lastPathname;\n            routeInfo.prevRouteLastPathname = currentRouteInfo === null || currentRouteInfo === void 0 ? void 0 : currentRouteInfo.lastPathname;\n            routeInfo.pushedByRoute = pushedByRoute;\n            routeInfo.routeDirection = (currentRouteInfo === null || currentRouteInfo === void 0 ? void 0 : currentRouteInfo.routeDirection) || routeInfo.routeDirection;\n            routeInfo.routeAnimation = (currentRouteInfo === null || currentRouteInfo === void 0 ? void 0 : currentRouteInfo.routeAnimation) || routeInfo.routeAnimation;\n          }\n          this.locationHistory.add(routeInfo);\n        }\n        this.setState({\n          routeInfo: routeInfo\n        });\n      }\n      this.incomingRouteParams = undefined;\n    }\n    /**\n     * history@4.x uses goBack(), history@5.x uses back()\n     * TODO: If support for React Router <=5 is dropped\n     * this logic is no longer needed. We can just\n     * assume back() is available.\n     */\n  }, {\n    key: \"handleNativeBack\",\n    value: function handleNativeBack() {\n      var history = this.props.history;\n      var goBack = history.goBack || history.back;\n      goBack();\n    }\n  }, {\n    key: \"handleNavigate\",\n    value: function handleNavigate(path, routeAction, routeDirection, routeAnimation, routeOptions, tab) {\n      this.incomingRouteParams = Object.assign(this.incomingRouteParams || {}, {\n        routeAction: routeAction,\n        routeDirection: routeDirection,\n        routeOptions: routeOptions,\n        routeAnimation: routeAnimation,\n        tab: tab\n      });\n      if (routeAction === 'push') {\n        this.props.history.push(path);\n      } else {\n        this.props.history.replace(path);\n      }\n    }\n  }, {\n    key: \"handleNavigateBack\",\n    value: function handleNavigateBack() {\n      var defaultHref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '/';\n      var routeAnimation = arguments.length > 1 ? arguments[1] : undefined;\n      var config = getConfig();\n      defaultHref = defaultHref ? defaultHref : config && config.get('backButtonDefaultHref');\n      var routeInfo = this.locationHistory.current();\n      if (routeInfo && routeInfo.pushedByRoute) {\n        var prevInfo = this.locationHistory.findLastLocation(routeInfo);\n        if (prevInfo) {\n          this.incomingRouteParams = Object.assign(Object.assign({}, prevInfo), {\n            routeAction: 'pop',\n            routeDirection: 'back',\n            routeAnimation: routeAnimation || routeInfo.routeAnimation\n          });\n          if (routeInfo.lastPathname === routeInfo.pushedByRoute ||\n          /**\n           * We need to exclude tab switches/tab\n           * context changes here because tabbed\n           * navigation is not linear, but router.back()\n           * will go back in a linear fashion.\n           */\n          prevInfo.pathname === routeInfo.pushedByRoute && routeInfo.tab === '' && prevInfo.tab === '') {\n            /**\n             * history@4.x uses goBack(), history@5.x uses back()\n             * TODO: If support for React Router <=5 is dropped\n             * this logic is no longer needed. We can just\n             * assume back() is available.\n             */\n            var history = this.props.history;\n            var goBack = history.goBack || history.back;\n            goBack();\n          } else {\n            this.handleNavigate(prevInfo.pathname + (prevInfo.search || ''), 'pop', 'back');\n          }\n        } else {\n          this.handleNavigate(defaultHref, 'pop', 'back');\n        }\n      } else {\n        this.handleNavigate(defaultHref, 'pop', 'back');\n      }\n    }\n  }, {\n    key: \"handleResetTab\",\n    value: function handleResetTab(tab, originalHref, originalRouteOptions) {\n      var routeInfo = this.locationHistory.getFirstRouteInfoForTab(tab);\n      if (routeInfo) {\n        var newRouteInfo = Object.assign({}, routeInfo);\n        newRouteInfo.pathname = originalHref;\n        newRouteInfo.routeOptions = originalRouteOptions;\n        this.incomingRouteParams = Object.assign(Object.assign({}, newRouteInfo), {\n          routeAction: 'pop',\n          routeDirection: 'back'\n        });\n        this.props.history.push(newRouteInfo.pathname + (newRouteInfo.search || ''));\n      }\n    }\n  }, {\n    key: \"handleSetCurrentTab\",\n    value: function handleSetCurrentTab(tab) {\n      this.currentTab = tab;\n      var ri = Object.assign({}, this.locationHistory.current());\n      if (ri.tab !== tab) {\n        ri.tab = tab;\n        this.locationHistory.update(ri);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(RouteManagerContext.Provider, {\n        value: this.routeMangerContextState\n      }, React.createElement(NavManager, {\n        ionRoute: IonRouteInner,\n        ionRedirect: {},\n        stackManager: StackManager,\n        routeInfo: this.state.routeInfo,\n        onNativeBack: this.handleNativeBack,\n        onNavigateBack: this.handleNavigateBack,\n        onNavigate: this.handleNavigate,\n        onSetCurrentTab: this.handleSetCurrentTab,\n        onChangeTab: this.handleChangeTab,\n        onResetTab: this.handleResetTab,\n        locationHistory: this.locationHistory\n      }, this.props.children));\n    }\n  }]);\n  return IonRouterInner;\n}(React.PureComponent);\nvar IonRouter = withRouter(IonRouterInner);\nIonRouter.displayName = 'IonRouter';\nvar IonReactRouter = /*#__PURE__*/function (_React$Component) {\n  _inherits(IonReactRouter, _React$Component);\n  var _super5 = _createSuper(IonReactRouter);\n  function IonReactRouter(props) {\n    var _this8;\n    _classCallCheck(this, IonReactRouter);\n    _this8 = _super5.call(this, props);\n    var history = props.history,\n      rest = __rest(props, [\"history\"]);\n    _this8.history = history || createBrowserHistory(rest);\n    _this8.history.listen(_this8.handleHistoryChange.bind(_assertThisInitialized(_this8)));\n    _this8.registerHistoryListener = _this8.registerHistoryListener.bind(_assertThisInitialized(_this8));\n    return _this8;\n  }\n  /**\n   * history@4.x passes separate location and action\n   * params. history@5.x passes location and action\n   * together as a single object.\n   * TODO: If support for React Router <=5 is dropped\n   * this logic is no longer needed. We can just assume\n   * a single object with both location and action.\n   */\n  _createClass(IonReactRouter, [{\n    key: \"handleHistoryChange\",\n    value: function handleHistoryChange(location, action) {\n      var locationValue = location.location || location;\n      var actionValue = location.action || action;\n      if (this.historyListenHandler) {\n        this.historyListenHandler(locationValue, actionValue);\n      }\n    }\n  }, {\n    key: \"registerHistoryListener\",\n    value: function registerHistoryListener(cb) {\n      this.historyListenHandler = cb;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n        children = _a.children,\n        props = __rest(_a, [\"children\"]);\n      return React.createElement(Router, Object.assign({\n        history: this.history\n      }, props), React.createElement(IonRouter, {\n        registerHistoryListener: this.registerHistoryListener\n      }, children));\n    }\n  }]);\n  return IonReactRouter;\n}(React.Component);\nvar IonReactMemoryRouter = /*#__PURE__*/function (_React$Component2) {\n  _inherits(IonReactMemoryRouter, _React$Component2);\n  var _super6 = _createSuper(IonReactMemoryRouter);\n  function IonReactMemoryRouter(props) {\n    var _this9;\n    _classCallCheck(this, IonReactMemoryRouter);\n    _this9 = _super6.call(this, props);\n    _this9.history = props.history;\n    _this9.history.listen(_this9.handleHistoryChange.bind(_assertThisInitialized(_this9)));\n    _this9.registerHistoryListener = _this9.registerHistoryListener.bind(_assertThisInitialized(_this9));\n    return _this9;\n  }\n  /**\n   * history@4.x passes separate location and action\n   * params. history@5.x passes location and action\n   * together as a single object.\n   * TODO: If support for React Router <=5 is dropped\n   * this logic is no longer needed. We can just assume\n   * a single object with both location and action.\n   */\n  _createClass(IonReactMemoryRouter, [{\n    key: \"handleHistoryChange\",\n    value: function handleHistoryChange(location, action) {\n      var locationValue = location.location || location;\n      var actionValue = location.action || action;\n      if (this.historyListenHandler) {\n        this.historyListenHandler(locationValue, actionValue);\n      }\n    }\n  }, {\n    key: \"registerHistoryListener\",\n    value: function registerHistoryListener(cb) {\n      this.historyListenHandler = cb;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n        children = _a.children,\n        props = __rest(_a, [\"children\"]);\n      return React.createElement(Router$1, Object.assign({}, props), React.createElement(IonRouter, {\n        registerHistoryListener: this.registerHistoryListener\n      }, children));\n    }\n  }]);\n  return IonReactMemoryRouter;\n}(React.Component);\nvar IonReactHashRouter = /*#__PURE__*/function (_React$Component3) {\n  _inherits(IonReactHashRouter, _React$Component3);\n  var _super7 = _createSuper(IonReactHashRouter);\n  function IonReactHashRouter(props) {\n    var _this10;\n    _classCallCheck(this, IonReactHashRouter);\n    _this10 = _super7.call(this, props);\n    var history = props.history,\n      rest = __rest(props, [\"history\"]);\n    _this10.history = history || createHashHistory(rest);\n    _this10.history.listen(_this10.handleHistoryChange.bind(_assertThisInitialized(_this10)));\n    _this10.registerHistoryListener = _this10.registerHistoryListener.bind(_assertThisInitialized(_this10));\n    return _this10;\n  }\n  /**\n   * history@4.x passes separate location and action\n   * params. history@5.x passes location and action\n   * together as a single object.\n   * TODO: If support for React Router <=5 is dropped\n   * this logic is no longer needed. We can just assume\n   * a single object with both location and action.\n   */\n  _createClass(IonReactHashRouter, [{\n    key: \"handleHistoryChange\",\n    value: function handleHistoryChange(location, action) {\n      var locationValue = location.location || location;\n      var actionValue = location.action || action;\n      if (this.historyListenHandler) {\n        this.historyListenHandler(locationValue, actionValue);\n      }\n    }\n  }, {\n    key: \"registerHistoryListener\",\n    value: function registerHistoryListener(cb) {\n      this.historyListenHandler = cb;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n        children = _a.children,\n        props = __rest(_a, [\"children\"]);\n      return React.createElement(Router, Object.assign({\n        history: this.history\n      }, props), React.createElement(IonRouter, {\n        registerHistoryListener: this.registerHistoryListener\n      }, children));\n    }\n  }]);\n  return IonReactHashRouter;\n}(React.Component);\nexport { IonReactHashRouter, IonReactMemoryRouter, IonReactRouter };","map":{"version":3,"mappings":";;;;;;;;;;;;;;IAIaA,aAAc;EAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OACzB,kBAAM;MACJ,OACEC,oBAACC,KAAK;QACJC,IAAI,EAAE,IAAI,CAACC,KAAK,CAACD,IAAI;QACrBE,KAAK,EAAE,IAAI,CAACD,KAAK,CAACC,KAAK;QACvBC,MAAM,EAAE,IAAI,CAACF,KAAK,CAACE,MAAM;;;;;;;;;QASzBC,aAAa,EAAG,IAAI,CAACH,KAAa,CAACG;MAAa,EAChD;;EAEL;EAAA;AAAA,EAlBgCN,KAAK,CAACO,aAA4B;AAAA,ICOxDC,oBAAqB;EAAA;EAAA;EAChC;IAAA;IAAA;IACE;IACA,MAAKC,cAAc,GAAG,MAAKA,cAAc,CAACC,IAAI,+BAAM;IACpD,MAAKC,uBAAuB,GAAG,MAAKA,uBAAuB,CAACD,IAAI,+BAAM;IACtE,MAAKE,8BAA8B,GAAG,MAAKA,8BAA8B,CAACF,IAAI,+BAAM;IACpF,MAAKG,mBAAmB,GAAG,MAAKA,mBAAmB,CAACH,IAAI,+BAAM;IAC9D,MAAKI,sBAAsB,GAAG,MAAKA,sBAAsB,CAACJ,IAAI,+BAAM;IAAC;;EACtE;IAAA;IAAA,OAED,wBACEK,QAAgB,EAChBC,YAAgC,EAChCC,SAAoB,EACpBC,IAAkB;MAElB,IAAMC,QAAQ,GAAa;QACzBC,EAAE,EAAEC,UAAU,CAAC,UAAU,CAAC;QAC1BN,QAAQ,EAARA,QAAQ;QACRO,cAAc,EAAEJ,IAAI;QACpBF,YAAY,EAAZA,YAAY;QACZO,KAAK,EAAE,IAAI;QACXC,QAAQ,EAAE;OACX;MAED,IAAMC,UAAU,GAAG;QACjBrB,KAAK,EAAEY,YAAY,CAACb,KAAK,CAACC,KAAK;QAC/BF,IAAI,EAAEc,YAAY,CAACb,KAAK,CAACD,IAAI,IAAIc,YAAY,CAACb,KAAK,CAACuB,IAAI;QACxDC,SAAS,EAAEX,YAAY,CAACb,KAAK,CAACwB;OAC/B;MAED,IAAMC,KAAK,GAAGC,SAAS,CAACZ,SAAS,CAACa,QAAQ,EAAEL,UAAU,CAAC;MAEvD,IAAIT,YAAY,CAACe,IAAI,KAAKC,QAAQ,EAAE;QAClCb,QAAQ,CAACK,QAAQ,GAAG,IAAI;QACxBL,QAAQ,CAACc,wBAAwB,GAAGjB,YAAY,CAACb,KAAK,CAAC8B,wBAAwB;;MAGjFd,QAAQ,CAACe,SAAS,GAAG;QACnBN,KAAK,EAALA,KAAK;QACLO,UAAU,EAAEnB,YAAY,CAACb;OAC1B;MAED,OAAOgB,QAAQ;;EAChB;IAAA;IAAA,OAED,6BAAoBJ,QAAgB,EAAEqB,eAAmC,EAAEnB,SAAoB;MAAA;MAC7F,IAAMoB,SAAS,GAAG,IAAI,CAACC,qBAAqB,CAACvB,QAAQ,CAAC;;MAGtDf,KAAK,CAACuC,QAAQ,CAACC,OAAO,CAACJ,eAAe,CAACjC,KAAK,CAACsC,QAAQ,EAAE,UAACC,KAAyB;QAC/E,IAAMvB,QAAQ,GAAGkB,SAAS,CAACM,IAAI,CAAC,UAACC,CAAC;UAChC,OAAOC,gBAAc,CAACH,KAAK,EAAEE,CAAC,CAACV,SAAS,CAACC,UAAU,CAACjC,IAAI,IAAI0C,CAAC,CAACV,SAAS,CAACC,UAAU,CAACT,IAAI,CAAC;SACzF,CAAC;QACF,IAAIP,QAAQ,EAAE;UACZA,QAAQ,CAACH,YAAY,GAAG0B,KAAK;;OAEhC,CAAC;MAEF,IAAMD,QAAQ,GAAGJ,SAAS,CAACS,GAAG,CAAC,UAAC3B,QAAQ;QACtC,IAAI4B,WAAW;QACf,IAAI5B,QAAQ,CAACK,QAAQ,IAAI,CAACL,QAAQ,CAACc,wBAAwB,EAAE;UAC3Dc,WAAW,GACT/C,oBAACgD,oBAAoB;YACnBC,GAAG,iBAAU9B,QAAQ,CAACC,EAAE,CAAE;YAC1BG,KAAK,EAAEJ,QAAQ,CAACI,KAAK;YACrB2B,UAAU,EAAE;cAAA,OAAM,MAAI,CAACC,MAAM,CAAChC,QAAQ,CAAC;YAAA;UAAA,GAEtCnB,KAAK,CAACoD,YAAY,CAACjC,QAAQ,CAACH,YAAY,EAAE;YACzCV,aAAa,EAAEa,QAAQ,CAACe,SAAS,CAACN;WACnC,CAAC,CAEL;SACF,MAAM;UACL,IAAMA,KAAK,GAAGiB,gBAAc,CAAC1B,QAAQ,CAACH,YAAY,EAAEC,SAAS,CAACa,QAAQ,CAAC;UACvEiB,WAAW,GACT/C,oBAACgD,oBAAoB;YACnBC,GAAG,iBAAU9B,QAAQ,CAACC,EAAE,CAAE;YAC1BG,KAAK,EAAEJ,QAAQ,CAACI,KAAK;YACrB2B,UAAU,EAAE;cAAA,OAAM,MAAI,CAACC,MAAM,CAAChC,QAAQ,CAAC;YAAA;UAAA,GAEtCnB,KAAK,CAACoD,YAAY,CAACjC,QAAQ,CAACH,YAAY,EAAE;YACzCV,aAAa,EAAEa,QAAQ,CAACe,SAAS,CAACN;WACnC,CAAC,CAEL;UAED,IAAI,CAACA,KAAK,IAAIT,QAAQ,CAACe,SAAS,CAACN,KAAK,EAAE;YACtCT,QAAQ,CAACe,SAAS,CAACN,KAAK,GAAGyB,SAAS;YACpClC,QAAQ,CAACI,KAAK,GAAG,KAAK;;;QAI1B,OAAOwB,WAAW;OACnB,CAAC;MACF,OAAON,QAAQ;;EAChB;IAAA;IAAA,OAED,iCAAwBxB,SAAoB,EAAEF,QAAiB,EAAEuC,WAAqB;MACpF,4BAA4B,IAAI,CAACC,kBAAkB,CAACtC,SAAS,CAACa,QAAQ,EAAEf,QAAQ,CAAC;QAAzEI,QAAQ,yBAARA,QAAQ;QAAES,KAAK,yBAALA,KAAK;MACvB,IAAM4B,iBAAiB,GAAGF,WAAW,KAAKD,SAAS,IAAIC,WAAW,KAAK,IAAI;MAC3E,IAAIE,iBAAiB,IAAIrC,QAAQ,IAAIS,KAAK,EAAE;QAC1CT,QAAQ,CAACe,SAAS,CAACN,KAAK,GAAGA,KAAK;;MAElC,OAAOT,QAAQ;;EAChB;IAAA;IAAA,OAED,wCAA+BF,SAAoB,EAAEF,QAAiB,EAAuB;MAAA,IAArB0C,cAAc,uEAAG,IAAI;MAC3F,6BAAqB,IAAI,CAACF,kBAAkB,CAC1CtC,SAAS,CAACyC,YAAa,EACvB3C,QAAQ,EACR,KAAK,EACL0C,cAAc,CACf;QALOtC,QAAQ,0BAARA,QAAQ;MAMhB,OAAOA,QAAQ;;EAChB;IAAA;IAAA,OAED,gCAAuBW,QAAgB,EAAEf,QAAiB;MACxD,6BAAqB,IAAI,CAACwC,kBAAkB,CAACzB,QAAQ,EAAEf,QAAQ,CAAC;QAAxDI,QAAQ,0BAARA,QAAQ;MAChB,OAAOA,QAAQ;;EAChB;IAAA;IAAA,OAEO,4BACNW,QAAgB,EAChBf,QAAiB,EACjB4C,UAAoB,EACpBF,cAAwB;MAExB,IAAItC,QAA8B;MAClC,IAAIS,KAA+C;MACnD,IAAIgC,SAAqB;MAEzB,IAAI7C,QAAQ,EAAE;QACZ6C,SAAS,GAAG,IAAI,CAACtB,qBAAqB,CAACvB,QAAQ,CAAC;QAChD6C,SAAS,CAACC,IAAI,CAACC,SAAS,CAAC;QACzB,IAAI,CAAC3C,QAAQ,EAAE;UACbyC,SAAS,CAACC,IAAI,CAACE,iBAAiB,CAAC;;OAEpC,MAAM;QACL,IAAM1B,SAAS,GAAG,IAAI,CAAC2B,eAAe,EAAE;QACxC3B,SAAS,CAACwB,IAAI,CAACC,SAAS,CAAC;QACzB,IAAI,CAAC3C,QAAQ,EAAE;UACbkB,SAAS,CAACwB,IAAI,CAACE,iBAAiB,CAAC;;;MAIrC,OAAO;QAAE5C,QAAQ,EAARA,QAAQ;QAAES,KAAK,EAALA;MAAK,CAAE;MAE1B,SAASkC,SAAS,CAAClB,CAAW;QAC5B,IAAIa,cAAc,IAAI,CAACb,CAAC,CAACpB,QAAQ,EAAE;UACjC,OAAO,KAAK;;QAEd,IAAMC,UAAU,GAAG;UACjBrB,KAAK,EAAEuD,UAAU,GAAG,IAAI,GAAGf,CAAC,CAACV,SAAS,CAACC,UAAU,CAAC/B,KAAK;UACvDF,IAAI,EAAE0C,CAAC,CAACV,SAAS,CAACC,UAAU,CAACjC,IAAI,IAAI0C,CAAC,CAACV,SAAS,CAACC,UAAU,CAACT,IAAI;UAChEC,SAAS,EAAEiB,CAAC,CAACV,SAAS,CAACC,UAAU,CAACR;SACnC;QACD,IAAMsC,OAAO,GAAGpC,SAAS,CAACC,QAAQ,EAAEL,UAAU,CAAC;QAC/C,IAAIwC,OAAO,EAAE;UACX9C,QAAQ,GAAGyB,CAAC;UACZhB,KAAK,GAAGqC,OAAO;UACf,OAAO,IAAI;;QAEb,OAAO,KAAK;;MAGd,SAASF,iBAAiB,CAACnB,CAAW;;QAEpC,IAAI,CAACA,CAAC,CAACV,SAAS,CAACC,UAAU,CAACjC,IAAI,IAAI,CAAC0C,CAAC,CAACV,SAAS,CAACC,UAAU,CAACT,IAAI,EAAE;UAChEE,KAAK,GAAG;YACN1B,IAAI,EAAE4B,QAAQ;YACdoC,GAAG,EAAEpC,QAAQ;YACbqC,OAAO,EAAE,IAAI;YACbC,MAAM,EAAE;WACT;UACDjD,QAAQ,GAAGyB,CAAC;UACZ,OAAO,IAAI;;QAEb,OAAO,KAAK;;;EAEf;EAAA;AAAA,EApLuCyB,UAAU;AAuLpD,SAASxB,gBAAc,CAACyB,IAAwB,EAAExC,QAAgB,EAAE6B,UAAoB;EACtF,IAAMlC,UAAU,GAAG;IACjBrB,KAAK,EAAEuD,UAAU,GAAG,IAAI,GAAGW,IAAI,CAACnE,KAAK,CAACC,KAAK;IAC3CF,IAAI,EAAEoE,IAAI,CAACnE,KAAK,CAACD,IAAI,IAAIoE,IAAI,CAACnE,KAAK,CAACuB,IAAI;IACxCC,SAAS,EAAE2C,IAAI,CAACnE,KAAK,CAACwB;GACvB;EACD,IAAMC,KAAK,GAAGC,SAAS,CAACC,QAAQ,EAAEL,UAAU,CAAC;EAE7C,OAAOG,KAAK;AACd;SC3MgB2C,gBAAgB,CAACC,eAAqC;EACpE,IAAIC,IAAY;EAChB,IAAI,OAAOD,eAAe,KAAK,QAAQ,EAAE;IACvCC,IAAI,GAAGD,eAAe;GACvB,MAAM;IACLC,IAAI,GAAGD,eAAe,CAACE,SAAS;;EAElC,IAAIC,QAAQ,EAAE;IACZ,IAAMC,KAAK,GAAGD,QAAQ,CAACE,aAAa,CAAC,KAAK,CAAC;IAC3CD,KAAK,CAACE,SAAS,GAAGL,IAAI;IACtBG,KAAK,CAACG,KAAK,CAACC,MAAM,GAAG,EAAE;;IAEvB,IAAMC,aAAa,GAAGL,KAAK,CAACM,oBAAoB,CAAC,iBAAiB,CAAC;IACnE,IAAID,aAAa,CAAC,CAAC,CAAC,EAAE;MACpBA,aAAa,CAAC,CAAC,CAAC,CAAC9B,MAAM,EAAE;;IAE3B,OAAOyB,KAAK,CAACO,UAAyB;;EAExC,OAAO9B,SAAS;AAClB;ACCA,IAAM+B,aAAa,GAAG,SAAhBA,aAAa,CAAIC,EAAe;EAAA,OACpC,CAACA,EAAE,CAACC,SAAS,CAACC,QAAQ,CAAC,oBAAoB,CAAC,IAAI,CAACF,EAAE,CAACC,SAAS,CAACC,QAAQ,CAAC,iBAAiB,CAAC;AAAA;AAAC,IAE/EC,YAAa;EAAA;EAAA;EAgBxB,sBAAYrF,KAAwB;IAAA;IAAA;IAClC,4BAAMA,KAAK;IATb,wBAAiB,GAAsB;MACrCsF,eAAe,EAAE,OAAKA,eAAe,CAAC/E,IAAI,gCAAM;MAChDgF,UAAU,EAAE;QAAA,OAAM,IAAI;MAAA;KACvB;IAGO,4BAAqB,GAAG,KAAK;IAInC,OAAKD,eAAe,GAAG,OAAKA,eAAe,CAAC/E,IAAI,gCAAM;IACtD,OAAKiF,cAAc,GAAG,OAAKA,cAAc,CAACjF,IAAI,gCAAM;IACpD,OAAKkF,oBAAoB,GAAG,OAAKA,oBAAoB,CAAClF,IAAI,gCAAM;IAChE,OAAKU,EAAE,GAAGC,UAAU,CAAC,cAAc,CAAC;IACpC,OAAKwE,SAAS,GAAGxC,SAAS;IAC1B,OAAKyC,cAAc,GAAG,KAAK;IAAC;;EAC7B;IAAA;IAAA,OAED,6BAAiB;MACf,IAAI,IAAI,CAACC,kBAAkB,EAAE;;;;;;;;;;QAU3BC,YAAY,CAAC,IAAI,CAACD,kBAAkB,CAAC;;MAEvC,IAAI,IAAI,CAACE,mBAAmB,EAAE;QAC5B,IAAI,CAACC,iBAAiB,CAAC,IAAI,CAACD,mBAAmB,CAAC;QAChD,IAAI,CAACL,oBAAoB,CAAC,IAAI,CAACzF,KAAK,CAACc,SAAS,CAAC;;;EAElD;IAAA;IAAA,OAED,4BAAmB4E,SAA4B;MAC7C,IAAQ/D,QAAQ,GAAK,IAAI,CAAC3B,KAAK,CAACc,SAAS,CAAjCa,QAAQ;MAChB,IAAkBqE,YAAY,GAAKN,SAAS,CAAC5E,SAAS,CAA9Ca,QAAQ;MAEhB,IAAIA,QAAQ,KAAKqE,YAAY,EAAE;QAC7B,IAAI,CAACN,SAAS,GAAGA,SAAS;QAC1B,IAAI,CAACD,oBAAoB,CAAC,IAAI,CAACzF,KAAK,CAACc,SAAS,CAAC;OAChD,MAAM,IAAI,IAAI,CAACmF,qBAAqB,EAAE;QACrC,IAAI,CAACR,oBAAoB,CAAC,IAAI,CAACzF,KAAK,CAACc,SAAS,CAAC;QAC/C,IAAI,CAACmF,qBAAqB,GAAG,KAAK;;;EAErC;IAAA;IAAA,OAED,gCAAoB;MAClB,IAAI,CAACL,kBAAkB,GAAG,IAAI,CAACM,OAAO,CAACC,WAAW,CAAC,IAAI,CAAClF,EAAE,CAAC;;EAC5D;IAAA;IAAA;MAAA,uFAED,iBAA2BH,SAAoB;QAAA;QAAA;UAAA;YAAA;cAAA,MACzC,CAAC,IAAI,CAACgF,mBAAmB,IAAI,CAAC,IAAI,CAACA,mBAAmB,CAACM,MAAM;gBAAA;gBAAA;cAAA;;;;;;;;cAQ/D,IAAI,CAACH,qBAAqB,GAAG,IAAI;cAAC;cAAA;YAAA;cAE9BI,gBAAgB,GAAG,IAAI,CAACH,OAAO,CAAC1F,uBAAuB,CAACM,SAAS,EAAE,IAAI,CAACG,EAAE,CAAC;cAC3EqF,eAAe,GAAG,IAAI,CAACJ,OAAO,CAACzF,8BAA8B,CAACK,SAAS,EAAE,IAAI,CAACG,EAAE,CAAC;cAErF,IAAI,CAACqF,eAAe,IAAIxF,SAAS,CAACyF,qBAAqB,EAAE;gBACvDD,eAAe,GAAG,IAAI,CAACJ,OAAO,CAACvF,sBAAsB,CACnDG,SAAS,CAACyF,qBAAqB,EAC/B,IAAI,CAACtF,EAAE,CACR;;;cAIH,IAAIqF,eAAe,EAAE;gBACnB,IAAIxF,SAAS,CAAC0F,WAAW,KAAK,SAAS,EAAE;kBACvCF,eAAe,CAAClF,KAAK,GAAG,KAAK;iBAC9B,MAAM,IAAI,EAAEN,SAAS,CAAC0F,WAAW,KAAK,MAAM,IAAI1F,SAAS,CAAC2F,cAAc,KAAK,SAAS,CAAC,EAAE;kBACxF,IAAI3F,SAAS,CAAC2F,cAAc,KAAK,MAAM,IAAIJ,gBAAgB,KAAKC,eAAe,EAAE;oBAC/EA,eAAe,CAAClF,KAAK,GAAG,KAAK;;iBAEhC,MAAM,UAAIN,SAAS,CAAC4F,YAAY,0CAAEC,OAAO,EAAE;kBAC1CL,eAAe,CAAClF,KAAK,GAAG,KAAK;;;cAI3BwF,aAAa,GAAGC,UAAU,OAC9B,IAAI,CAAC5E,eAAe,0CAAEjC,KAAK,CAACsC,QAAQ,EACpCxB,SAAS,CACY;cAEvB,IAAIuF,gBAAgB,EAAE;gBACpBA,gBAAgB,CAACxF,YAAY,GAAG+F,aAAa;eAC9C,MAAM,IAAIA,aAAa,EAAE;gBACxBP,gBAAgB,GAAG,IAAI,CAACH,OAAO,CAAC5F,cAAc,CAAC,IAAI,CAACW,EAAE,EAAE2F,aAAa,EAAE9F,SAAS,CAAC;gBACjF,IAAI,CAACoF,OAAO,CAACY,WAAW,CAACT,gBAAgB,CAAC;;cAC3C,MAEGA,gBAAgB,IAAIA,gBAAgB,CAAClF,cAAc;gBAAA;gBAAA;cAAA;cAAA,MAKjDkF,gBAAgB,KAAKC,eAAe;gBAAA;gBAAA;cAAA;cAAA,MASlCD,gBAAgB,CAACtE,SAAS,CAACN,KAAK,CAACsC,GAAG,KAAKjD,SAAS,CAACa,QAAQ;gBAAA;gBAAA;cAAA;cAAA;YAAA;;;;;;cAUjE,IAAI,CAAC2E,eAAe,IAAI,IAAI,CAACtG,KAAK,CAACc,SAAS,CAACyF,qBAAqB,EAAE;gBAClED,eAAe,GAAG,IAAI,CAACJ,OAAO,CAACvF,sBAAsB,CACnD,IAAI,CAACX,KAAK,CAACc,SAAS,CAACyF,qBAAqB,EAC1C,IAAI,CAACtF,EAAE,CACR;;;;;oBAODgE,aAAa,CAACoB,gBAAgB,CAAClF,cAAc,CAAC,IAC9CmF,eAAe,KAAKpD,SAAS,IAC7B,CAAC+B,aAAa,CAACqB,eAAe,CAACnF,cAAe,CAAC;gBAAA;gBAAA;cAAA;cAAA;YAAA;;;;;;;;;;;;;;;;cAoBjD,IAAI,CAACqE,cAAc,CAAC1E,SAAS,EAAEuF,gBAAgB,EAAEC,eAAe,CAAC;cAAC;cAAA;YAAA;cAC7D,IAAIA,eAAe,IAAI,CAACM,aAAa,IAAI,CAACP,gBAAgB,EAAE;;;;;gBAKjE,IAAIC,eAAe,CAACnF,cAAc,EAAE;kBAClCmF,eAAe,CAACnF,cAAc,CAACgE,SAAS,CAAC4B,GAAG,CAAC,iBAAiB,CAAC;kBAC/DT,eAAe,CAACnF,cAAc,CAAC6F,YAAY,CAAC,aAAa,EAAE,MAAM,CAAC;;;;YAGrE;cAED,IAAI,CAACC,WAAW,EAAE;YAAC;YAAA;cAAA;UAAA;QAAA;MAAA,CAEtB;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA,OAED,yBAAgBlG,IAAiB,EAAED,SAAoB;MACrD,IAAMoG,SAAS,GAAG,IAAI,CAAChB,OAAO,CAAC1F,uBAAuB,CAACM,SAAS,EAAE,IAAI,CAACG,EAAE,CAAC;MAC1E,IAAIiG,SAAS,EAAE;QACb,IAAMC,cAAc,GAAGD,SAAS,CAAC/F,cAAc;QAC/C+F,SAAS,CAAC/F,cAAc,GAAGJ,IAAI;QAC/BmG,SAAS,CAAC7F,QAAQ,GAAG,IAAI;;;;;;QAOzB,IAAI8F,cAAc,KAAKpG,IAAI,EAAE;UAC3B;;;MAGJ,IAAI,CAAC0E,oBAAoB,CAAC3E,SAAS,CAAC;;EACrC;IAAA;IAAA;MAAA,oFAED,kBAAwBsG,YAAwC;QAAA;QAAA;QAAA;UAAA;YAAA;cACxDC,QAAQ,GAAG,SAAXA,QAAQ,GAAG;gBACf,IAAMC,MAAM,GAAGC,SAAS,EAAE;gBAC1B,IAAMC,YAAY,GAAGF,MAAM,IAAIA,MAAM,CAACG,GAAG,CAAC,kBAAkB,EAAEL,YAAY,CAACM,IAAI,KAAK,KAAK,CAAC;gBAC1F,IAAI,CAACF,YAAY,EAAE;kBACjB,OAAO,KAAK;;gBAGd,IAAQ1G,SAAS,GAAK,MAAI,CAACd,KAAK,CAAxBc,SAAS;gBAEjB,IAAM6G,UAAU,GACd,MAAI,CAACjC,SAAS,IAAI,MAAI,CAACA,SAAS,CAAC5E,SAAS,CAACa,QAAQ,KAAKb,SAAS,CAAC8G,aAAa,GAC3E,MAAI,CAAClC,SAAS,CAAC5E,SAAS,GACvB;kBAAEa,QAAQ,EAAEb,SAAS,CAAC8G,aAAa,IAAI;gBAAE,CAAU;gBAC1D,IAAMvB,gBAAgB,GAAG,MAAI,CAACH,OAAO,CAAC1F,uBAAuB,CAACmH,UAAU,EAAE,MAAI,CAAC1G,EAAE,EAAE,KAAK,CAAC;gBAEzF,OACE,CAAC,CAACoF,gBAAgB;;;;;;;gBAOlBA,gBAAgB,CAACjF,KAAK;;;;;;;;;gBAStBiF,gBAAgB,CAACtE,SAAS,CAACN,KAAK,CAAC1B,IAAI,KAAKe,SAAS,CAACa,QAAQ;eAE/D;cAEKkG,OAAO;gBAAA,sEAAG;kBAAA;kBAAA;oBAAA;sBAAA;wBACN/G,SAAS,GAAK,MAAI,CAACd,KAAK,CAAxBc,SAAS;wBAEX6G,UAAU,GACd,MAAI,CAACjC,SAAS,IAAI,MAAI,CAACA,SAAS,CAAC5E,SAAS,CAACa,QAAQ,KAAKb,SAAS,CAAC8G,aAAa,GAC3E,MAAI,CAAClC,SAAS,CAAC5E,SAAS,GACvB;0BAAEa,QAAQ,EAAEb,SAAS,CAAC8G,aAAa,IAAI;wBAAE,CAAU;wBACpDvB,gBAAgB,GAAG,MAAI,CAACH,OAAO,CAAC1F,uBAAuB,CAACmH,UAAU,EAAE,MAAI,CAAC1G,EAAE,EAAE,KAAK,CAAC;wBACnFqF,eAAe,GAAG,MAAI,CAACJ,OAAO,CAAC1F,uBAAuB,CAACM,SAAS,EAAE,MAAI,CAACG,EAAE,EAAE,KAAK,CAAC;;;;;;8BAOnFoF,gBAAgB,IAAIC,eAAe;0BAAA;0BAAA;wBAAA;wBAAA;wBAAA,OAC/B,MAAI,CAACd,cAAc,CAAC1E,SAAS,EAAEuF,gBAAgB,EAAEC,eAAe,EAAE,MAAM,EAAE,IAAI,CAAC;sBAAA;wBAAA,kCAGhFwB,OAAO,CAACC,OAAO,EAAE;sBAAA;sBAAA;wBAAA;oBAAA;kBAAA;gBAAA,CACzB;gBAAA,gBApBKF,OAAO;kBAAA;gBAAA;cAAA;cAqBPG,KAAK,GAAG,SAARA,KAAK,CAAIC,cAAuB;gBACpC,IAAIA,cAAc,EAAE;kBAClB,MAAI,CAACtC,cAAc,GAAG,IAAI;kBAE1B,MAAI,CAACO,OAAO,CAACgC,MAAM,EAAE;iBACtB,MAAM;;;;;;kBAML,IAAQpH,SAAS,GAAK,MAAI,CAACd,KAAK,CAAxBc,SAAS;kBAEjB,IAAM6G,UAAU,GACd,MAAI,CAACjC,SAAS,IAAI,MAAI,CAACA,SAAS,CAAC5E,SAAS,CAACa,QAAQ,KAAKb,SAAS,CAAC8G,aAAa,GAC3E,MAAI,CAAClC,SAAS,CAAC5E,SAAS,GACvB;oBAAEa,QAAQ,EAAEb,SAAS,CAAC8G,aAAa,IAAI;kBAAE,CAAU;kBAC1D,IAAMvB,gBAAgB,GAAG,MAAI,CAACH,OAAO,CAAC1F,uBAAuB,CAACmH,UAAU,EAAE,MAAI,CAAC1G,EAAE,EAAE,KAAK,CAAC;kBACzF,IAAMqF,eAAe,GAAG,MAAI,CAACJ,OAAO,CAAC1F,uBAAuB,CAACM,SAAS,EAAE,MAAI,CAACG,EAAE,EAAE,KAAK,CAAC;;;;;;;;;;kBAWvF,IACEoF,gBAAgB,KAAKC,eAAe,IACpC,iBAAgB,aAAhBD,gBAAgB,uBAAhBA,gBAAgB,CAAElF,cAAc,MAAK+B,SAAS,EAC9C;oBACA,IAAQ/B,cAAc,GAAKkF,gBAAgB,CAAnClF,cAAc;oBACtBA,cAAc,CAAC6F,YAAY,CAAC,aAAa,EAAE,MAAM,CAAC;oBAClD7F,cAAc,CAACgE,SAAS,CAAC4B,GAAG,CAAC,iBAAiB,CAAC;;;eAGpD;cAEDK,YAAY,CAACe,YAAY,GAAG;gBAC1Bd,QAAQ,EAARA,QAAQ;gBACRQ,OAAO,EAAPA,OAAO;gBACPG,KAAK,EAALA;eACD;YAAC;YAAA;cAAA;UAAA;QAAA;MAAA,CACH;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA;MAAA,iFAED,kBACElH,SAAoB,EACpBuF,gBAA0B,EAC1BC,eAA0B,EAC1B8B,SAA8B;QAAA;QAAA;UAAA;UAAA;UAAA;UAAA;UAAA;UAAA;UAAA;QAAA;UAAA;YAAA;cAC9BC,iBAAiB,8DAAG,KAAK;cAEnBC,SAAS;gBAAA,uEAAG,kBAAOC,UAAuB,EAAEC,SAAuB;kBAAA;kBAAA;oBAAA;sBAAA;wBACjE7C,cAAc,GAAG,MAAI,CAACA,cAAc;;;;;;;;;;;;wBAa1C,IAAIA,cAAc,EAAE;;;;;;;;;;0BAUlB,MAAI,CAACA,cAAc,GAAG,KAAK;yBAC5B,MAAM;0BACL4C,UAAU,CAACpD,SAAS,CAAC4B,GAAG,CAAC,UAAU,CAAC;0BACpCwB,UAAU,CAACpD,SAAS,CAAC4B,GAAG,CAAC,oBAAoB,CAAC;;wBAC/C;wBAAA,OAEKK,YAAY,CAAChB,MAAM,CAACmC,UAAU,EAAEC,SAAS,EAAE;0BAC/CC,QAAQ,EAAE,IAAI;0BACdC,QAAQ,EAAE/C,cAAc,IAAIgD,cAAc,KAAKzF,SAAS,GAAG,CAAC,GAAGA,SAAS;0BACxEkF,SAAS,EAAEO,cAAc;0BACzBC,UAAU,EAAE,CAAC,CAAC9H,SAAS,CAAC8G,aAAa;0BACrCS,iBAAiB,EAAjBA,iBAAiB;0BACjBQ,gBAAgB,EAAE/H,SAAS,CAACgI;yBAC7B,CAAC;sBAAA;sBAAA;wBAAA;oBAAA;kBAAA;gBAAA,CACH;gBAAA,gBAtCKR,SAAS;kBAAA;gBAAA;cAAA;cAwCTlB,YAAY,GAAG,IAAI,CAACtB,mBAAoB;cAExCiD,0BAA0B,GAC9BjI,SAAS,CAAC2F,cAAc,KAAK,MAAM,IAAI3F,SAAS,CAAC2F,cAAc,KAAK,MAAM,GACtEvD,SAAS,GACTpC,SAAS,CAAC2F,cAAc;cACxBkC,cAAc,GAAGP,SAAS,aAATA,SAAS,cAATA,SAAS,GAAIW,0BAA0B;cAAA,MAE1D1C,gBAAgB,IAAIA,gBAAgB,CAAClF,cAAc,IAAI,IAAI,CAAC2E,mBAAmB;gBAAA;gBAAA;cAAA;cAAA,MAE/EQ,eAAe,IACfA,eAAe,CAACnF,cAAc,IAC9BkF,gBAAgB,KAAKC,eAAe;gBAAA;gBAAA;cAAA;;;cAK9B7E,KAAK,GAAGiB,cAAc,CAAC4D,eAAe,CAACzF,YAAY,EAAEC,SAAS,CAACa,QAAQ,EAAE,IAAI,CAAC;cAAA,KAChFF,KAAK;gBAAA;gBAAA;cAAA;cACDuH,iBAAiB,GAAG5E,gBAAgB,CAACkC,eAAe,CAACnF,cAAc,CAACoD,SAAS,CAAC;cAAA,KAChFyE,iBAAiB;gBAAA;gBAAA;cAAA;cACnB,IAAI,CAAClD,mBAAmB,CAACmD,WAAW,CAACD,iBAAiB,CAAC;cAAC;cAAA,OAClDV,SAAS,CAACjC,gBAAgB,CAAClF,cAAc,EAAE6H,iBAAiB,CAAC;YAAA;cACnE,IAAI,CAAClD,mBAAmB,CAACoD,WAAW,CAACF,iBAAiB,CAAC;YAAC;cAAA;cAAA;YAAA;cAAA;cAAA,OAGpDV,SAAS,CAACjC,gBAAgB,CAAClF,cAAc,EAAE+B,SAAS,CAAC;YAAA;cAAA;cAAA;YAAA;cAAA;cAAA,OAGvDoF,SAAS,CAACjC,gBAAgB,CAAClF,cAAc,EAAEmF,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEnF,cAAc,CAAC;YAAA;cACjF,IAAImF,eAAe,IAAIA,eAAe,CAACnF,cAAc,IAAI,CAACkH,iBAAiB,EAAE;gBAC3E/B,eAAe,CAACnF,cAAc,CAACgE,SAAS,CAAC4B,GAAG,CAAC,iBAAiB,CAAC;gBAC/DT,eAAe,CAACnF,cAAc,CAAC6F,YAAY,CAAC,aAAa,EAAE,MAAM,CAAC;;YACnE;YAAA;cAAA;UAAA;QAAA;MAAA,CAGN;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA,OAED,kBAAM;MAAA;MACJ,IAAQ1E,QAAQ,GAAK,IAAI,CAACtC,KAAK,CAAvBsC,QAAQ;MAChB,IAAML,eAAe,GAAGpC,KAAK,CAACuC,QAAQ,CAAC+G,IAAI,CAAC7G,QAAQ,CAAuB;MAC3E,IAAI,CAACL,eAAe,GAAGA,eAAe;MAEtC,IAAMmH,UAAU,GAAG,IAAI,CAAClD,OAAO,CAACxF,mBAAmB,CACjD,IAAI,CAACO,EAAE,EACP,IAAI,CAACgB,eAAe,EACpB,IAAI,CAACjC,KAAK,CAACc,SAAS,EACpB;QACE,MAAI,CAACmG,WAAW,EAAE;OACnB,CACF;MAED,OACEpH,oBAACwJ,YAAY,CAACC,QAAQ;QAACC,KAAK,EAAE,IAAI,CAACC;MAAiB,GACjD3J,KAAK,CAACoD,YAAY,CACjBhB,eAAsB,EACtB;QACEwH,GAAG,EAAE,aAACtF,IAAgC;UACpC,IAAIlC,eAAe,CAACjC,KAAK,CAAC0J,MAAM,EAAE;YAChCzH,eAAe,CAACjC,KAAK,CAAC0J,MAAM,CAACvF,IAAI,CAAC;;UAEpC,IAAIlC,eAAe,CAACjC,KAAK,CAAC2J,YAAY,EAAE;YACtC1H,eAAe,CAACjC,KAAK,CAAC2J,YAAY,CAACC,OAAO,GAAGzF,IAAI;;UAEnD,MAAI,CAAC2B,mBAAmB,GAAG3B,IAAI;UAC/B,IAAQsF,GAAG,GAAKxH,eAAsB,CAA9BwH,GAAG;UACX,IAAI,OAAOA,GAAG,KAAK,UAAU,EAAE;YAC7BA,GAAG,CAACtF,IAAI,CAAC;;;OAGd,EACDiF,UAAU,CACX,CACqB;;EAE3B;IAAA;IAAA,KAED,eAAsB;MACpB,OAAOS,mBAAmB;;EAC3B;EAAA;AAAA,EAhb+BhK,KAAK,CAACO,aAAmD;AAqb3F,SAASyG,UAAU,CAAC1C,IAAqB,EAAErD,SAAoB;EAC7D,IAAIgJ,WAA4B;EAChCjK,KAAK,CAACuC,QAAQ,CAACC,OAAO,CAAC8B,IAA0B,EAAE,UAAC5B,KAAyB;IAC3E,IAAMjB,UAAU,GAAG;MACjBrB,KAAK,EAAEsC,KAAK,CAACvC,KAAK,CAACC,KAAK;MACxBF,IAAI,EAAEwC,KAAK,CAACvC,KAAK,CAACD,IAAI,IAAIwC,KAAK,CAACvC,KAAK,CAACuB,IAAI;MAC1CC,SAAS,EAAEe,KAAK,CAACvC,KAAK,CAACwB;KACxB;IACD,IAAMC,KAAK,GAAGC,WAAS,CAACZ,SAAS,CAACa,QAAQ,EAAEL,UAAU,CAAC;IACvD,IAAIG,KAAK,EAAE;MACTqI,WAAW,GAAGvH,KAAK;;GAEtB,CAAC;EAEF,IAAIuH,WAAW,EAAE;IACf,OAAOA,WAAW;;;;EAIpBjK,KAAK,CAACuC,QAAQ,CAACC,OAAO,CAAC8B,IAA0B,EAAE,UAAC5B,KAAyB;IAC3E,IAAI,EAAEA,KAAK,CAACvC,KAAK,CAACD,IAAI,IAAIwC,KAAK,CAACvC,KAAK,CAACuB,IAAI,CAAC,EAAE;MAC3CuI,WAAW,GAAGvH,KAAK;;GAEtB,CAAC;EAEF,OAAOuH,WAAW;AACpB;AAEA,SAASpH,cAAc,CAACyB,IAAwB,EAAExC,QAAgB,EAAE6B,UAAoB;EACtF,IAAMlC,UAAU,GAAG;IACjBrB,KAAK,EAAEuD,UAAU,GAAG,IAAI,GAAGW,IAAI,CAACnE,KAAK,CAACC,KAAK;IAC3CF,IAAI,EAAEoE,IAAI,CAACnE,KAAK,CAACD,IAAI,IAAIoE,IAAI,CAACnE,KAAK,CAACuB,IAAI;IACxCC,SAAS,EAAE2C,IAAI,CAACnE,KAAK,CAACwB;GACvB;EACD,IAAMC,KAAK,GAAGC,WAAS,CAACC,QAAQ,EAAEL,UAAU,CAAC;EAE7C,OAAOG,KAAK;AACd;AAAA,IC7cMsI,cAAe;EAAA;EAAA;EAmBnB,wBAAY/J,KAAoB;IAAA;IAAA;IAC9B,4BAAMA,KAAK;IAlBb,sCAA+B,GAAmD,EAAE;IAEpF,sBAAe,GAAG,IAAIgK,eAAe,EAAE;IACvC,gBAAS,GAAG,IAAI3J,oBAAoB,EAAE;IACtC,8BAAuB,GAA6B;MAClD4J,SAAS,EAAE;QAAA,OAAM,OAAKC,eAAe,CAACD,SAAS,EAAE;MAAA;MACjD9D,WAAW,EAAE,OAAK1C,SAAS,CAAC0G,KAAK;MACjCxJ,sBAAsB,EAAE,OAAK8C,SAAS,CAAC9C,sBAAsB;MAC7DD,mBAAmB,EAAE,OAAK+C,SAAS,CAAC/C,mBAAmB;MACvDwH,MAAM,EAAE;QAAA,OAAM,OAAKkC,kBAAkB,EAAE;MAAA;MACvC9J,cAAc,EAAE,OAAKmD,SAAS,CAACnD,cAAc;MAC7CE,uBAAuB,EAAE,OAAKiD,SAAS,CAACjD,uBAAuB;MAC/DC,8BAA8B,EAAE,OAAKgD,SAAS,CAAChD,8BAA8B;MAC7EqG,WAAW,EAAE,OAAKrD,SAAS,CAACsD,GAAG;MAC/BsD,eAAe,EAAE,OAAK5G,SAAS,CAACT;KACjC;IAKC,IAAMlC,SAAS,GAAG;MAChBG,EAAE,EAAEC,UAAU,CAAC,WAAW,CAAC;MAC3BS,QAAQ,EAAE,OAAK3B,KAAK,CAACsK,QAAQ,CAAC3I,QAAQ;MACtC4I,MAAM,EAAE,OAAKvK,KAAK,CAACsK,QAAQ,CAACC;KAC7B;IAED,OAAKL,eAAe,CAACnD,GAAG,CAACjG,SAAS,CAAC;IACnC,OAAK0J,eAAe,GAAG,OAAKA,eAAe,CAACjK,IAAI,gCAAM;IACtD,OAAKkK,cAAc,GAAG,OAAKA,cAAc,CAAClK,IAAI,gCAAM;IACpD,OAAKmK,gBAAgB,GAAG,OAAKA,gBAAgB,CAACnK,IAAI,gCAAM;IACxD,OAAKoK,cAAc,GAAG,OAAKA,cAAc,CAACpK,IAAI,gCAAM;IACpD,OAAK6J,kBAAkB,GAAG,OAAKA,kBAAkB,CAAC7J,IAAI,gCAAM;IAC5D,OAAKP,KAAK,CAAC4K,uBAAuB,CAAC,OAAKC,mBAAmB,CAACtK,IAAI,gCAAM,CAAC;IACvE,OAAKuK,mBAAmB,GAAG,OAAKA,mBAAmB,CAACvK,IAAI,gCAAM;IAE9D,OAAKwK,KAAK,GAAG;MACXjK,SAAS,EAATA;KACD;IAAC;;EACH;IAAA;IAAA,OAED,yBAAgBkK,GAAW,EAAEjL,IAAa,EAAE2G,YAAkB;MAC5D,IAAI,CAAC3G,IAAI,EAAE;QAAE;;MAEb,IAAMe,SAAS,GAAG,IAAI,CAACoJ,eAAe,CAACe,yBAAyB,CAACD,GAAG,CAAC;MACrE,kBAA2BjL,IAAI,CAACmL,KAAK,CAAC,GAAG,CAAC;QAAA;QAAnCvJ,QAAQ;QAAE4I,MAAM;MACvB,IAAIzJ,SAAS,EAAE;QACb,IAAI,CAACqK,mBAAmB,mCAAQrK,SAAS;UAAE0F,WAAW,EAAE,MAAM;UAAEC,cAAc,EAAE;QAAM,EAAE;QACxF,IAAI3F,SAAS,CAACa,QAAQ,KAAKA,QAAQ,EAAE;UACnC,IAAI,CAACwJ,mBAAmB,CAACzE,YAAY,GAAGA,YAAY;UACpD,IAAI,CAAC1G,KAAK,CAACoL,OAAO,CAACC,IAAI,CAACvK,SAAS,CAACa,QAAQ,IAAIb,SAAS,CAACyJ,MAAM,IAAI,EAAE,CAAC,CAAC;SACvE,MAAM;UACL,IAAI,CAACY,mBAAmB,CAACxJ,QAAQ,GAAGA,QAAQ;UAC5C,IAAI,CAACwJ,mBAAmB,CAACZ,MAAM,GAAGA,MAAM,GAAG,GAAG,GAAGA,MAAM,GAAGrH,SAAS;UACnE,IAAI,CAACiI,mBAAmB,CAACzE,YAAY,GAAGA,YAAY;UACpD,IAAI,CAAC1G,KAAK,CAACoL,OAAO,CAACC,IAAI,CAAC1J,QAAQ,IAAI4I,MAAM,GAAG,GAAG,GAAGA,MAAM,GAAG,EAAE,CAAC,CAAC;;OAEnE,MAAM;QACL,IAAI,CAACI,cAAc,CAAChJ,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAEuB,SAAS,EAAEwD,YAAY,EAAEsE,GAAG,CAAC;;;EAE9E;IAAA;IAAA,OAED,6BAAoBV,QAAwC,EAAEgB,MAAqB;;MACjF,IAAIC,mBAA8B;MAClC,IAAI,IAAI,CAACJ,mBAAmB,EAAE;QAC5B,IAAI,IAAI,CAACA,mBAAmB,CAAC3E,WAAW,KAAK,SAAS,EAAE;UACtD+E,mBAAmB,GAAG,IAAI,CAACrB,eAAe,CAACsB,QAAQ,EAAE;SACtD,MAAM;UACLD,mBAAmB,GAAG,IAAI,CAACrB,eAAe,CAACN,OAAO,EAAE;;OAEvD,MAAM;QACL2B,mBAAmB,GAAG,IAAI,CAACrB,eAAe,CAACN,OAAO,EAAE;;MAGtD,IAAM6B,UAAU,GAAGF,mBAAmB,CAAC5J,QAAQ,GAAG4J,mBAAmB,CAAChB,MAAM;MAC5E,IAAIkB,UAAU,KAAKnB,QAAQ,CAAC3I,QAAQ,EAAE;QACpC,IAAI,CAAC,IAAI,CAACwJ,mBAAmB,EAAE;UAC7B,IAAIG,MAAM,KAAK,SAAS,EAAE;YACxB,IAAI,CAACH,mBAAmB,GAAG;cACzB3E,WAAW,EAAE,SAAS;cACtBC,cAAc,EAAE,MAAM;cACtBuE,GAAG,EAAE,IAAI,CAACU;aACX;;UAEH,IAAIJ,MAAM,KAAK,KAAK,EAAE;YACpB,IAAMK,YAAY,GAAG,IAAI,CAACzB,eAAe,CAACN,OAAO,EAAE;YACnD,IAAI+B,YAAY,IAAIA,YAAY,CAAC/D,aAAa,EAAE;cAC9C,IAAMgE,QAAQ,GAAG,IAAI,CAAC1B,eAAe,CAAC2B,gBAAgB,CAACF,YAAY,CAAC;cACpE,IAAI,CAACR,mBAAmB,mCAAQS,QAAQ;gBAAEpF,WAAW,EAAE,KAAK;gBAAEC,cAAc,EAAE;cAAM,EAAE;aACvF,MAAM;cACL,IAAI,CAAC0E,mBAAmB,GAAG;gBACzB3E,WAAW,EAAE,KAAK;gBAClBC,cAAc,EAAE,MAAM;gBACtBuE,GAAG,EAAE,IAAI,CAACU;eACX;;;UAGL,IAAI,CAAC,IAAI,CAACP,mBAAmB,EAAE;YAC7B,IAAI,CAACA,mBAAmB,GAAG;cACzB3E,WAAW,EAAE,MAAM;cACnBC,cAAc,EAAE,eAAQ,CAACsE,KAAK,0CAAE3C,SAAS,KAAI,SAAS;cACtD1B,YAAY,QAAE4D,QAAQ,CAACS,KAAK,0CAAEe,aAAa;cAC3Cd,GAAG,EAAE,IAAI,CAACU;aACX;;;QAIL,IAAI5K,SAAoB;QAExB,UAAI,IAAI,CAACqK,mBAAmB,0CAAElK,EAAE,EAAE;UAChCH,SAAS,mCACH,IAAI,CAACqK,mBAAiC;YAC1C5H,YAAY,EAAEgI,mBAAmB,CAAC5J;UAAQ,EAC3C;UACD,IAAI,CAACuI,eAAe,CAACnD,GAAG,CAACjG,SAAS,CAAC;SACpC,MAAM;UACL,IAAMiL,QAAQ,GACZ,IAAI,CAACZ,mBAAmB,CAAC3E,WAAW,KAAK,MAAM,IAC/C,IAAI,CAAC2E,mBAAmB,CAAC1E,cAAc,KAAK,SAAS;UACvD3F,SAAS;YACPG,EAAE,EAAEC,UAAU,CAAC,WAAW;UAAC,GACxB,IAAI,CAACiK,mBAAmB;YAC3B5H,YAAY,EAAEgI,mBAAmB,CAAC5J,QAAQ;YAC1CA,QAAQ,EAAE2I,QAAQ,CAAC3I,QAAQ;YAC3B4I,MAAM,EAAED,QAAQ,CAACC,MAAM;YACvBtG,MAAM,EAAE,IAAI,CAACjE,KAAK,CAACyB,KAAK,CAACwC,MAAM;YAC/BsC,qBAAqB,EAAEgF,mBAAmB,CAAChI;UAAY,EACxD;UACD,IAAIwI,QAAQ,EAAE;YACZjL,SAAS,CAACkK,GAAG,GAAGO,mBAAmB,CAACP,GAAG;YACvClK,SAAS,CAAC8G,aAAa,GAAG2D,mBAAmB,CAAC5J,QAAQ;WACvD,MAAM,IAAIb,SAAS,CAAC0F,WAAW,KAAK,KAAK,EAAE;YAC1C,IAAMwF,CAAC,GAAG,IAAI,CAAC9B,eAAe,CAAC2B,gBAAgB,CAAC/K,SAAS,CAAC;YAC1DA,SAAS,CAAC8G,aAAa,GAAGoE,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEpE,aAAa;WAC3C,MAAM,IAAI9G,SAAS,CAAC0F,WAAW,KAAK,MAAM,IAAI1F,SAAS,CAACkK,GAAG,KAAKO,mBAAmB,CAACP,GAAG,EAAE;;YAExF,IAAMiB,SAAS,GAAG,IAAI,CAAC/B,eAAe,CAACe,yBAAyB,CAACnK,SAAS,CAACkK,GAAG,CAAC;YAC/ElK,SAAS,CAAC8G,aAAa,GAAGqE,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAErE,aAAa;WACnD,MAAM,IAAI9G,SAAS,CAAC0F,WAAW,KAAK,SAAS,EAAE;;YAE9C,IAAM0F,gBAAgB,GAAG,IAAI,CAAChC,eAAe,CAACN,OAAO,EAAE;;;;;;YAOvD,IAAMuC,eAAe,GAAGD,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAEtE,aAAa;YACvD,IAAMA,aAAa,GAAIuE,eAAe,KAAKjJ,SAAS,IAAIiJ,eAAe,KAAKrL,SAAS,CAACa,QAAQ,GAAIwK,eAAe,GAAGrL,SAAS,CAAC8G,aAAa;YAE3I9G,SAAS,CAACyC,YAAY,GAAG,iBAAgB,aAAhB2I,gBAAgB,uBAAhBA,gBAAgB,CAAEvK,QAAQ,KAAIb,SAAS,CAACyC,YAAY;YAC7EzC,SAAS,CAACyF,qBAAqB,GAAG2F,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAE3I,YAAY;YAChEzC,SAAS,CAAC8G,aAAa,GAAGA,aAAa;YACvC9G,SAAS,CAAC2F,cAAc,GAAG,iBAAgB,aAAhByF,gBAAgB,uBAAhBA,gBAAgB,CAAEzF,cAAc,KAAI3F,SAAS,CAAC2F,cAAc;YACvF3F,SAAS,CAACgI,cAAc,GAAG,iBAAgB,aAAhBoD,gBAAgB,uBAAhBA,gBAAgB,CAAEpD,cAAc,KAAIhI,SAAS,CAACgI,cAAc;;UAGzF,IAAI,CAACoB,eAAe,CAACnD,GAAG,CAACjG,SAAS,CAAC;;QAGrC,IAAI,CAACsL,QAAQ,CAAC;UACZtL,SAAS,EAATA;SACD,CAAC;;MAGJ,IAAI,CAACqK,mBAAmB,GAAGjI,SAAS;;;;;;;;;;WAStC,4BAAgB;MACd,IAAMkI,OAAO,GAAG,IAAI,CAACpL,KAAK,CAACoL,OAAc;MACzC,IAAMlD,MAAM,GAAGkD,OAAO,CAAClD,MAAM,IAAIkD,OAAO,CAACiB,IAAI;MAC7CnE,MAAM,EAAE;;EACT;IAAA;IAAA,OAED,wBACEnI,IAAY,EACZyG,WAAwB,EACxBC,cAAgC,EAChCqC,cAAiC,EACjCpC,YAAkB,EAClBsE,GAAY;MAEZ,IAAI,CAACG,mBAAmB,GAAGmB,MAAM,CAACC,MAAM,CAAC,IAAI,CAACpB,mBAAmB,IAAI,EAAE,EAAE;QACvE3E,WAAW,EAAXA,WAAW;QACXC,cAAc,EAAdA,cAAc;QACdC,YAAY,EAAZA,YAAY;QACZoC,cAAc,EAAdA,cAAc;QACdkC,GAAG,EAAHA;OACD,CAAC;MAEF,IAAIxE,WAAW,KAAK,MAAM,EAAE;QAC1B,IAAI,CAACxG,KAAK,CAACoL,OAAO,CAACC,IAAI,CAACtL,IAAI,CAAC;OAC9B,MAAM;QACL,IAAI,CAACC,KAAK,CAACoL,OAAO,CAACoB,OAAO,CAACzM,IAAI,CAAC;;;EAEnC;IAAA;IAAA,OAED,8BAA2F;MAAA,IAAxE0M,kFAAkC,GAAG;MAAA,IAAE3D,cAAiC;MACzF,IAAMxB,MAAM,GAAGC,SAAS,EAAE;MAC1BkF,WAAW,GAAGA,WAAW,GAAGA,WAAW,GAAGnF,MAAM,IAAIA,MAAM,CAACG,GAAG,CAAC,uBAA8B,CAAC;MAC9F,IAAM3G,SAAS,GAAG,IAAI,CAACoJ,eAAe,CAACN,OAAO,EAAE;MAChD,IAAI9I,SAAS,IAAIA,SAAS,CAAC8G,aAAa,EAAE;QACxC,IAAMgE,QAAQ,GAAG,IAAI,CAAC1B,eAAe,CAAC2B,gBAAgB,CAAC/K,SAAS,CAAC;QACjE,IAAI8K,QAAQ,EAAE;UACZ,IAAI,CAACT,mBAAmB,mCACnBS,QAAQ;YACXpF,WAAW,EAAE,KAAK;YAClBC,cAAc,EAAE,MAAM;YACtBqC,cAAc,EAAEA,cAAc,IAAIhI,SAAS,CAACgI;UAAc,EAC3D;UACD,IACEhI,SAAS,CAACyC,YAAY,KAAKzC,SAAS,CAAC8G,aAAa;;;;;;;UAQhDgE,QAAQ,CAACjK,QAAQ,KAAKb,SAAS,CAAC8G,aAAa,IAC7C9G,SAAS,CAACkK,GAAG,KAAK,EAAE,IAAIY,QAAQ,CAACZ,GAAG,KAAK,EAC1C,EACD;;;;;;;YAOA,IAAMI,OAAO,GAAG,IAAI,CAACpL,KAAK,CAACoL,OAAc;YACzC,IAAMlD,MAAM,GAAGkD,OAAO,CAAClD,MAAM,IAAIkD,OAAO,CAACiB,IAAI;YAC7CnE,MAAM,EAAE;WACT,MAAM;YACL,IAAI,CAACyC,cAAc,CAACiB,QAAQ,CAACjK,QAAQ,IAAIiK,QAAQ,CAACrB,MAAM,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC;;SAElF,MAAM;UACL,IAAI,CAACI,cAAc,CAAC8B,WAAqB,EAAE,KAAK,EAAE,MAAM,CAAC;;OAE5D,MAAM;QACL,IAAI,CAAC9B,cAAc,CAAC8B,WAAqB,EAAE,KAAK,EAAE,MAAM,CAAC;;;EAE5D;IAAA;IAAA,OAED,wBAAezB,GAAW,EAAE0B,YAAoB,EAAEC,oBAAyB;MACzE,IAAM7L,SAAS,GAAG,IAAI,CAACoJ,eAAe,CAAC0C,uBAAuB,CAAC5B,GAAG,CAAC;MACnE,IAAIlK,SAAS,EAAE;QACb,IAAM+L,YAAY,qBAAQ/L,SAAS,CAAE;QACrC+L,YAAY,CAAClL,QAAQ,GAAG+K,YAAY;QACpCG,YAAY,CAACnG,YAAY,GAAGiG,oBAAoB;QAChD,IAAI,CAACxB,mBAAmB,mCAAQ0B,YAAY;UAAErG,WAAW,EAAE,KAAK;UAAEC,cAAc,EAAE;QAAM,EAAE;QAC1F,IAAI,CAACzG,KAAK,CAACoL,OAAO,CAACC,IAAI,CAACwB,YAAY,CAAClL,QAAQ,IAAIkL,YAAY,CAACtC,MAAM,IAAI,EAAE,CAAC,CAAC;;;EAE/E;IAAA;IAAA,OAED,6BAAoBS,GAAW;MAC7B,IAAI,CAACU,UAAU,GAAGV,GAAG;MACrB,IAAM8B,EAAE,qBAAQ,IAAI,CAAC5C,eAAe,CAACN,OAAO,EAAE,CAAE;MAChD,IAAIkD,EAAE,CAAC9B,GAAG,KAAKA,GAAG,EAAE;QAClB8B,EAAE,CAAC9B,GAAG,GAAGA,GAAG;QACZ,IAAI,CAACd,eAAe,CAAC6C,MAAM,CAACD,EAAE,CAAC;;;EAElC;IAAA;IAAA,OAED,kBAAM;MACJ,OACEjN,oBAACgK,mBAAmB,CAACP,QAAQ;QAACC,KAAK,EAAE,IAAI,CAACyD;MAAuB,GAC/DnN,oBAACoN,UAAU;QACT5L,QAAQ,EAAEzB,aAAa;QACvBsN,WAAW,EAAE,EAAE;QACfC,YAAY,EAAE9H,YAAY;QAC1BvE,SAAS,EAAE,IAAI,CAACiK,KAAK,CAACjK,SAAU;QAChCsM,YAAY,EAAE,IAAI,CAAC1C,gBAAgB;QACnC2C,cAAc,EAAE,IAAI,CAACjD,kBAAkB;QACvCkD,UAAU,EAAE,IAAI,CAAC3C,cAAc;QAC/B4C,eAAe,EAAE,IAAI,CAACzC,mBAAmB;QACzC0C,WAAW,EAAE,IAAI,CAAChD,eAAe;QACjCiD,UAAU,EAAE,IAAI,CAAChD,cAAc;QAC/BP,eAAe,EAAE,IAAI,CAACA;MAAe,GAEpC,IAAI,CAAClK,KAAK,CAACsC,QAAQ,CACT,CACgB;;EAElC;EAAA;AAAA,EAlS0BzC,KAAK,CAACO,aAA2C;AAqSvE,IAAMsN,SAAS,GAAGC,UAAU,CAAC5D,cAAc,CAAC;AACnD2D,SAAS,CAACE,WAAW,GAAG,WAAW;AAAA,IC3TtBC,cAAe;EAAA;EAAA;EAI1B,wBAAY7N,KAA0B;IAAA;IAAA;IACpC,4BAAMA,KAAK;IACL,IAAEoL,OAAO,GAAcpL,KAAK,CAA1BoL,OAAO;MAAK0C,IAAI,UAAK9N,KAAK,EAA5B,WAAoB,CAAQ;IAClC,OAAKoL,OAAO,GAAGA,OAAO,IAAI2C,oBAAa,CAACD,IAAI,CAAC;IAC7C,OAAK1C,OAAO,CAAC4C,MAAM,CAAC,OAAKnD,mBAAmB,CAACtK,IAAI,gCAAM,CAAC;IACxD,OAAKqK,uBAAuB,GAAG,OAAKA,uBAAuB,CAACrK,IAAI,gCAAM;IAAC;;;;;;;;;;;;WAWzE,6BAAoB+J,QAAyB,EAAEgB,MAAqB;MACnE,IAAM2C,aAAa,GAAI3D,QAAgB,CAACA,QAAQ,IAAIA,QAAQ;MAC5D,IAAM4D,WAAW,GAAI5D,QAAgB,CAACgB,MAAM,IAAIA,MAAM;MACtD,IAAI,IAAI,CAAC6C,oBAAoB,EAAE;QAC7B,IAAI,CAACA,oBAAoB,CAACF,aAAa,EAAEC,WAAW,CAAC;;;EAExD;IAAA;IAAA,OAEA,iCAAwBE,EAA8D;MACpF,IAAI,CAACD,oBAAoB,GAAGC,EAAE;;EAC/B;IAAA;IAAA,OAED,kBAAM;MACE,SAAyB,IAAI,CAACpO,KAAK;QAAjCsC,QAAQ,KAAyB,CAAjCA,QAAQ;QAAKtC,KAAK,cAApB,YAAsB,CAAa;MACzC,OACEH,oBAACwO,MAAM;QAACjD,OAAO,EAAE,IAAI,CAACA;MAAO,GAAMpL,KAAK,GACtCH,oBAAC6N,SAAS;QAAC9C,uBAAuB,EAAE,IAAI,CAACA;MAAuB,GAAGtI,QAAQ,CAAa,CACjF;;EAEZ;EAAA;AAAA,EAvCiCzC,KAAK,CAACyO,SAA8B;AAAA,ICL3DC,oBAAqB;EAAA;EAAA;EAIhC,8BAAYvO,KAAgC;IAAA;IAAA;IAC1C,4BAAMA,KAAK;IACX,OAAKoL,OAAO,GAAGpL,KAAK,CAACoL,OAAO;IAC5B,OAAKA,OAAO,CAAC4C,MAAM,CAAC,OAAKnD,mBAAmB,CAACtK,IAAI,gCAAM,CAAC;IACxD,OAAKqK,uBAAuB,GAAG,OAAKA,uBAAuB,CAACrK,IAAI,gCAAM;IAAC;;;;;;;;;;;;WAWzE,6BAAoB+J,QAAyB,EAAEgB,MAAqB;MAClE,IAAM2C,aAAa,GAAI3D,QAAgB,CAACA,QAAQ,IAAIA,QAAQ;MAC5D,IAAM4D,WAAW,GAAI5D,QAAgB,CAACgB,MAAM,IAAIA,MAAM;MACtD,IAAI,IAAI,CAAC6C,oBAAoB,EAAE;QAC7B,IAAI,CAACA,oBAAoB,CAACF,aAAa,EAAEC,WAAW,CAAC;;;EAExD;IAAA;IAAA,OAED,iCAAwBE,EAA8D;MACpF,IAAI,CAACD,oBAAoB,GAAGC,EAAE;;EAC/B;IAAA;IAAA,OAED,kBAAM;MACE,SAAyB,IAAI,CAACpO,KAAK;QAAjCsC,QAAQ,KAAyB,CAAjCA,QAAQ;QAAKtC,KAAK,cAApB,YAAsB,CAAa;MACzC,OACEH,oBAACwO,QAAM,oBAAKrO,KAAK,GACfH,oBAAC6N,SAAS;QAAC9C,uBAAuB,EAAE,IAAI,CAACA;MAAuB,GAAGtI,QAAQ,CAAa,CACjF;;EAEZ;EAAA;AAAA,EAtCuCzC,KAAK,CAACyO,SAAoC;AAAA,ICKvEE,kBAAmB;EAAA;EAAA;EAI9B,4BAAYxO,KAA8B;IAAA;IAAA;IACxC,6BAAMA,KAAK;IACL,IAAEoL,OAAO,GAAcpL,KAAK,CAA1BoL,OAAO;MAAK0C,IAAI,UAAK9N,KAAK,EAA5B,WAAoB,CAAQ;IAClC,QAAKoL,OAAO,GAAGA,OAAO,IAAI2C,iBAAa,CAACD,IAAI,CAAC;IAC7C,QAAK1C,OAAO,CAAC4C,MAAM,CAAC,QAAKnD,mBAAmB,CAACtK,IAAI,iCAAM,CAAC;IACxD,QAAKqK,uBAAuB,GAAG,QAAKA,uBAAuB,CAACrK,IAAI,iCAAM;IAAC;;;;;;;;;;;;WAWzE,6BAAoB+J,QAAyB,EAAEgB,MAAqB;MAClE,IAAM2C,aAAa,GAAI3D,QAAgB,CAACA,QAAQ,IAAIA,QAAQ;MAC5D,IAAM4D,WAAW,GAAI5D,QAAgB,CAACgB,MAAM,IAAIA,MAAM;MACtD,IAAI,IAAI,CAAC6C,oBAAoB,EAAE;QAC7B,IAAI,CAACA,oBAAoB,CAACF,aAAa,EAAEC,WAAW,CAAC;;;EAExD;IAAA;IAAA,OAED,iCAAwBE,EAA8D;MACpF,IAAI,CAACD,oBAAoB,GAAGC,EAAE;;EAC/B;IAAA;IAAA,OAED,kBAAM;MACE,SAAyB,IAAI,CAACpO,KAAK;QAAjCsC,QAAQ,KAAyB,CAAjCA,QAAQ;QAAKtC,KAAK,cAApB,YAAsB,CAAa;MACzC,OACEH,oBAACwO,MAAM;QAACjD,OAAO,EAAE,IAAI,CAACA;MAAO,GAAMpL,KAAK,GACtCH,oBAAC6N,SAAS;QAAC9C,uBAAuB,EAAE,IAAI,CAACA;MAAuB,GAAGtI,QAAQ,CAAa,CACjF;;EAEZ;EAAA;AAAA,EAvCqCzC,KAAK,CAACyO,SAAkC","names":["IonRouteInner","React","Route","path","props","exact","render","computedMatch","PureComponent","ReactRouterViewStack","createViewItem","bind","findViewItemByRouteInfo","findLeavingViewItemByRouteInfo","getChildrenToRender","findViewItemByPathname","outletId","reactElement","routeInfo","page","viewItem","id","generateId","ionPageElement","mount","ionRoute","matchProps","from","component","match","matchPath","pathname","type","IonRoute","disableIonPageManagement","routeData","childProps","ionRouterOutlet","viewItems","getViewItemsForOutlet","Children","forEach","children","child","find","v","matchComponent","map","clonedChild","ViewLifeCycleManager","key","removeView","remove","cloneElement","undefined","updateMatch","findViewItemByPath","shouldUpdateMatch","mustBeIonRoute","lastPathname","forceExact","viewStack","some","matchView","matchDefaultRoute","getAllViewItems","myMatch","url","isExact","params","ViewStacks","node","clonePageElement","leavingViewHtml","html","outerHTML","document","newEl","createElement","innerHTML","style","zIndex","ionBackButton","getElementsByTagName","firstChild","isViewVisible","el","classList","contains","StackManager","registerIonPage","isInOutlet","transitionPage","handlePageTransition","prevProps","skipTransition","clearOutletTimeout","clearTimeout","routerOutletElement","setupRouterOutlet","prevPathname","pendingPageTransition","context","clearOutlet","commit","enteringViewItem","leavingViewItem","prevRouteLastPathname","routeAction","routeDirection","routeOptions","unmount","enteringRoute","matchRoute","addViewItem","add","setAttribute","forceUpdate","foundView","oldPageElement","routerOutlet","canStart","config","getConfig","swipeEnabled","get","mode","propsToUse","pushedByRoute","onStart","Promise","resolve","onEnd","shouldContinue","goBack","swipeHandler","direction","progressAnimation","runCommit","enteringEl","leavingEl","deepWait","duration","directionToUse","showGoBack","animationBuilder","routeAnimation","routeInfoFallbackDirection","newLeavingElement","appendChild","removeChild","only","components","StackContext","Provider","value","stackContextValue","ref","setRef","forwardedRef","current","RouteManagerContext","matchedNode","IonRouterInner","LocationHistory","canGoBack","locationHistory","clear","handleNavigateBack","unMountViewItem","location","search","handleChangeTab","handleResetTab","handleNativeBack","handleNavigate","registerHistoryListener","handleHistoryChange","handleSetCurrentTab","state","tab","getCurrentRouteInfoForTab","split","incomingRouteParams","history","push","action","leavingLocationInfo","previous","leavingUrl","currentTab","currentRoute","prevInfo","findLastLocation","routerOptions","isPushed","r","lastRoute","currentRouteInfo","currentPushedBy","setState","back","Object","assign","replace","defaultHref","originalHref","originalRouteOptions","getFirstRouteInfoForTab","newRouteInfo","ri","update","routeMangerContextState","NavManager","ionRedirect","stackManager","onNativeBack","onNavigateBack","onNavigate","onSetCurrentTab","onChangeTab","onResetTab","IonRouter","withRouter","displayName","IonReactRouter","rest","createHistory","listen","locationValue","actionValue","historyListenHandler","cb","Router","Component","IonReactMemoryRouter","IonReactHashRouter"],"sources":["/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@ionic/react-router/src/ReactRouter/IonRouteInner.tsx","/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@ionic/react-router/src/ReactRouter/ReactRouterViewStack.tsx","/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@ionic/react-router/src/ReactRouter/clonePageElement.ts","/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@ionic/react-router/src/ReactRouter/StackManager.tsx","/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@ionic/react-router/src/ReactRouter/IonRouter.tsx","/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@ionic/react-router/src/ReactRouter/IonReactRouter.tsx","/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@ionic/react-router/src/ReactRouter/IonReactMemoryRouter.tsx","/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@ionic/react-router/src/ReactRouter/IonReactHashRouter.tsx"],"sourcesContent":["import { IonRouteProps } from '@ionic/react';\nimport React from 'react';\nimport { Route } from 'react-router';\n\nexport class IonRouteInner extends React.PureComponent<IonRouteProps> {\n  render() {\n    return (\n      <Route\n        path={this.props.path}\n        exact={this.props.exact}\n        render={this.props.render}\n        /**\n         * `computedMatch` is a private API in react-router v5 that\n         * has been removed in v6.\n         *\n         * This needs to be removed when we support v6.\n         *\n         * TODO: FW-647\n         */\n        computedMatch={(this.props as any).computedMatch}\n      />\n    );\n  }\n}\n","import {\n  IonRoute,\n  RouteInfo,\n  ViewItem,\n  ViewLifeCycleManager,\n  ViewStacks,\n  generateId,\n} from '@ionic/react';\nimport React from 'react';\nimport { matchPath } from 'react-router';\n\nexport class ReactRouterViewStack extends ViewStacks {\n  constructor() {\n    super();\n    this.createViewItem = this.createViewItem.bind(this);\n    this.findViewItemByRouteInfo = this.findViewItemByRouteInfo.bind(this);\n    this.findLeavingViewItemByRouteInfo = this.findLeavingViewItemByRouteInfo.bind(this);\n    this.getChildrenToRender = this.getChildrenToRender.bind(this);\n    this.findViewItemByPathname = this.findViewItemByPathname.bind(this);\n  }\n\n  createViewItem(\n    outletId: string,\n    reactElement: React.ReactElement,\n    routeInfo: RouteInfo,\n    page?: HTMLElement\n  ) {\n    const viewItem: ViewItem = {\n      id: generateId('viewItem'),\n      outletId,\n      ionPageElement: page,\n      reactElement,\n      mount: true,\n      ionRoute: false,\n    };\n\n    const matchProps = {\n      exact: reactElement.props.exact,\n      path: reactElement.props.path || reactElement.props.from,\n      component: reactElement.props.component,\n    };\n\n    const match = matchPath(routeInfo.pathname, matchProps);\n\n    if (reactElement.type === IonRoute) {\n      viewItem.ionRoute = true;\n      viewItem.disableIonPageManagement = reactElement.props.disableIonPageManagement;\n    }\n\n    viewItem.routeData = {\n      match,\n      childProps: reactElement.props,\n    };\n\n    return viewItem;\n  }\n\n  getChildrenToRender(outletId: string, ionRouterOutlet: React.ReactElement, routeInfo: RouteInfo) {\n    const viewItems = this.getViewItemsForOutlet(outletId);\n\n    // Sync latest routes with viewItems\n    React.Children.forEach(ionRouterOutlet.props.children, (child: React.ReactElement) => {\n      const viewItem = viewItems.find((v) => {\n        return matchComponent(child, v.routeData.childProps.path || v.routeData.childProps.from);\n      });\n      if (viewItem) {\n        viewItem.reactElement = child;\n      }\n    });\n\n    const children = viewItems.map((viewItem) => {\n      let clonedChild;\n      if (viewItem.ionRoute && !viewItem.disableIonPageManagement) {\n        clonedChild = (\n          <ViewLifeCycleManager\n            key={`view-${viewItem.id}`}\n            mount={viewItem.mount}\n            removeView={() => this.remove(viewItem)}\n          >\n            {React.cloneElement(viewItem.reactElement, {\n              computedMatch: viewItem.routeData.match,\n            })}\n          </ViewLifeCycleManager>\n        );\n      } else {\n        const match = matchComponent(viewItem.reactElement, routeInfo.pathname);\n        clonedChild = (\n          <ViewLifeCycleManager\n            key={`view-${viewItem.id}`}\n            mount={viewItem.mount}\n            removeView={() => this.remove(viewItem)}\n          >\n            {React.cloneElement(viewItem.reactElement, {\n              computedMatch: viewItem.routeData.match,\n            })}\n          </ViewLifeCycleManager>\n        );\n\n        if (!match && viewItem.routeData.match) {\n          viewItem.routeData.match = undefined;\n          viewItem.mount = false;\n        }\n      }\n\n      return clonedChild;\n    });\n    return children;\n  }\n\n  findViewItemByRouteInfo(routeInfo: RouteInfo, outletId?: string, updateMatch?: boolean) {\n    const { viewItem, match } = this.findViewItemByPath(routeInfo.pathname, outletId);\n    const shouldUpdateMatch = updateMatch === undefined || updateMatch === true;\n    if (shouldUpdateMatch && viewItem && match) {\n      viewItem.routeData.match = match;\n    }\n    return viewItem;\n  }\n\n  findLeavingViewItemByRouteInfo(routeInfo: RouteInfo, outletId?: string, mustBeIonRoute = true) {\n    const { viewItem } = this.findViewItemByPath(\n      routeInfo.lastPathname!,\n      outletId,\n      false,\n      mustBeIonRoute\n    );\n    return viewItem;\n  }\n\n  findViewItemByPathname(pathname: string, outletId?: string) {\n    const { viewItem } = this.findViewItemByPath(pathname, outletId);\n    return viewItem;\n  }\n\n  private findViewItemByPath(\n    pathname: string,\n    outletId?: string,\n    forceExact?: boolean,\n    mustBeIonRoute?: boolean\n  ) {\n    let viewItem: ViewItem | undefined;\n    let match: ReturnType<typeof matchPath> | undefined;\n    let viewStack: ViewItem[];\n\n    if (outletId) {\n      viewStack = this.getViewItemsForOutlet(outletId);\n      viewStack.some(matchView);\n      if (!viewItem) {\n        viewStack.some(matchDefaultRoute);\n      }\n    } else {\n      const viewItems = this.getAllViewItems();\n      viewItems.some(matchView);\n      if (!viewItem) {\n        viewItems.some(matchDefaultRoute);\n      }\n    }\n\n    return { viewItem, match };\n\n    function matchView(v: ViewItem) {\n      if (mustBeIonRoute && !v.ionRoute) {\n        return false;\n      }\n      const matchProps = {\n        exact: forceExact ? true : v.routeData.childProps.exact,\n        path: v.routeData.childProps.path || v.routeData.childProps.from,\n        component: v.routeData.childProps.component,\n      };\n      const myMatch = matchPath(pathname, matchProps);\n      if (myMatch) {\n        viewItem = v;\n        match = myMatch;\n        return true;\n      }\n      return false;\n    }\n\n    function matchDefaultRoute(v: ViewItem) {\n      // try to find a route that doesn't have a path or from prop, that will be our default route\n      if (!v.routeData.childProps.path && !v.routeData.childProps.from) {\n        match = {\n          path: pathname,\n          url: pathname,\n          isExact: true,\n          params: {},\n        };\n        viewItem = v;\n        return true;\n      }\n      return false;\n    }\n  }\n}\n\nfunction matchComponent(node: React.ReactElement, pathname: string, forceExact?: boolean) {\n  const matchProps = {\n    exact: forceExact ? true : node.props.exact,\n    path: node.props.path || node.props.from,\n    component: node.props.component,\n  };\n  const match = matchPath(pathname, matchProps);\n\n  return match;\n}\n","export function clonePageElement(leavingViewHtml: string | HTMLElement) {\n  let html: string;\n  if (typeof leavingViewHtml === 'string') {\n    html = leavingViewHtml;\n  } else {\n    html = leavingViewHtml.outerHTML;\n  }\n  if (document) {\n    const newEl = document.createElement('div');\n    newEl.innerHTML = html;\n    newEl.style.zIndex = '';\n    // Remove an existing back button so the new element doesn't get two of them\n    const ionBackButton = newEl.getElementsByTagName('ion-back-button');\n    if (ionBackButton[0]) {\n      ionBackButton[0].remove();\n    }\n    return newEl.firstChild as HTMLElement;\n  }\n  return undefined;\n}\n","import {\n  RouteInfo,\n  RouteManagerContext,\n  StackContext,\n  StackContextState,\n  ViewItem,\n  generateId,\n  getConfig,\n} from '@ionic/react';\nimport React from 'react';\nimport { matchPath } from 'react-router-dom';\n\nimport { clonePageElement } from './clonePageElement';\n\ninterface StackManagerProps {\n  routeInfo: RouteInfo;\n}\n\ninterface StackManagerState {}\n\nconst isViewVisible = (el: HTMLElement) =>\n  !el.classList.contains('ion-page-invisible') && !el.classList.contains('ion-page-hidden');\n\nexport class StackManager extends React.PureComponent<StackManagerProps, StackManagerState> {\n  id: string;\n  context!: React.ContextType<typeof RouteManagerContext>;\n  ionRouterOutlet?: React.ReactElement;\n  routerOutletElement: HTMLIonRouterOutletElement | undefined;\n  prevProps?: StackManagerProps;\n  skipTransition: boolean;\n\n  stackContextValue: StackContextState = {\n    registerIonPage: this.registerIonPage.bind(this),\n    isInOutlet: () => true,\n  };\n\n  private clearOutletTimeout: any;\n  private pendingPageTransition = false;\n\n  constructor(props: StackManagerProps) {\n    super(props);\n    this.registerIonPage = this.registerIonPage.bind(this);\n    this.transitionPage = this.transitionPage.bind(this);\n    this.handlePageTransition = this.handlePageTransition.bind(this);\n    this.id = generateId('routerOutlet');\n    this.prevProps = undefined;\n    this.skipTransition = false;\n  }\n\n  componentDidMount() {\n    if (this.clearOutletTimeout) {\n      /**\n       * The clearOutlet integration with React Router is a bit hacky.\n       * It uses a timeout to clear the outlet after a transition.\n       * In React v18, components are mounted and unmounted in development mode\n       * to check for side effects.\n       *\n       * This clearTimeout prevents the outlet from being cleared when the component is re-mounted,\n       * which should only happen in development mode and as a result of a hot reload.\n       */\n      clearTimeout(this.clearOutletTimeout);\n    }\n    if (this.routerOutletElement) {\n      this.setupRouterOutlet(this.routerOutletElement);\n      this.handlePageTransition(this.props.routeInfo);\n    }\n  }\n\n  componentDidUpdate(prevProps: StackManagerProps) {\n    const { pathname } = this.props.routeInfo;\n    const { pathname: prevPathname } = prevProps.routeInfo;\n\n    if (pathname !== prevPathname) {\n      this.prevProps = prevProps;\n      this.handlePageTransition(this.props.routeInfo);\n    } else if (this.pendingPageTransition) {\n      this.handlePageTransition(this.props.routeInfo);\n      this.pendingPageTransition = false;\n    }\n  }\n\n  componentWillUnmount() {\n    this.clearOutletTimeout = this.context.clearOutlet(this.id);\n  }\n\n  async handlePageTransition(routeInfo: RouteInfo) {\n    if (!this.routerOutletElement || !this.routerOutletElement.commit) {\n      /**\n       * The route outlet has not mounted yet. We need to wait for it to render\n       * before we can transition the page.\n       *\n       * Set a flag to indicate that we should transition the page after\n       * the component has updated.\n       */\n      this.pendingPageTransition = true;\n    } else {\n      let enteringViewItem = this.context.findViewItemByRouteInfo(routeInfo, this.id);\n      let leavingViewItem = this.context.findLeavingViewItemByRouteInfo(routeInfo, this.id);\n\n      if (!leavingViewItem && routeInfo.prevRouteLastPathname) {\n        leavingViewItem = this.context.findViewItemByPathname(\n          routeInfo.prevRouteLastPathname,\n          this.id\n        );\n      }\n\n      // Check if leavingViewItem should be unmounted\n      if (leavingViewItem) {\n        if (routeInfo.routeAction === 'replace') {\n          leavingViewItem.mount = false;\n        } else if (!(routeInfo.routeAction === 'push' && routeInfo.routeDirection === 'forward')) {\n          if (routeInfo.routeDirection !== 'none' && enteringViewItem !== leavingViewItem) {\n            leavingViewItem.mount = false;\n          }\n        } else if (routeInfo.routeOptions?.unmount) {\n          leavingViewItem.mount = false;\n        }\n      }\n\n      const enteringRoute = matchRoute(\n        this.ionRouterOutlet?.props.children,\n        routeInfo\n      ) as React.ReactElement;\n\n      if (enteringViewItem) {\n        enteringViewItem.reactElement = enteringRoute;\n      } else if (enteringRoute) {\n        enteringViewItem = this.context.createViewItem(this.id, enteringRoute, routeInfo);\n        this.context.addViewItem(enteringViewItem);\n      }\n\n      if (enteringViewItem && enteringViewItem.ionPageElement) {\n        /**\n         * If the entering view item is the same as the leaving view item,\n         * then we don't need to transition.\n         */\n        if (enteringViewItem === leavingViewItem) {\n          /**\n           * If the entering view item is the same as the leaving view item,\n           * we are either transitioning using parameterized routes to the same view\n           * or a parent router outlet is re-rendering as a result of React props changing.\n           *\n           * If the route data does not match the current path, the parent router outlet\n           * is attempting to transition and we cancel the operation.\n           */\n          if (enteringViewItem.routeData.match.url !== routeInfo.pathname) {\n            return;\n          }\n        }\n\n        /**\n         * If there isn't a leaving view item, but the route info indicates\n         * that the user has routed from a previous path, then we need\n         * to find the leaving view item to transition between.\n         */\n        if (!leavingViewItem && this.props.routeInfo.prevRouteLastPathname) {\n          leavingViewItem = this.context.findViewItemByPathname(\n            this.props.routeInfo.prevRouteLastPathname,\n            this.id\n          );\n        }\n\n        /**\n         * If the entering view is already visible and the leaving view is not, the transition does not need to occur.\n         */\n        if (\n          isViewVisible(enteringViewItem.ionPageElement) &&\n          leavingViewItem !== undefined &&\n          !isViewVisible(leavingViewItem.ionPageElement!)\n        ) {\n          return;\n        }\n\n        /**\n         * The view should only be transitioned in the following cases:\n         * 1. Performing a replace or pop action, such as a swipe to go back gesture\n         * to animation the leaving view off the screen.\n         *\n         * 2. Navigating between top-level router outlets, such as /page-1 to /page-2;\n         * or navigating within a nested outlet, such as /tabs/tab-1 to /tabs/tab-2.\n         *\n         * 3. The entering view is an ion-router-outlet containing a page\n         * matching the current route and that hasn't already transitioned in.\n         *\n         * This should only happen when navigating directly to a nested router outlet\n         * route or on an initial page load (i.e. refreshing). In cases when loading\n         * /tabs/tab-1, we need to transition the /tabs page element into the view.\n         */\n        this.transitionPage(routeInfo, enteringViewItem, leavingViewItem);\n      } else if (leavingViewItem && !enteringRoute && !enteringViewItem) {\n        // If we have a leavingView but no entering view/route, we are probably leaving to\n        // another outlet, so hide this leavingView. We do it in a timeout to give time for a\n        // transition to finish.\n        // setTimeout(() => {\n        if (leavingViewItem.ionPageElement) {\n          leavingViewItem.ionPageElement.classList.add('ion-page-hidden');\n          leavingViewItem.ionPageElement.setAttribute('aria-hidden', 'true');\n        }\n        // }, 250);\n      }\n\n      this.forceUpdate();\n    }\n  }\n\n  registerIonPage(page: HTMLElement, routeInfo: RouteInfo) {\n    const foundView = this.context.findViewItemByRouteInfo(routeInfo, this.id);\n    if (foundView) {\n      const oldPageElement = foundView.ionPageElement;\n      foundView.ionPageElement = page;\n      foundView.ionRoute = true;\n\n      /**\n       * React 18 will unmount and remount IonPage\n       * elements in development mode when using createRoot.\n       * This can cause duplicate page transitions to occur.\n       */\n      if (oldPageElement === page) {\n        return;\n      }\n    }\n    this.handlePageTransition(routeInfo);\n  }\n\n  async setupRouterOutlet(routerOutlet: HTMLIonRouterOutletElement) {\n    const canStart = () => {\n      const config = getConfig();\n      const swipeEnabled = config && config.get('swipeBackEnabled', routerOutlet.mode === 'ios');\n      if (!swipeEnabled) {\n        return false;\n      }\n\n      const { routeInfo } = this.props;\n\n      const propsToUse =\n        this.prevProps && this.prevProps.routeInfo.pathname === routeInfo.pushedByRoute\n          ? this.prevProps.routeInfo\n          : ({ pathname: routeInfo.pushedByRoute || '' } as any);\n      const enteringViewItem = this.context.findViewItemByRouteInfo(propsToUse, this.id, false);\n\n      return (\n        !!enteringViewItem &&\n        /**\n         * The root url '/' is treated as\n         * the first view item (but is never mounted),\n         * so we do not want to swipe back to the\n         * root url.\n         */\n        enteringViewItem.mount &&\n        /**\n         * When on the first page (whatever view\n         * you land on after the root url) it\n         * is possible for findViewItemByRouteInfo to\n         * return the exact same view you are currently on.\n         * Make sure that we are not swiping back to the same\n         * instances of a view.\n         */\n        enteringViewItem.routeData.match.path !== routeInfo.pathname\n      );\n    };\n\n    const onStart = async () => {\n      const { routeInfo } = this.props;\n\n      const propsToUse =\n        this.prevProps && this.prevProps.routeInfo.pathname === routeInfo.pushedByRoute\n          ? this.prevProps.routeInfo\n          : ({ pathname: routeInfo.pushedByRoute || '' } as any);\n      const enteringViewItem = this.context.findViewItemByRouteInfo(propsToUse, this.id, false);\n      const leavingViewItem = this.context.findViewItemByRouteInfo(routeInfo, this.id, false);\n\n      /**\n       * When the gesture starts, kick off\n       * a transition that is controlled\n       * via a swipe gesture.\n       */\n      if (enteringViewItem && leavingViewItem) {\n        await this.transitionPage(routeInfo, enteringViewItem, leavingViewItem, 'back', true);\n      }\n\n      return Promise.resolve();\n    };\n    const onEnd = (shouldContinue: boolean) => {\n      if (shouldContinue) {\n        this.skipTransition = true;\n\n        this.context.goBack();\n      } else {\n        /**\n         * In the event that the swipe\n         * gesture was aborted, we should\n         * re-hide the page that was going to enter.\n         */\n        const { routeInfo } = this.props;\n\n        const propsToUse =\n          this.prevProps && this.prevProps.routeInfo.pathname === routeInfo.pushedByRoute\n            ? this.prevProps.routeInfo\n            : ({ pathname: routeInfo.pushedByRoute || '' } as any);\n        const enteringViewItem = this.context.findViewItemByRouteInfo(propsToUse, this.id, false);\n        const leavingViewItem = this.context.findViewItemByRouteInfo(routeInfo, this.id, false);\n\n        /**\n         * Ionic React has a design defect where it\n         * a) Unmounts the leaving view item when using parameterized routes\n         * b) Considers the current view to be the entering view when using\n         * parameterized routes\n         *\n         * As a result, we should not hide the view item here\n         * as it will cause the current view to be hidden.\n         */\n        if (\n          enteringViewItem !== leavingViewItem &&\n          enteringViewItem?.ionPageElement !== undefined\n        ) {\n          const { ionPageElement } = enteringViewItem;\n          ionPageElement.setAttribute('aria-hidden', 'true');\n          ionPageElement.classList.add('ion-page-hidden');\n        }\n      }\n    };\n\n    routerOutlet.swipeHandler = {\n      canStart,\n      onStart,\n      onEnd,\n    };\n  }\n\n  async transitionPage(\n    routeInfo: RouteInfo,\n    enteringViewItem: ViewItem,\n    leavingViewItem?: ViewItem,\n    direction?: 'forward' | 'back',\n    progressAnimation = false\n  ) {\n    const runCommit = async (enteringEl: HTMLElement, leavingEl?: HTMLElement) => {\n      const skipTransition = this.skipTransition;\n\n      /**\n       * If the transition was handled\n       * via the swipe to go back gesture,\n       * then we do not want to perform\n       * another transition.\n       *\n       * We skip adding ion-page or ion-page-invisible\n       * because the entering view already exists in the DOM.\n       * If we added the classes, there would be a flicker where\n       * the view would be briefly hidden.\n       */\n      if (skipTransition) {\n        /**\n         * We need to reset skipTransition before\n         * we call routerOutlet.commit otherwise\n         * the transition triggered by the swipe\n         * to go back gesture would reset it. In\n         * that case you would see a duplicate\n         * transition triggered by handlePageTransition\n         * in componentDidUpdate.\n         */\n        this.skipTransition = false;\n      } else {\n        enteringEl.classList.add('ion-page');\n        enteringEl.classList.add('ion-page-invisible');\n      }\n\n      await routerOutlet.commit(enteringEl, leavingEl, {\n        deepWait: true,\n        duration: skipTransition || directionToUse === undefined ? 0 : undefined,\n        direction: directionToUse,\n        showGoBack: !!routeInfo.pushedByRoute,\n        progressAnimation,\n        animationBuilder: routeInfo.routeAnimation,\n      });\n    };\n\n    const routerOutlet = this.routerOutletElement!;\n\n    const routeInfoFallbackDirection =\n      routeInfo.routeDirection === 'none' || routeInfo.routeDirection === 'root'\n        ? undefined\n        : routeInfo.routeDirection;\n    const directionToUse = direction ?? routeInfoFallbackDirection;\n\n    if (enteringViewItem && enteringViewItem.ionPageElement && this.routerOutletElement) {\n      if (\n        leavingViewItem &&\n        leavingViewItem.ionPageElement &&\n        enteringViewItem === leavingViewItem\n      ) {\n        // If a page is transitioning to another version of itself\n        // we clone it so we can have an animation to show\n\n        const match = matchComponent(leavingViewItem.reactElement, routeInfo.pathname, true);\n        if (match) {\n          const newLeavingElement = clonePageElement(leavingViewItem.ionPageElement.outerHTML);\n          if (newLeavingElement) {\n            this.routerOutletElement.appendChild(newLeavingElement);\n            await runCommit(enteringViewItem.ionPageElement, newLeavingElement);\n            this.routerOutletElement.removeChild(newLeavingElement);\n          }\n        } else {\n          await runCommit(enteringViewItem.ionPageElement, undefined);\n        }\n      } else {\n        await runCommit(enteringViewItem.ionPageElement, leavingViewItem?.ionPageElement);\n        if (leavingViewItem && leavingViewItem.ionPageElement && !progressAnimation) {\n          leavingViewItem.ionPageElement.classList.add('ion-page-hidden');\n          leavingViewItem.ionPageElement.setAttribute('aria-hidden', 'true');\n        }\n      }\n    }\n  }\n\n  render() {\n    const { children } = this.props;\n    const ionRouterOutlet = React.Children.only(children) as React.ReactElement;\n    this.ionRouterOutlet = ionRouterOutlet;\n\n    const components = this.context.getChildrenToRender(\n      this.id,\n      this.ionRouterOutlet,\n      this.props.routeInfo,\n      () => {\n        this.forceUpdate();\n      }\n    );\n\n    return (\n      <StackContext.Provider value={this.stackContextValue}>\n        {React.cloneElement(\n          ionRouterOutlet as any,\n          {\n            ref: (node: HTMLIonRouterOutletElement) => {\n              if (ionRouterOutlet.props.setRef) {\n                ionRouterOutlet.props.setRef(node);\n              }\n              if (ionRouterOutlet.props.forwardedRef) {\n                ionRouterOutlet.props.forwardedRef.current = node;\n              }\n              this.routerOutletElement = node;\n              const { ref } = ionRouterOutlet as any;\n              if (typeof ref === 'function') {\n                ref(node);\n              }\n            },\n          },\n          components\n        )}\n      </StackContext.Provider>\n    );\n  }\n\n  static get contextType() {\n    return RouteManagerContext;\n  }\n}\n\nexport default StackManager;\n\nfunction matchRoute(node: React.ReactNode, routeInfo: RouteInfo) {\n  let matchedNode: React.ReactNode;\n  React.Children.forEach(node as React.ReactElement, (child: React.ReactElement) => {\n    const matchProps = {\n      exact: child.props.exact,\n      path: child.props.path || child.props.from,\n      component: child.props.component,\n    };\n    const match = matchPath(routeInfo.pathname, matchProps);\n    if (match) {\n      matchedNode = child;\n    }\n  });\n\n  if (matchedNode) {\n    return matchedNode;\n  }\n  // If we haven't found a node\n  // try to find one that doesn't have a path or from prop, that will be our not found route\n  React.Children.forEach(node as React.ReactElement, (child: React.ReactElement) => {\n    if (!(child.props.path || child.props.from)) {\n      matchedNode = child;\n    }\n  });\n\n  return matchedNode;\n}\n\nfunction matchComponent(node: React.ReactElement, pathname: string, forceExact?: boolean) {\n  const matchProps = {\n    exact: forceExact ? true : node.props.exact,\n    path: node.props.path || node.props.from,\n    component: node.props.component,\n  };\n  const match = matchPath(pathname, matchProps);\n\n  return match;\n}\n","import {\n  AnimationBuilder,\n  LocationHistory,\n  NavManager,\n  RouteAction,\n  RouteInfo,\n  RouteManagerContext,\n  RouteManagerContextState,\n  RouterDirection,\n  ViewItem,\n  generateId,\n  getConfig,\n} from '@ionic/react';\nimport { Action as HistoryAction, Location as HistoryLocation } from 'history';\nimport React from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\n\nimport { IonRouteInner } from './IonRouteInner';\nimport { ReactRouterViewStack } from './ReactRouterViewStack';\nimport StackManager from './StackManager';\n\nexport interface LocationState {\n  direction?: RouterDirection;\n  routerOptions?: { as?: string; unmount?: boolean };\n}\n\ninterface IonRouteProps extends RouteComponentProps<{}, {}, LocationState> {\n  registerHistoryListener: (\n    cb: (location: HistoryLocation<any>, action: HistoryAction) => void\n  ) => void;\n}\n\ninterface IonRouteState {\n  routeInfo: RouteInfo;\n}\n\nclass IonRouterInner extends React.PureComponent<IonRouteProps, IonRouteState> {\n  currentTab?: string;\n  exitViewFromOtherOutletHandlers: ((pathname: string) => ViewItem | undefined)[] = [];\n  incomingRouteParams?: Partial<RouteInfo>;\n  locationHistory = new LocationHistory();\n  viewStack = new ReactRouterViewStack();\n  routeMangerContextState: RouteManagerContextState = {\n    canGoBack: () => this.locationHistory.canGoBack(),\n    clearOutlet: this.viewStack.clear,\n    findViewItemByPathname: this.viewStack.findViewItemByPathname,\n    getChildrenToRender: this.viewStack.getChildrenToRender,\n    goBack: () => this.handleNavigateBack(),\n    createViewItem: this.viewStack.createViewItem,\n    findViewItemByRouteInfo: this.viewStack.findViewItemByRouteInfo,\n    findLeavingViewItemByRouteInfo: this.viewStack.findLeavingViewItemByRouteInfo,\n    addViewItem: this.viewStack.add,\n    unMountViewItem: this.viewStack.remove,\n  };\n\n  constructor(props: IonRouteProps) {\n    super(props);\n\n    const routeInfo = {\n      id: generateId('routeInfo'),\n      pathname: this.props.location.pathname,\n      search: this.props.location.search,\n    };\n\n    this.locationHistory.add(routeInfo);\n    this.handleChangeTab = this.handleChangeTab.bind(this);\n    this.handleResetTab = this.handleResetTab.bind(this);\n    this.handleNativeBack = this.handleNativeBack.bind(this);\n    this.handleNavigate = this.handleNavigate.bind(this);\n    this.handleNavigateBack = this.handleNavigateBack.bind(this);\n    this.props.registerHistoryListener(this.handleHistoryChange.bind(this));\n    this.handleSetCurrentTab = this.handleSetCurrentTab.bind(this);\n\n    this.state = {\n      routeInfo,\n    };\n  }\n\n  handleChangeTab(tab: string, path?: string, routeOptions?: any) {\n    if (!path) { return; }\n\n    const routeInfo = this.locationHistory.getCurrentRouteInfoForTab(tab);\n    const [pathname, search] = path.split('?');\n    if (routeInfo) {\n      this.incomingRouteParams = { ...routeInfo, routeAction: 'push', routeDirection: 'none' };\n      if (routeInfo.pathname === pathname) {\n        this.incomingRouteParams.routeOptions = routeOptions;\n        this.props.history.push(routeInfo.pathname + (routeInfo.search || ''));\n      } else {\n        this.incomingRouteParams.pathname = pathname;\n        this.incomingRouteParams.search = search ? '?' + search : undefined;\n        this.incomingRouteParams.routeOptions = routeOptions;\n        this.props.history.push(pathname + (search ? '?' + search : ''));\n      }\n    } else {\n      this.handleNavigate(pathname, 'push', 'none', undefined, routeOptions, tab);\n    }\n  }\n\n  handleHistoryChange(location: HistoryLocation<LocationState>, action: HistoryAction) {\n    let leavingLocationInfo: RouteInfo;\n    if (this.incomingRouteParams) {\n      if (this.incomingRouteParams.routeAction === 'replace') {\n        leavingLocationInfo = this.locationHistory.previous();\n      } else {\n        leavingLocationInfo = this.locationHistory.current();\n      }\n    } else {\n      leavingLocationInfo = this.locationHistory.current();\n    }\n\n    const leavingUrl = leavingLocationInfo.pathname + leavingLocationInfo.search;\n    if (leavingUrl !== location.pathname) {\n      if (!this.incomingRouteParams) {\n        if (action === 'REPLACE') {\n          this.incomingRouteParams = {\n            routeAction: 'replace',\n            routeDirection: 'none',\n            tab: this.currentTab,\n          };\n        }\n        if (action === 'POP') {\n          const currentRoute = this.locationHistory.current();\n          if (currentRoute && currentRoute.pushedByRoute) {\n            const prevInfo = this.locationHistory.findLastLocation(currentRoute);\n            this.incomingRouteParams = { ...prevInfo, routeAction: 'pop', routeDirection: 'back' };\n          } else {\n            this.incomingRouteParams = {\n              routeAction: 'pop',\n              routeDirection: 'none',\n              tab: this.currentTab,\n            };\n          }\n        }\n        if (!this.incomingRouteParams) {\n          this.incomingRouteParams = {\n            routeAction: 'push',\n            routeDirection: location.state?.direction || 'forward',\n            routeOptions: location.state?.routerOptions,\n            tab: this.currentTab,\n          };\n        }\n      }\n\n      let routeInfo: RouteInfo;\n\n      if (this.incomingRouteParams?.id) {\n        routeInfo = {\n          ...(this.incomingRouteParams as RouteInfo),\n          lastPathname: leavingLocationInfo.pathname,\n        };\n        this.locationHistory.add(routeInfo);\n      } else {\n        const isPushed =\n          this.incomingRouteParams.routeAction === 'push' &&\n          this.incomingRouteParams.routeDirection === 'forward';\n        routeInfo = {\n          id: generateId('routeInfo'),\n          ...this.incomingRouteParams,\n          lastPathname: leavingLocationInfo.pathname,\n          pathname: location.pathname,\n          search: location.search,\n          params: this.props.match.params,\n          prevRouteLastPathname: leavingLocationInfo.lastPathname,\n        };\n        if (isPushed) {\n          routeInfo.tab = leavingLocationInfo.tab;\n          routeInfo.pushedByRoute = leavingLocationInfo.pathname;\n        } else if (routeInfo.routeAction === 'pop') {\n          const r = this.locationHistory.findLastLocation(routeInfo);\n          routeInfo.pushedByRoute = r?.pushedByRoute;\n        } else if (routeInfo.routeAction === 'push' && routeInfo.tab !== leavingLocationInfo.tab) {\n          // If we are switching tabs grab the last route info for the tab and use its pushedByRoute\n          const lastRoute = this.locationHistory.getCurrentRouteInfoForTab(routeInfo.tab);\n          routeInfo.pushedByRoute = lastRoute?.pushedByRoute;\n        } else if (routeInfo.routeAction === 'replace') {\n          // Make sure to set the lastPathname, etc.. to the current route so the page transitions out\n          const currentRouteInfo = this.locationHistory.current();\n\n          /**\n           * If going from /home to /child, then replacing from\n           * /child to /home, we don't want the route info to\n           * say that /home was pushed by /home which is not correct.\n           */\n          const currentPushedBy = currentRouteInfo?.pushedByRoute;\n          const pushedByRoute = (currentPushedBy !== undefined && currentPushedBy !== routeInfo.pathname) ? currentPushedBy : routeInfo.pushedByRoute;\n\n          routeInfo.lastPathname = currentRouteInfo?.pathname || routeInfo.lastPathname;\n          routeInfo.prevRouteLastPathname = currentRouteInfo?.lastPathname;\n          routeInfo.pushedByRoute = pushedByRoute;\n          routeInfo.routeDirection = currentRouteInfo?.routeDirection || routeInfo.routeDirection;\n          routeInfo.routeAnimation = currentRouteInfo?.routeAnimation || routeInfo.routeAnimation;\n        }\n\n        this.locationHistory.add(routeInfo);\n      }\n\n      this.setState({\n        routeInfo,\n      });\n    }\n\n    this.incomingRouteParams = undefined;\n  }\n\n  /**\n   * history@4.x uses goBack(), history@5.x uses back()\n   * TODO: If support for React Router <=5 is dropped\n   * this logic is no longer needed. We can just\n   * assume back() is available.\n   */\n  handleNativeBack() {\n    const history = this.props.history as any;\n    const goBack = history.goBack || history.back;\n    goBack();\n  }\n\n  handleNavigate(\n    path: string,\n    routeAction: RouteAction,\n    routeDirection?: RouterDirection,\n    routeAnimation?: AnimationBuilder,\n    routeOptions?: any,\n    tab?: string\n  ) {\n    this.incomingRouteParams = Object.assign(this.incomingRouteParams || {}, {\n      routeAction,\n      routeDirection,\n      routeOptions,\n      routeAnimation,\n      tab,\n    });\n\n    if (routeAction === 'push') {\n      this.props.history.push(path);\n    } else {\n      this.props.history.replace(path);\n    }\n  }\n\n  handleNavigateBack(defaultHref: string | RouteInfo = '/', routeAnimation?: AnimationBuilder) {\n    const config = getConfig();\n    defaultHref = defaultHref ? defaultHref : config && config.get('backButtonDefaultHref' as any);\n    const routeInfo = this.locationHistory.current();\n    if (routeInfo && routeInfo.pushedByRoute) {\n      const prevInfo = this.locationHistory.findLastLocation(routeInfo);\n      if (prevInfo) {\n        this.incomingRouteParams = {\n          ...prevInfo,\n          routeAction: 'pop',\n          routeDirection: 'back',\n          routeAnimation: routeAnimation || routeInfo.routeAnimation,\n        };\n        if (\n          routeInfo.lastPathname === routeInfo.pushedByRoute ||\n          (\n            /**\n             * We need to exclude tab switches/tab\n             * context changes here because tabbed\n             * navigation is not linear, but router.back()\n             * will go back in a linear fashion.\n             */\n            prevInfo.pathname === routeInfo.pushedByRoute &&\n            routeInfo.tab === '' && prevInfo.tab === ''\n          )\n        ) {\n          /**\n           * history@4.x uses goBack(), history@5.x uses back()\n           * TODO: If support for React Router <=5 is dropped\n           * this logic is no longer needed. We can just\n           * assume back() is available.\n           */\n          const history = this.props.history as any;\n          const goBack = history.goBack || history.back;\n          goBack();\n        } else {\n          this.handleNavigate(prevInfo.pathname + (prevInfo.search || ''), 'pop', 'back');\n        }\n      } else {\n        this.handleNavigate(defaultHref as string, 'pop', 'back');\n      }\n    } else {\n      this.handleNavigate(defaultHref as string, 'pop', 'back');\n    }\n  }\n\n  handleResetTab(tab: string, originalHref: string, originalRouteOptions: any) {\n    const routeInfo = this.locationHistory.getFirstRouteInfoForTab(tab);\n    if (routeInfo) {\n      const newRouteInfo = { ...routeInfo };\n      newRouteInfo.pathname = originalHref;\n      newRouteInfo.routeOptions = originalRouteOptions;\n      this.incomingRouteParams = { ...newRouteInfo, routeAction: 'pop', routeDirection: 'back' };\n      this.props.history.push(newRouteInfo.pathname + (newRouteInfo.search || ''));\n    }\n  }\n\n  handleSetCurrentTab(tab: string) {\n    this.currentTab = tab;\n    const ri = { ...this.locationHistory.current() };\n    if (ri.tab !== tab) {\n      ri.tab = tab;\n      this.locationHistory.update(ri);\n    }\n  }\n\n  render() {\n    return (\n      <RouteManagerContext.Provider value={this.routeMangerContextState}>\n        <NavManager\n          ionRoute={IonRouteInner}\n          ionRedirect={{}}\n          stackManager={StackManager}\n          routeInfo={this.state.routeInfo!}\n          onNativeBack={this.handleNativeBack}\n          onNavigateBack={this.handleNavigateBack}\n          onNavigate={this.handleNavigate}\n          onSetCurrentTab={this.handleSetCurrentTab}\n          onChangeTab={this.handleChangeTab}\n          onResetTab={this.handleResetTab}\n          locationHistory={this.locationHistory}\n        >\n          {this.props.children}\n        </NavManager>\n      </RouteManagerContext.Provider>\n    );\n  }\n}\n\nexport const IonRouter = withRouter(IonRouterInner);\nIonRouter.displayName = 'IonRouter';\n","import {\n  Action as HistoryAction,\n  History,\n  Location as HistoryLocation,\n  createBrowserHistory as createHistory,\n} from 'history';\nimport React from 'react';\nimport { BrowserRouterProps, Router } from 'react-router-dom';\n\nimport { IonRouter } from './IonRouter';\n\ninterface IonReactRouterProps extends BrowserRouterProps {\n  history?: History;\n}\n\nexport class IonReactRouter extends React.Component<IonReactRouterProps> {\n  historyListenHandler?: (location: HistoryLocation, action: HistoryAction) => void;\n  history: History;\n\n  constructor(props: IonReactRouterProps) {\n    super(props);\n    const { history, ...rest } = props;\n    this.history = history || createHistory(rest);\n    this.history.listen(this.handleHistoryChange.bind(this));\n    this.registerHistoryListener = this.registerHistoryListener.bind(this);\n  }\n\n /**\n  * history@4.x passes separate location and action\n  * params. history@5.x passes location and action\n  * together as a single object.\n  * TODO: If support for React Router <=5 is dropped\n  * this logic is no longer needed. We can just assume\n  * a single object with both location and action.\n  */\n  handleHistoryChange(location: HistoryLocation, action: HistoryAction) {\n   const locationValue = (location as any).location || location;\n   const actionValue = (location as any).action || action;\n   if (this.historyListenHandler) {\n     this.historyListenHandler(locationValue, actionValue);\n   }\n }\n\n  registerHistoryListener(cb: (location: HistoryLocation, action: HistoryAction) => void) {\n    this.historyListenHandler = cb;\n  }\n\n  render() {\n    const { children, ...props } = this.props;\n    return (\n      <Router history={this.history} {...props}>\n        <IonRouter registerHistoryListener={this.registerHistoryListener}>{children}</IonRouter>\n      </Router>\n    );\n  }\n}\n","import { Action as HistoryAction, Location as HistoryLocation, MemoryHistory } from 'history';\nimport React from 'react';\nimport { MemoryRouterProps, Router } from 'react-router';\n\nimport { IonRouter } from './IonRouter';\n\ninterface IonReactMemoryRouterProps extends MemoryRouterProps {\n  history: MemoryHistory;\n}\n\nexport class IonReactMemoryRouter extends React.Component<IonReactMemoryRouterProps> {\n  history: MemoryHistory;\n  historyListenHandler?: (location: HistoryLocation, action: HistoryAction) => void;\n\n  constructor(props: IonReactMemoryRouterProps) {\n    super(props);\n    this.history = props.history;\n    this.history.listen(this.handleHistoryChange.bind(this));\n    this.registerHistoryListener = this.registerHistoryListener.bind(this);\n  }\n\n  /**\n   * history@4.x passes separate location and action\n   * params. history@5.x passes location and action\n   * together as a single object.\n   * TODO: If support for React Router <=5 is dropped\n   * this logic is no longer needed. We can just assume\n   * a single object with both location and action.\n   */\n  handleHistoryChange(location: HistoryLocation, action: HistoryAction) {\n    const locationValue = (location as any).location || location;\n    const actionValue = (location as any).action || action;\n    if (this.historyListenHandler) {\n      this.historyListenHandler(locationValue, actionValue);\n    }\n  }\n\n  registerHistoryListener(cb: (location: HistoryLocation, action: HistoryAction) => void) {\n    this.historyListenHandler = cb;\n  }\n\n  render() {\n    const { children, ...props } = this.props;\n    return (\n      <Router {...props}>\n        <IonRouter registerHistoryListener={this.registerHistoryListener}>{children}</IonRouter>\n      </Router>\n    );\n  }\n}\n","import {\n  Action as HistoryAction,\n  History,\n  Location as HistoryLocation,\n  createHashHistory as createHistory,\n} from 'history';\nimport React from 'react';\nimport { BrowserRouterProps, Router } from 'react-router-dom';\n\nimport { IonRouter } from './IonRouter';\n\ninterface IonReactHashRouterProps extends BrowserRouterProps {\n  history?: History;\n}\n\nexport class IonReactHashRouter extends React.Component<IonReactHashRouterProps> {\n  history: History;\n  historyListenHandler?: (location: HistoryLocation, action: HistoryAction) => void;\n\n  constructor(props: IonReactHashRouterProps) {\n    super(props);\n    const { history, ...rest } = props;\n    this.history = history || createHistory(rest);\n    this.history.listen(this.handleHistoryChange.bind(this));\n    this.registerHistoryListener = this.registerHistoryListener.bind(this);\n  }\n\n  /**\n   * history@4.x passes separate location and action\n   * params. history@5.x passes location and action\n   * together as a single object.\n   * TODO: If support for React Router <=5 is dropped\n   * this logic is no longer needed. We can just assume\n   * a single object with both location and action.\n   */\n  handleHistoryChange(location: HistoryLocation, action: HistoryAction) {\n    const locationValue = (location as any).location || location;\n    const actionValue = (location as any).action || action;\n    if (this.historyListenHandler) {\n      this.historyListenHandler(locationValue, actionValue);\n    }\n  }\n\n  registerHistoryListener(cb: (location: HistoryLocation, action: HistoryAction) => void) {\n    this.historyListenHandler = cb;\n  }\n\n  render() {\n    const { children, ...props } = this.props;\n    return (\n      <Router history={this.history} {...props}>\n        <IonRouter registerHistoryListener={this.registerHistoryListener}>{children}</IonRouter>\n      </Router>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}