{"ast":null,"code":"import _regeneratorRuntime from \"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { cacheWrapper } from 'workbox-core/_private/cacheWrapper.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [cache-only]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#cache-only}\n * request strategy.\n *\n * This class is useful if you want to take advantage of any\n * [Workbox plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}.\n *\n * If there is no cache match, this will throw a `WorkboxError` exception.\n *\n * @memberof module:workbox-strategies\n */\nvar CacheOnly = /*#__PURE__*/function () {\n  /**\n   * @param {Object} options\n   * @param {string} options.cacheName Cache name to store and retrieve\n   * requests. Defaults to cache names provided by\n   * [workbox-core]{@link module:workbox-core.cacheNames}.\n   * @param {Array<Object>} options.plugins [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n   * to use in conjunction with this caching strategy.\n   * @param {Object} options.matchOptions [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n   */\n  function CacheOnly() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, CacheOnly);\n    this._cacheName = cacheNames.getRuntimeName(options.cacheName);\n    this._plugins = options.plugins || [];\n    this._matchOptions = options.matchOptions;\n  }\n  /**\n   * This method will perform a request strategy and follows an API that\n   * will work with the\n   * [Workbox Router]{@link module:workbox-routing.Router}.\n   *\n   * @param {Object} options\n   * @param {Request|string} options.request A request to run this strategy for.\n   * @param {Event} [options.event] The event that triggered the request.\n   * @return {Promise<Response>}\n   */\n  _createClass(CacheOnly, [{\n    key: \"handle\",\n    value: function () {\n      var _handle = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(_ref) {\n        var event, request, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              event = _ref.event, request = _ref.request;\n              if (typeof request === 'string') {\n                request = new Request(request);\n              }\n              if (process.env.NODE_ENV !== 'production') {\n                assert.isInstance(request, Request, {\n                  moduleName: 'workbox-strategies',\n                  className: 'CacheOnly',\n                  funcName: 'makeRequest',\n                  paramName: 'request'\n                });\n              }\n              _context.next = 5;\n              return cacheWrapper.match({\n                cacheName: this._cacheName,\n                request: request,\n                event: event,\n                matchOptions: this._matchOptions,\n                plugins: this._plugins\n              });\n            case 5:\n              response = _context.sent;\n              if (process.env.NODE_ENV !== 'production') {\n                logger.groupCollapsed(messages.strategyStart('CacheOnly', request));\n                if (response) {\n                  logger.log(\"Found a cached response in the '\".concat(this._cacheName, \"'\") + \" cache.\");\n                  messages.printFinalResponse(response);\n                } else {\n                  logger.log(\"No response found in the '\".concat(this._cacheName, \"' cache.\"));\n                }\n                logger.groupEnd();\n              }\n              if (response) {\n                _context.next = 9;\n                break;\n              }\n              throw new WorkboxError('no-response', {\n                url: request.url\n              });\n            case 9:\n              return _context.abrupt(\"return\", response);\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function handle(_x) {\n        return _handle.apply(this, arguments);\n      }\n      return handle;\n    }()\n  }]);\n  return CacheOnly;\n}();\nexport { CacheOnly };","map":{"version":3,"names":["assert","cacheNames","cacheWrapper","logger","WorkboxError","messages","CacheOnly","options","_cacheName","getRuntimeName","cacheName","_plugins","plugins","_matchOptions","matchOptions","event","request","Request","process","env","NODE_ENV","isInstance","moduleName","className","funcName","paramName","match","response","groupCollapsed","strategyStart","log","printFinalResponse","groupEnd","url"],"sources":["/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/workbox-strategies/CacheOnly.js"],"sourcesContent":["/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { cacheWrapper } from 'workbox-core/_private/cacheWrapper.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [cache-only]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#cache-only}\n * request strategy.\n *\n * This class is useful if you want to take advantage of any\n * [Workbox plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}.\n *\n * If there is no cache match, this will throw a `WorkboxError` exception.\n *\n * @memberof module:workbox-strategies\n */\nclass CacheOnly {\n    /**\n     * @param {Object} options\n     * @param {string} options.cacheName Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} options.plugins [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} options.matchOptions [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     */\n    constructor(options = {}) {\n        this._cacheName = cacheNames.getRuntimeName(options.cacheName);\n        this._plugins = options.plugins || [];\n        this._matchOptions = options.matchOptions;\n    }\n    /**\n     * This method will perform a request strategy and follows an API that\n     * will work with the\n     * [Workbox Router]{@link module:workbox-routing.Router}.\n     *\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {Event} [options.event] The event that triggered the request.\n     * @return {Promise<Response>}\n     */\n    async handle({ event, request }) {\n        if (typeof request === 'string') {\n            request = new Request(request);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: 'CacheOnly',\n                funcName: 'makeRequest',\n                paramName: 'request',\n            });\n        }\n        const response = await cacheWrapper.match({\n            cacheName: this._cacheName,\n            request,\n            event,\n            matchOptions: this._matchOptions,\n            plugins: this._plugins,\n        });\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart('CacheOnly', request));\n            if (response) {\n                logger.log(`Found a cached response in the '${this._cacheName}'` +\n                    ` cache.`);\n                messages.printFinalResponse(response);\n            }\n            else {\n                logger.log(`No response found in the '${this._cacheName}' cache.`);\n            }\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url });\n        }\n        return response;\n    }\n}\nexport { CacheOnly };\n"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,MAAM,QAAQ,iCAAiC;AACxD,SAASC,UAAU,QAAQ,qCAAqC;AAChE,SAASC,YAAY,QAAQ,uCAAuC;AACpE,SAASC,MAAM,QAAQ,iCAAiC;AACxD,SAASC,YAAY,QAAQ,uCAAuC;AACpE,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C,OAAO,eAAe;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA,IAYMC,SAAS;EACX;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,qBAA0B;IAAA,IAAdC,OAAO,uEAAG,CAAC,CAAC;IAAA;IACpB,IAAI,CAACC,UAAU,GAAGP,UAAU,CAACQ,cAAc,CAACF,OAAO,CAACG,SAAS,CAAC;IAC9D,IAAI,CAACC,QAAQ,GAAGJ,OAAO,CAACK,OAAO,IAAI,EAAE;IACrC,IAAI,CAACC,aAAa,GAAGN,OAAO,CAACO,YAAY;EAC7C;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATI;IAAA;IAAA;MAAA,yEAUA;QAAA;QAAA;UAAA;YAAA;cAAeC,KAAK,QAALA,KAAK,EAAEC,OAAO,QAAPA,OAAO;cACzB,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE;gBAC7BA,OAAO,GAAG,IAAIC,OAAO,CAACD,OAAO,CAAC;cAClC;cACA,IAAIE,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;gBACvCpB,MAAM,CAACqB,UAAU,CAACL,OAAO,EAAEC,OAAO,EAAE;kBAChCK,UAAU,EAAE,oBAAoB;kBAChCC,SAAS,EAAE,WAAW;kBACtBC,QAAQ,EAAE,aAAa;kBACvBC,SAAS,EAAE;gBACf,CAAC,CAAC;cACN;cAAC;cAAA,OACsBvB,YAAY,CAACwB,KAAK,CAAC;gBACtChB,SAAS,EAAE,IAAI,CAACF,UAAU;gBAC1BQ,OAAO,EAAPA,OAAO;gBACPD,KAAK,EAALA,KAAK;gBACLD,YAAY,EAAE,IAAI,CAACD,aAAa;gBAChCD,OAAO,EAAE,IAAI,CAACD;cAClB,CAAC,CAAC;YAAA;cANIgB,QAAQ;cAOd,IAAIT,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;gBACvCjB,MAAM,CAACyB,cAAc,CAACvB,QAAQ,CAACwB,aAAa,CAAC,WAAW,EAAEb,OAAO,CAAC,CAAC;gBACnE,IAAIW,QAAQ,EAAE;kBACVxB,MAAM,CAAC2B,GAAG,CAAC,0CAAmC,IAAI,CAACtB,UAAU,kBAChD,CAAC;kBACdH,QAAQ,CAAC0B,kBAAkB,CAACJ,QAAQ,CAAC;gBACzC,CAAC,MACI;kBACDxB,MAAM,CAAC2B,GAAG,qCAA8B,IAAI,CAACtB,UAAU,cAAW;gBACtE;gBACAL,MAAM,CAAC6B,QAAQ,EAAE;cACrB;cAAC,IACIL,QAAQ;gBAAA;gBAAA;cAAA;cAAA,MACH,IAAIvB,YAAY,CAAC,aAAa,EAAE;gBAAE6B,GAAG,EAAEjB,OAAO,CAACiB;cAAI,CAAC,CAAC;YAAA;cAAA,iCAExDN,QAAQ;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA,CAClB;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;EAAA;AAAA;AAEL,SAASrB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}