{"ast":null,"code":"import _regeneratorRuntime from \"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Deletes the database.\n * Note: this is exported separately from the DBWrapper module because most\n * usages of IndexedDB in workbox dont need deleting, and this way it can be\n * reused in tests to delete databases without creating DBWrapper instances.\n *\n * @param {string} name The database name.\n * @private\n */\nexport var deleteDatabase = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(name) {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return new Promise(function (resolve, reject) {\n            var request = indexedDB.deleteDatabase(name);\n            request.onerror = function () {\n              reject(request.error);\n            };\n            request.onblocked = function () {\n              reject(new Error('Delete blocked'));\n            };\n            request.onsuccess = function () {\n              resolve();\n            };\n          });\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function deleteDatabase(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["deleteDatabase","name","Promise","resolve","reject","request","indexedDB","onerror","error","onblocked","Error","onsuccess"],"sources":["/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/node_modules/workbox-core/_private/deleteDatabase.js"],"sourcesContent":["/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Deletes the database.\n * Note: this is exported separately from the DBWrapper module because most\n * usages of IndexedDB in workbox dont need deleting, and this way it can be\n * reused in tests to delete databases without creating DBWrapper instances.\n *\n * @param {string} name The database name.\n * @private\n */\nexport const deleteDatabase = async (name) => {\n    await new Promise((resolve, reject) => {\n        const request = indexedDB.deleteDatabase(name);\n        request.onerror = () => {\n            reject(request.error);\n        };\n        request.onblocked = () => {\n            reject(new Error('Delete blocked'));\n        };\n        request.onsuccess = () => {\n            resolve();\n        };\n    });\n};\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,gBAAgB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMA,cAAc;EAAA,sEAAG,iBAAOC,IAAI;IAAA;MAAA;QAAA;UAAA;UAAA,OAC/B,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAK;YACnC,IAAMC,OAAO,GAAGC,SAAS,CAACN,cAAc,CAACC,IAAI,CAAC;YAC9CI,OAAO,CAACE,OAAO,GAAG,YAAM;cACpBH,MAAM,CAACC,OAAO,CAACG,KAAK,CAAC;YACzB,CAAC;YACDH,OAAO,CAACI,SAAS,GAAG,YAAM;cACtBL,MAAM,CAAC,IAAIM,KAAK,CAAC,gBAAgB,CAAC,CAAC;YACvC,CAAC;YACDL,OAAO,CAACM,SAAS,GAAG,YAAM;cACtBR,OAAO,EAAE;YACb,CAAC;UACL,CAAC,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CACL;EAAA,gBAbYH,cAAc;IAAA;EAAA;AAAA,GAa1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}