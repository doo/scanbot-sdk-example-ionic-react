[{"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/src/service-worker.ts":"1","/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/src/index.tsx":"2","/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/src/serviceWorkerRegistration.ts":"3","/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/src/reportWebVitals.ts":"4","/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/src/App.tsx":"5","/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/src/pages/Home.tsx":"6","/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/src/pages/ImageEditView.tsx":"7","/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/src/pages/ImagePreview.tsx":"8","/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/src/utils/ImageRepository.tsx":"9","/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/src/utils/BarcodeRepository.tsx":"10"},{"size":2968,"mtime":1675242990034,"results":"11","hashOfConfig":"12"},{"size":858,"mtime":1675242990033,"results":"13","hashOfConfig":"12"},{"size":5256,"mtime":1675242990034,"results":"14","hashOfConfig":"12"},{"size":425,"mtime":1675242990034,"results":"15","hashOfConfig":"12"},{"size":2140,"mtime":1675242990033,"results":"16","hashOfConfig":"12"},{"size":3714,"mtime":1675246133754,"results":"17","hashOfConfig":"12"},{"size":3707,"mtime":1675242990034,"results":"18","hashOfConfig":"12"},{"size":2471,"mtime":1675242990034,"results":"19","hashOfConfig":"12"},{"size":1429,"mtime":1675242990034,"results":"20","hashOfConfig":"12"},{"size":1249,"mtime":1675242990034,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"1d0ivva",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/src/service-worker.ts",[],[],[],"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/src/index.tsx",[],[],"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/src/serviceWorkerRegistration.ts",[],[],"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/src/reportWebVitals.ts",[],[],"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/src/App.tsx",["57"],[],"import { Redirect, Route } from 'react-router-dom';\nimport { IonApp, IonRouterOutlet, setupIonicReact } from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\nimport Home from './pages/Home';\nimport ImagePreview from './pages/ImagePreview';\nimport ImageEditView from './pages/ImageEditView';\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\n\n/* Scanbot SDK */\nimport ScanbotSdk, { ScanbotSDKConfiguration } from 'cordova-plugin-scanbot-sdk';\n\nsetupIonicReact();\n\n// initialize Scanbot SDK\nconst initializeSdk = async () =>\n{\n    const config: ScanbotSDKConfiguration = {\n        loggingEnabled: true,\n        licenseKey: '',\n    };\n    try {\n        ScanbotSdk.initializeSdk(\n          (result) => {\n          if (result.status == \"OK\"){\n            console.log('Scanbot SDK Initialized');\n          }\n         },\n         (error) => { \n          console.log(error.message);\n         },\n         config);\n    } catch (e) {\n        console.error(e);\n    }\n}\n\nconst App: React.FC = () => {\n\n  initializeSdk();\n\n  return (\n    <IonApp>\n      <IonReactRouter>\n        <IonRouterOutlet>\n          <Route exact path=\"/home\">\n            <Home />\n          </Route>\n          <Route exact path=\"/\">\n            <Redirect to=\"/home\" />\n          </Route>\n          <Route exact path=\"/imagepreview\">\n            <ImagePreview />\n          </Route>\n            <Route exact path=\"/imageeditview/:pageId\" component={ImageEditView}>\n          </Route>\n        </IonRouterOutlet>\n      </IonReactRouter>\n    </IonApp>\n  );\n}\n\nexport default App;","/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/src/pages/Home.tsx",["58","59"],[],"import { \n  IonContent, \n  IonHeader, \n  IonPage, \n  IonTitle, \n  IonToolbar,\n  IonItemGroup,\n  IonItemDivider,\n  IonItem,\n  IonLabel,\n  useIonAlert } from '@ionic/react';\nimport './Home.css';\n\nimport { useHistory } from 'react-router';\n\nimport { ImageResultsRepository } from '../utils/ImageRepository';\nimport { BarcodeRepository } from '../utils/BarcodeRepository';\n\nimport ScanbotSdk, { \n  DocumentScannerConfiguration, \n  BarcodeScannerConfiguration} from 'cordova-plugin-scanbot-sdk';\n\nconst Home: React.FC = () => {\n\n  const history = useHistory();\n  const [presentAlert] = useIonAlert();\n\n  // scan document SDK feature\n  const startDocumentScanner = async () => {\n  \n    const configs: DocumentScannerConfiguration = {\n      cameraPreviewMode: 'FIT_IN',\n      interfaceOrientation: 'PORTRAIT',\n      pageCounterButtonTitle: '%d Page(s)',\n      multiPageEnabled: true,\n      ignoreBadAspectRatio: true,\n      topBarBackgroundColor: '#c8193c',\n      bottomBarBackgroundColor: '#c8193c',\n      // see further configs ...\n    };\n    \n    await ScanbotSdk.UI.startDocumentScanner(async (documentScannerResult) => {\n\n        if (documentScannerResult.status === 'CANCELED') {\n          // user has canceled the scanning operation\n          return;\n        } \n\n        await ImageResultsRepository.INSTANCE.addPages(documentScannerResult.pages);\n\n        history.push(\"/imagepreview\");\n\n    }, \n    (error) => {\n      // error handeling call back you can add your logic here\n      presentAlert({\n        header: 'Error',\n        message: error.message,\n        buttons: ['OK'],\n      })\n    }, {uiConfigs: configs});\n  }\n\n  // scan barcode\n  const scanBarcode = async () => {\n    const configs: BarcodeScannerConfiguration = {\n      // Customize colors, text resources, behavior, etc..\n      finderTextHint: 'Please align the barcode or QR code in the frame above to scan it.',\n      interfaceOrientation: 'PORTRAIT',\n      finderLineColor: '#0000ff',\n      barcodeFormats: BarcodeRepository.getAcceptedTypes(), // optional filter for specific barcode types\n      // see further configs ...\n    };\n\n    await ScanbotSdk.UI.startBarcodeScanner((barcodeResults) => {\n      let barcodeString:string = '';\n      if(barcodeResults.status == \"CANCELED\") return;\n\n      if(barcodeResults.barcodes == undefined) return;\n\n      barcodeResults.barcodes.forEach(barcode => {\n        barcodeString += barcode.type + ' : ' + barcode.text + '\\n';\n      });\n\n      presentAlert({\n        header: 'Barcode Results',\n        message: barcodeString,\n        buttons: ['OK'],\n      })\n    }, \n    (error) => {\n      presentAlert({\n        header: 'Error',\n        message: error.message,\n        buttons: ['OK'],\n      })\n    }, \n    {uiConfigs: configs})\n  }\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>Scanbot SDK</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent fullscreen>\n\n        <IonItemGroup>\n          <IonItemDivider>\n            <IonLabel>Document Scan Feature</IonLabel>\n          </IonItemDivider>\n\n          <IonItem onClick={async () => { await startDocumentScanner();}}>\n            <IonLabel>Scan Document</IonLabel>\n          </IonItem>\n          <IonItem onClick={() => { history.push(\"/imagepreview\"); }}>\n            <IonLabel>View Images</IonLabel>\n          </IonItem>\n        </IonItemGroup>\n\n        <IonItemGroup>\n          <IonItemDivider>\n            <IonLabel>Barcode Scan Feature</IonLabel>\n          </IonItemDivider>\n\n          <IonItem onClick={async() => {await scanBarcode()}}>\n            <IonLabel>Scan Barcode</IonLabel>\n          </IonItem>\n        </IonItemGroup>\n\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Home;","/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/src/pages/ImageEditView.tsx",["60","61","62","63"],[],"import { \n    IonContent, \n    IonHeader,\n    IonFooter,\n    IonPage, \n    IonTitle, \n    IonToolbar, \n    IonButton,\n    IonButtons,\n    IonBackButton,\n    IonImg,\n    useIonAlert,\n    useIonViewWillEnter } from '@ionic/react';\n\n  import './Home.css';\n  \n  import React, {useState } from 'react';\n  import { RouteComponentProps, useHistory } from 'react-router';\n  \n  import { ImageResultsRepository } from '../utils/ImageRepository';\n  \n  import ScanbotSdk, { \n    Page } from 'cordova-plugin-scanbot-sdk';\n  \n  interface ImageEditViewIdProps extends RouteComponentProps<{\n    pageId: string;\n}> {}\n\n  const ImageEditView: React.FC<ImageEditViewIdProps> = ({match}) => {\n  \n    let page = ImageResultsRepository.INSTANCE.getPageById(match.params.pageId);\n\n    const history = useHistory();\n    const [presentAlert] = useIonAlert();  \n    const [ url, setUrl ] = useState('');\n    const [ selectedPage, setSelectedPage ] = useState(page);\n\n    useIonViewWillEnter(() => {\n        loadPage();\n    });\n\n    // load selected image\n    function loadPage() {\n\n        if(page == undefined) return;\n\n        setSelectedPage(page);\n\n        generateImageURL(page); \n    }\n\n    // Scanbot SDK cropping feature\n    const imageCrop = (page: Page | undefined) => {\n\n        if (page == undefined){\n            return;\n        }\n        \n        ScanbotSdk.UI.startCroppingScreen(\n            (croppingResult) => {\n \n                if(croppingResult.page == undefined) return;\n                ImageResultsRepository.INSTANCE.updatePage(croppingResult.page);\n\n                generateImageURL(croppingResult.page);\n            }, \n            (error) => {\n                presentAlert({\n                    header: 'Error',\n                    subHeader: error.status,\n                    message: error.message,\n                    buttons: ['OK'],\n                })\n            }, {\n            page: page,\n            uiConfigs: {\n                doneButtonTitle: 'Save',\n                interfaceOrientation: 'PORTRAIT',\n                topBarBackgroundColor: '#c8193c',\n                bottomBarBackgroundColor: '#c8193c',\n                hintTitle: 'Custom hint:\\nDrag the dots to the document edges.',\n                hintTitleColor: '#0000ff'\n            }})\n    }\n\n    // scanbot SDK generate image url feature\n    const generateImageURL = (page: Page) => {\n        ScanbotSdk.getImageData((result) => {\n\n            const extension = 'png';\n\n            let url = `data:image/${extension};base64,` + result.base64ImageData;\n\n            setUrl(url);\n        },\n        (error) => {\n            presentAlert({\n                header: 'Error',\n                subHeader: error.status,\n                message: error.message,\n                buttons: ['OK'],\n            })\n         },\n        { imageFileUri: page.documentPreviewImageFileUri as string }); \n    }\n\n    return (\n      <IonPage>\n        <IonHeader>\n          <IonToolbar>\n            <IonButtons slot=\"start\">\n                <IonBackButton />\n            </IonButtons>\n            <IonTitle>Image Edit View</IonTitle>\n          </IonToolbar>\n        </IonHeader>\n\n        <IonContent fullscreen>\n            <IonImg src={url} />\n        </IonContent>\n\n        <IonFooter>\n            <IonToolbar>\n                <IonButtons slot=\"start\">\n                    <IonButton onClick = { async () => {\n                        imageCrop(selectedPage);\n                    }}>Crop</IonButton>\n                </IonButtons>\n                <IonButtons slot=\"end\">\n                    <IonButton>Filtter</IonButton>\n                </IonButtons>\n            </IonToolbar>\n      </IonFooter>\n      </IonPage>\n    );\n  };\n  \n  export default ImageEditView;","/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/src/pages/ImagePreview.tsx",[],[],"/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/src/utils/ImageRepository.tsx",["64"],[],"import ScanbotSdk, { Page } from \"cordova-plugin-scanbot-sdk\";\n\nexport class ImageResultsRepository {\n\n    public static INSTANCE = new ImageResultsRepository();\n\n    private pages: Page[] = [];\n\n    public getPages(): Page[] {\n        return this.pages;\n    }\n\n    public getPageById(id: string) {\n        return this.pages.find(p => p.pageId === id);\n    }\n\n    public async addPages(pages: Page[]) {\n        this.pages = this.pages.concat(pages);\n    }\n\n    public async updatePage(page: Page) {\n        let replaced = false;\n        for (let i = 0; i < this.pages.length; ++i) {\n            if (this.pages[i].pageId === page.pageId) {\n                this.pages[i] = page;\n                replaced = true;\n                break;\n            }\n        }\n        if (!replaced) {\n            this.pages.push(page);\n        }\n    }\n\n    public async removePage(page: Page) {\n        const index = this.pages.findIndex(p => p.pageId === page.pageId);\n        if (index > -1) {\n            this.pages.splice(index, 1);\n        }\n    }\n\n    public async removeAllPages() {\n        this.pages = [];\n    }\n\n    public fetchDataFromUri(path: string) {\n\n        let imageData: string;\n\n        ScanbotSdk.getImageData((result) => {\n\n            const extension = 'png';\n\n            return imageData = `data:image/${extension};base64,` + result.base64ImageData;\n\n        },\n        () => { },\n        { imageFileUri: path }); \n    } \n}","/Users/chanduranwala/Scanbot/ionic/scanbot-sdk-example-ionic-react/src/utils/BarcodeRepository.tsx",[],[],{"ruleId":"65","severity":1,"message":"66","line":42,"column":29,"nodeType":"67","messageId":"68","endLine":42,"endColumn":31},{"ruleId":"65","severity":1,"message":"66","line":77,"column":32,"nodeType":"67","messageId":"68","endLine":77,"endColumn":34},{"ruleId":"65","severity":1,"message":"66","line":79,"column":34,"nodeType":"67","messageId":"68","endLine":79,"endColumn":36},{"ruleId":"69","severity":1,"message":"70","line":33,"column":11,"nodeType":"71","messageId":"72","endLine":33,"endColumn":18},{"ruleId":"65","severity":1,"message":"66","line":45,"column":17,"nodeType":"67","messageId":"68","endLine":45,"endColumn":19},{"ruleId":"65","severity":1,"message":"66","line":55,"column":18,"nodeType":"67","messageId":"68","endLine":55,"endColumn":20},{"ruleId":"65","severity":1,"message":"66","line":62,"column":40,"nodeType":"67","messageId":"68","endLine":62,"endColumn":42},{"ruleId":"69","severity":1,"message":"73","line":48,"column":13,"nodeType":"71","messageId":"72","endLine":48,"endColumn":30},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'imageData' is assigned a value but never used."]